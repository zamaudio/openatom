Read 10000 bytes of data from ../atomdis/vbios-amd/a68n-vga-1002-9830.bin

Table Format Rev.   01
Table Content Rev.  01
BIOS Boot Message:  '
AMD Fusion Kalindi Generic VBIOS                                            
'
Vendor ID:Device ID 1002:1002

Command Tables:
  0000:   b856  Len 0050  (ASIC_Init)
  0001:   b8a6  Len 0057  (GetDisplaySurfaceSize)
  0002:   b8fe  Len 0037  (ASIC_RegistersInit)
  0003:   -               (VRAM_BlockVenderDetection)
  0004:   d986  Len 01ca  (SetClocksRatio_DIGxEncoderControl)
  0005:   b936  Len 0032  (MemoryControllerInit)
  0006:   -               (EnableCRTCMemReq)
  0007:   -               (MemoryParamAdjust)
  0008:   -               (DVOEncoderControl)
  0009:   b968  Len 00ff  (GPIOPinControl)
  000a:   ba68  Len 0041  (SetEngineClock)
  000b:   -               (SetMemoryClock)
  000c:   baaa  Len 0543  (SetPixelClock)
  000d:   bfee  Len 0199  (DynamicClockGating)
  000e:   -               (ResetMemoryDLL)
  000f:   -               (ResetMemoryDevice)
  0010:   -               (MemoryPLLInit)
  0011:   d8cc  Len 0089  (AdjustDisplayPll)
  0012:   -               (AdjustMemoryController)
  0013:   c1a0  Len 0049  (EnableASIC_StaticPwrMgt)
  0014:   c1ea  Len 0076  (ASIC_StaticPwrMgtStatusChange_SetUniphyInstance)
  0015:   c260  Len 0076  (DAC_LoadDetection)
  0016:   -               (LVTMAEncoderControl)
  0017:   -               (LCD1OutputControl)
  0018:   c2d6  Len 00bd  (DAC1EncoderControl)
  0019:   -               (DAC2EncoderControl)
  001a:   -               (DVOOutputControl)
  001b:   -               (CV1OutputControl)
  001c:   e96e  Len 0038  (GetConditionalGoldenSetting_SetCRTC_DPM_State)
  001d:   -               (TVEncoderControl)
  001e:   -               (TMDSAEncoderControl)
  001f:   -               (LVDSEncoderControl)
  0020:   -               (TV1OutputControl)
  0021:   c394  Len 0078  (EnableScaler)
  0022:   c40c  Len 004b  (BlankCRTC)
  0023:   c458  Len 003e  (EnableCRTC)
  0024:   c496  Len 0120  (GetPixelClock)
  0025:   c5b6  Len 002c  (EnableVGA_Render)
  0026:   -               (EnableVGA_Access_GetSCLKOverMCLKRatio)
  0027:   -               (SetCRTC_Timing)
  0028:   c5e2  Len 0019  (SetCRTC_OverScan)
  0029:   -               (SetCRTC_Replication)
  002a:   c5fc  Len 00cc  (SelectCRTC_Source)
  002b:   c6c8  Len 01bb  (EnableGraphSurfaces)
  002c:   c884  Len 005d  (UpdateCRTC_DoubleBufferRegisters)
  002d:   c8e2  Len 00d9  (LUT_AutoFill)
  002e:   -               (EnableHW_IconCursor)
  002f:   -               (GetMemoryClock)
  0030:   c9bc  Len 0085  (GetEngineClock)
  0031:   ca42  Len 014b  (SetCRTC_UsingDTDTiming)
  0032:   cb8e  Len 07af  (ExternalEncoderControl)
  0033:   -               (LVTMAOutputControl)
  0034:   -               (VRAM_BlockDetectionByStrap)
  0035:   d33e  Len 00e4  (MemoryCleanUp)
  0036:   d422  Len 0239  (ReadEDIDFromHWAssistedI2C_ProcessI2cChannelTransaction)
  0037:   -               (WriteOneByteToHWAssistedI2C)
  0038:   d65c  Len 006a  (ReadHWAssistedI2CStatus_HPDInterruptService)
  0039:   -               (SpeedFanControl)
  003a:   -               (PowerConnectorDetection)
  003b:   -               (MC_Synchronization)
  003c:   d6c6  Len 00d3  (ComputeMemoryEnginePLL)
  003d:   -               (MemoryRefreshConversion)
  003e:   -               (VRAM_GetCurrentInfoBlock)
  003f:   -               (DynamicMemorySettings)
  0040:   -               (MemoryTraining)
  0041:   d79a  Len 0074  (EnableSpreadSpectrumOnPPLL)
  0042:   -               (TMDSAOutputControl)
  0043:   d956  Len 0030  (SetVoltage)
  0044:   -               (DAC1OutputControl)
  0045:   -               (DAC2OutputControl)
  0046:   -               (SetupHWAssistedI2CStatus)
  0047:   c188  Len 0017  (ClockSource)
  0048:   -               (MemoryDeviceInit)
  0049:   d80e  Len 00bd  (EnableYUV)
  004a:   -               (DIG1EncoderControl)
  004b:   db50  Len 047d  (DIG2EncoderControl)
  004c:   dfce  Len 071d  (DIG1TransmitterControl_UNIPHYTransmitterControl)
  004d:   -               (DIG2TransmitterControl_LVTMATransmitterControl)
  004e:   e6ec  Len 0225  (ProcessAuxChannelTransaction)
  004f:   e912  Len 005c  (DPEncoderService)

Data Tables:
  0000:   -                          (UtilityPipeLine)
  0001:   -                          (MultimediaCapabilityInfo)
  0002:   -                          (MultimediaConfigInfo)
  0003:   a6da  Len 00e4  Rev 01:02  (StandardVESA_Timing)    (struct size 01c4)
  0004:   a7be  Len 006c  Rev 02:02  (FirmwareInfo)    (struct size 006c)
  0005:   a82a  Len 0304  Rev 02:01  (DAC_Info)    (struct size 0008)
  0006:   ab2e  Len 00d1  Rev 01:03  (LVDS_Info)    (struct size 0034)
  0007:   b3ba  Len 049c  Rev 03:02  (TMDS_Info)    (struct size 001e)
  0008:   -                          (AnalogTV_Info)
  0009:   -                          (SupportedDevicesInfo)
  000a:   ac00  Len 00dc  Rev 01:01  (GPIO_I2C_Info)
  000b:   acdc  Len 000c  Rev 01:05  (VRAM_UsageByFirmware)    (struct size 000c)
  000c:   ace8  Len 001c  Rev 01:01  (GPIO_Pin_LUT)
  000d:   ad04  Len 00a8  Rev 01:01  (VESA_ToInternalModeLUT)
  000e:   -                          (ComponentVideoInfo)
  000f:   adac  Len 0200  Rev 06:01  (PowerPlayInfo)
  0010:   -                          (CompassionateData)
  0011:   b3a2  Len 0018  Rev 02:01  (SaveRestoreInfo_DispDevicePriorityInfo)
  0012:   -                          (PPLL_SS_Info_SS_Info)
  0013:   -                          (OemInfo)
  0014:   -                          (XTMDS_Info)
  0015:   -                          (MclkSS_Info)
  0016:   afac  Len 014d  Rev 01:03  (Object_Info_Object_Header)    (struct size 0010)
  0017:   b0fa  Len 002d  Rev 01:01  (IndirectIOAccess)
  0018:   -                          (MC_InitParameter_AdjustARB_SEQ)
  0019:   -                          (ASIC_VDDC_Info)
  001a:   b328  Len 0040  Rev 03:01  (ASIC_InternalSS_Info_ASIC_MVDDC_Info)    (struct size 0034)
  001b:   b368  Len 0039  Rev 02:03  (TV_VideoMode_DispOutInfo)
  001c:   -                          (VRAM_Info)
  001d:   -                          (MemoryTrainingInfo_ASIC_MVDDQ_Info)
  001e:   b128  Len 0200  Rev 01:08  (IntegratedSystemInfo)    (struct size 0200)
  001f:   -                          (ASIC_ProfilingInfo_ASIC_VDDCI_Info)
  0020:   -                          (VoltageObjectInfo_VRAM_GPIO_DetectionInfo)
  0021:   -                          (PowerSourceInfo)


*** Command Tables:

command_table  0000b856  #00  (ASIC_Init):

        /*    param size 0x03    */

  0006:   my_ClockSource();
  0008:   my_ASIC_RegistersInit();
  000a:   BYTE_1(param[0x02])= 0x07
  000e:   my_DynamicClockGating();
  0010:   (param[0x02]) = 0;
  0013:   my_DynamicClockGating();
  0015:   my_EnableCRTC();
  0017:   BYTE_0(param[0x02])+= 0x01
  001b:   BYTE_0(param[0x02])COMP 0x02
  001f:   JUMP_Below 0x0013
  0022:   my_udelay 0x02
  0024:   my_MemoryControllerInit();
  0026:   SET_DATA_BLOCK 0x04 (FirmwareInfo)
  0028:   BYTES_23(param[0x02])= BYTES_01(data[0x002e])
  002d:   BYTES_23(param[0x02])COMP 0x0000
  0032:   JUMP_Equal 0x003c
  0035:   BYTES_01(param[0x02])= 0x0001
  003a:   my_SetVoltage();
  003c:   (param[0x02])= (param[0x00])
  0040:   BYTE_3(param[0x02])|= 0x08
  0044:   my_SetEngineClock();
  0046:   my_DIG2EncoderControl();
  0048:   BYTE_1(my_radeon_reg(0x05d0))|= 0x02
  004d:   my_mdelay 0x01
  004f:   return;
}


command_table  0000b8a6  #01  (GetDisplaySurfaceSize):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  000b:   BYTES_01(param[0x00])= BYTES_01(my_radeon_reg(0x1a0d))
  0010:   BYTES_01(param[0x00])-= BYTES_01(my_radeon_reg(0x1a0b))
  0015:   BYTES_23(param[0x00])= BYTES_01(my_radeon_reg(0x1a0e))
  001a:   BYTES_23(param[0x00])-= BYTES_01(my_radeon_reg(0x1a0c))
  001f:   (WS_FB_WIN)= (my_radeon_reg(0x1a04))
  0024:   (WS_FB_WIN)&= 0x00ffffff
  002b:   (WS_QUOTIENT) = 0;
  002e:   BYTE_0(WS_QUOTIENT)= BYTE_0(my_radeon_reg(0x1a01))
  0033:   BYTE_0(WS_QUOTIENT)&= 0x03
  0037:   (WS_FB_WIN)>>= (WS_QUOTIENT)
  003b:   BYTES_01(WS_QUOTIENT)= BYTES_23(my_radeon_reg(0x1b5c))
  0040:   (WS_FB_WIN)+= (WS_QUOTIENT)
  0044:   (WS_FB_WIN)/= (my_radeon_reg(0x1a06))
  0049:   BYTES_01(WS_QUOTIENT)+= BYTES_01(my_radeon_reg(0x1b5c))
  004e:   BYTES_01(param[0x01])= BYTES_01(WS_REMAINDER)
  0052:   BYTES_23(param[0x01])= BYTES_01(WS_QUOTIENT)
  0056:   return;
}


command_table  0000b8fe  #02  (ASIC_RegistersInit):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (my_radeon_reg(0x0b00))= 0x0f200029
  0011:   (my_radeon_reg(0x0bcc))= 0x00000001
  0019:   MASK   (my_radeon_reg(0x0bd3))  &  0xffe00000  |  0x00321be0
  0025:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  0027:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0038])
  002c:   BYTE_0(WS_REMAINDER)&= 0x3c
  0030:   MASK   BYTE_0(my_radeon_reg(0x1847))  &  0xc3  |  BYTE_0(WS_REMAINDER)
  0036:   return;
}


command_table  00000000  #03  (VRAM_BlockVenderDetection):

        /*    param size 0x01    */

command_table  0000d986  #04  (SetClocksRatio_DIGxEncoderControl):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (WS_FB_WIN)= (param[0x01])
  000d:   BYTE_0(param[0x01])= BYTE_2(param[0x00])
  0011:   SHIFT_RIGHT BYTE_0(param[0x01])  by  04
  0015:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x01])
  0019:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  001b:   (param[0x01])= (WS_FB_WIN)
  001f: 
          
                          switch  BYTE_3(param[0x00])
        0f->004b 08->0179 09->0162 0a->0169 13->0171 0b->0181 0c->0189 0d->0199
        10->01b2
  0048:   goto 0x015e
  004b:   (my_radeon_reg(0x1c83)) = 0;
  004f:   BYTE_0(param[0x01])COMP 0x01
  0053:   JUMP_Equal 0x010c
  0056:   BYTES_01(my_radeon_reg(0x1c03))= 0x001f
  005c:   BYTE_0(param[0x01])COMP 0x00
  0060:   JUMP_Equal 0x0071
  0063:   BYTE_0(param[0x01])COMP 0x02
  0067:   JUMP_Equal 0x00fb
  006a:   BYTE_0(param[0x01])COMP 0x05
  006e:   JUMP_NotEqual 0x0103
  0071:   BYTE_2(my_radeon_reg(0x1c00))&= 0xfe
  0076:   BYTES_01(my_radeon_reg(0x1cc1)) = 0;
  007a:   BYTE_2(param[0x01])COMP 0x00
  007e:   JUMP_NotEqual 0x0085
  0081:   BYTE_2(param[0x01])= 0x02
  0085:   BYTE_2(param[0x01])-= 0x01
  0089:   BYTE_3(my_radeon_reg(0x1cc1))= BYTE_2(param[0x01])
  008e:   BYTE_0(my_radeon_reg(0x1cc3))TEST 0x01
  0093:   JUMP_NotEqual 0x00e3
  0096:   SET_DATA_BLOCK 0xff (this table)
  0098:   BYTES_01(WS_DATAPTR)+= 0x01c2
  009d:   BYTE_0(WS_REMAINDER)= BYTE_2(param[0x00])
  00a1:   (WS_REMAINDER)&= 0x00000003
  00a8:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  00ac:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  00b0:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  00b5:   BYTE_1(my_radeon_reg(0x1cc9))&= 0xfe
  00ba:   (my_radeon_reg(0x1cca))= 0x00008000
  00c2:   (WS_QUOTIENT) = 0;
  00c5:   BYTES_01(WS_QUOTIENT)= BYTES_01(param[0x00])
  00c9:   (WS_QUOTIENT)*= 0x00008000
  00d0:   (WS_QUOTIENT)/= (WS_REMAINDER)
  00d4:   (my_radeon_reg(0x1ccb))= (WS_QUOTIENT)
  00d9:   BYTE_3(my_radeon_reg(0x1ccc))|= 0x10
  00de:   BYTE_1(my_radeon_reg(0x1c00))|= 0x04
  00e3:   BYTE_0(param[0x01])= BYTE_0(my_radeon_reg(0x1c00))
  00e8:   BYTE_0(param[0x01])&= 0x07
  00ec:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  00ee:   SHIFT_LEFT BYTE_1(WS_FB_WIN)  by  04
  00f2:   BYTE_2(my_radeon_reg(0x1b9c))= BYTE_1(WS_FB_WIN)
  00f7:   SET_REG_BLOCK 0x0000
  00fa:   return;
}
  00fb:   (my_radeon_reg(0x1c83))= 0x00000001
  0103:   BYTES_01(my_radeon_reg(0x1c7c))&= 0xfcef
  0109:   goto 0x0145
  010c:   BYTES_01(my_radeon_reg(0x1c03))= 0x0063
  0112:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0114:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  0119:   BYTE_3(WS_REMAINDER)TEST 0x20
  011d:   JUMP_Equal 0x0136
  0120:   BYTE_0(my_radeon_reg(0x1c8c))|= 0x01
  0125:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  012a:   BYTE_3(WS_REMAINDER)TEST 0x02
  012e:   JUMP_Equal 0x0136
  0131:   BYTE_0(my_radeon_reg(0x1c8c))|= 0x10
  0136:   BYTE_3(WS_REMAINDER)TEST 0x01
  013a:   JUMP_Equal 0x0154
  013d:   BYTE_1(my_radeon_reg(0x1c8c))|= 0x01
  0142:   goto 0x014c
  0145:   BYTE_1(param[0x01])COMP 0x04
  0149:   JUMP_BelowOrEq 0x0154
  014c:   BYTE_2(my_radeon_reg(0x1c00))|= 0x01
  0151:   goto 0x0159
  0154:   BYTE_2(my_radeon_reg(0x1c00))&= 0xfe
  0159:   BYTE_1(my_radeon_reg(0x1c00))|= 0x04
  015e:   SET_REG_BLOCK 0x0000
  0161:   return;
}
  0162:   BYTE_0(my_radeon_reg(0x1cd1)) = 0;
  0166:   goto 0x015e
  0169:   BYTE_0(my_radeon_reg(0x1cd1))= 0x01
  016e:   goto 0x015e
  0171:   BYTE_0(my_radeon_reg(0x1cd1))= 0x02
  0176:   goto 0x015e
  0179:   BYTE_0(my_radeon_reg(0x1cc0))&= 0xef
  017e:   goto 0x015e
  0181:   BYTE_0(my_radeon_reg(0x1cc0))|= 0x10
  0186:   goto 0x015e
  0189:   BYTES_01(my_radeon_reg(0x1cc3)) = 0;
  018d:   my_udelay 0xc8
  018f:   BYTE_0(my_radeon_reg(0x1cc4))|= 0x01
  0194:   my_udelay 0x32
  0196:   goto 0x015e
  0199:   BYTE_1(my_radeon_reg(0x1cc9))|= 0x01
  019e:   my_udelay 0x0a
  01a0:   BYTE_0(my_radeon_reg(0x1cc4))&= 0xfe
  01a5:   my_udelay 0x0a
  01a7:   BYTES_01(my_radeon_reg(0x1cc3))= 0x0201
  01ad:   my_udelay 0xc8
  01af:   goto 0x015e
  01b2:   BYTE_0(my_radeon_reg(0x1cd5))|= 0x10
  01b7:   BYTE_0(my_radeon_reg(0x1cde))= BYTE_0(param[0x01])
  01bc:   goto 0x015e
  01bf:   
                          CTB_DS  8 bytes


command_table  0000b936  #05  (MemoryControllerInit):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_0(my_radeon_reg(0x1524)) = 0;
  000d:   (WS_REMAINDER) = 0;
  0010:   BYTES_23(WS_REMAINDER)= BYTES_01(my_radeon_reg(0x0809))
  0015:   (my_radeon_reg(0x0b01))= (WS_REMAINDER)
  001a:   BYTE_0(my_radeon_reg(0x00c9))= BYTE_3(WS_REMAINDER)
  001f:   SHIFT_LEFT (WS_REMAINDER)  by  08
  0023:   (my_radeon_reg(0x00c4))= (WS_REMAINDER)
  0028:   BYTE_0(my_radeon_reg(0x082b)) = 0;
  002c:   BYTE_0(my_radeon_reg(0x1524))|= 0x03
  0031:   return;
}


command_table  00000000  #06  (EnableCRTCMemReq):

        /*    param size 0x01    */

command_table  00000000  #07  (MemoryParamAdjust):

        /*    param size 0x01    */

command_table  00000000  #08  (DVOEncoderControl):

        /*    param size 0x01    */

command_table  0000b968  #09  (GPIOPinControl):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   SET_DATA_BLOCK 0x0c (GPIO_Pin_LUT)
  000b:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  0010:   BYTES_01(WS_REMAINDER)+= BYTES_01(WS_DATAPTR)
  0014:   BYTES_01(WS_DATAPTR)+= 0x0004
  0019:   BYTE_0(param[0x00])COMP BYTE_0(data[0x0003])
  001e:   JUMP_Equal 0x0030
  0021:   BYTES_01(WS_DATAPTR)+= 0x0004
  0026:   BYTES_01(WS_DATAPTR)COMP BYTES_01(WS_REMAINDER)
  002a:   JUMP_Equal 0x00fb
  002d:   goto 0x0019
  0030:   (WS_SHIFT) = 0;
  0033:   BYTE_2(WS_REMAINDER)= BYTE_0(data[0x0002])
  0038:   BYTE_3(WS_REMAINDER)= BYTE_2(WS_REMAINDER)
  003c:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  0041:   BYTES_01(WS_REMAINDER)COMP 0x0000
  0046:   JUMP_Equal 0x00fb
  0049:   BYTES_01(WS_REMAINDER)COMP 0x1945
  004e:   JUMP_NotEqual 0x006b
  0051:   BYTE_3(WS_REMAINDER)COMP 0x10
  0055:   JUMP_Above 0x005f
  0058:   SHIFT_RIGHT BYTE_3(WS_REMAINDER)  by  01
  005c:   goto 0x006b
  005f:   BYTE_3(WS_REMAINDER)&= 0x03
  0063:   SHIFT_LEFT BYTE_3(WS_REMAINDER)  by  02
  0067:   BYTE_3(WS_REMAINDER)+= 0x0c
  006b:   BYTE_0(WS_SHIFT)= BYTE_3(WS_REMAINDER)
  006f:   (my_radeon_reg(0x0000)) = 0;
  0073:   BYTES_01(WS_REMAINDER)-= 0x0001
  0078:   BYTES_01(my_radeon_reg(0x0000))= BYTES_01(WS_REMAINDER)
  007d:   (my_radeon_reg(0x0001))|= (WS_OR_MASK)
  0082:   BYTES_01(WS_REMAINDER)+= 0x0002
  0087:   BYTES_01(my_radeon_reg(0x0000))= BYTES_01(WS_REMAINDER)
  008c:   BYTE_0(WS_SHIFT)= BYTE_2(WS_REMAINDER)
  0090:   BYTE_3(param[0x00])TEST 0x01
  0094:   JUMP_NotEqual 0x00d7
  0097:   (my_radeon_reg(0x0001))&= (WS_AND_MASK)
  009c:   BYTES_01(WS_REMAINDER)+= 0x0001
  00a1:   BYTES_01(my_radeon_reg(0x0000))= BYTES_01(WS_REMAINDER)
  00a6:   (my_radeon_reg(0x0001))TEST (WS_OR_MASK)
  00ab:   JUMP_Equal 0x00b9
  00ae:   BYTE_0(WS_SHIFT)= BYTE_1(param[0x00])
  00b2:   BYTE_2(param[0x00])|= BYTE_0(WS_OR_MASK)
  00b6:   goto 0x00c1
  00b9:   BYTE_0(WS_SHIFT)= BYTE_1(param[0x00])
  00bd:   BYTE_2(param[0x00])&= BYTE_0(WS_AND_MASK)
  00c1:   BYTES_01(WS_REMAINDER)-= 0x0003
  00c6:   BYTES_01(my_radeon_reg(0x0000))= BYTES_01(WS_REMAINDER)
  00cb:   BYTE_0(WS_SHIFT)= BYTE_3(WS_REMAINDER)
  00cf:   (my_radeon_reg(0x0001))&= (WS_AND_MASK)
  00d4:   goto 0x00fa
  00d7:   (my_radeon_reg(0x0001))|= (WS_OR_MASK)
  00dc:   BYTES_01(WS_REMAINDER)-= 0x0001
  00e1:   BYTES_01(my_radeon_reg(0x0000))= BYTES_01(WS_REMAINDER)
  00e6:   BYTE_2(param[0x00])COMP 0x01
  00ea:   JUMP_Equal 0x00f5
  00ed:   (my_radeon_reg(0x0001))&= (WS_AND_MASK)
  00f2:   goto 0x00fa
  00f5:   (my_radeon_reg(0x0001))|= (WS_OR_MASK)
  00fa:   return;
}
  00fb:   BYTE_0(param[0x00]) = 0;
  00fe:   return;
}


command_table  0000ba68  #0a  (SetEngineClock):

        /*    param size 0x02    */

  0006:   (param[0x01])= (param[0x00])
  000a:   BYTE_3(param[0x01])= 0x02
  000e:   my_ComputeMemoryEnginePLL();
  0010:   my_INDIRECT_IO_MM();
  0013:   (my_radeon_reg(0x0082))= 0xc0500090
  001b:   BYTE_0(my_radeon_reg(0x0083))TEST 0x01
  0020:   JUMP_Equal 0x0013
  0023:   (my_radeon_reg(0x0082))= 0xc050008c
  002b:   BYTE_0(my_radeon_reg(0x0083))= BYTE_3(param[0x01])
  0030:   (my_radeon_reg(0x0082))= 0xc0500090
  0038:   BYTE_0(my_radeon_reg(0x0083))TEST 0x01
  003d:   JUMP_Equal 0x0030
  0040:   return;
}


command_table  00000000  #0b  (SetMemoryClock):

        /*    param size 0x01    */

command_table  0000baaa  #0c  (SetPixelClock):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_0(param[0x02])COMP 0x08
  000d:   JUMP_NotEqual 0x0231
  0010:   (param[0x00])COMP 0x00000000
  0017:   JUMP_Equal 0x021e
  001a:   BYTE_0(my_radeon_reg(0x1707))TEST 0x02
  001f:   JUMP_Equal 0x003e
  0022:   BYTE_0(my_radeon_reg(0x171b))TEST 0x02
  0027:   JUMP_Equal 0x003e
  002a:   BYTE_0(my_radeon_reg(0x172f))TEST 0x02
  002f:   JUMP_Equal 0x003e
  0032:   BYTE_0(my_radeon_reg(0x013c))= 0x81
  0037:   my_udelay 0x01
  0039:   BYTE_0(my_radeon_reg(0x013c))&= 0xfe
  003e:   BYTE_0(my_radeon_reg(0x1841)) = 0;
  0042:   BYTE_0(my_radeon_reg(0x031f)) = 0;
  0046:   (param[0x01])= (param[0x00])
  004a:   (param[0x00])= 0x0000cb20
  0051:   BYTE_0(my_radeon_reg(0x1847))TEST 0x10
  0056:   JUMP_Equal 0x0069
  0059:   (param[0x00])= 0x0003016e
  0060:   my_EnableASIC_StaticPwrMgt();
  0062:   (param[0x00])= 0x00009c40
  0069:   my_ComputeMemoryEnginePLL();
  006b:   BYTE_3(my_radeon_reg(0x0124))COMP BYTE_3(param[0x00])
  0070:   JUMP_Equal 0x00c0
  0073:   BYTE_2(my_radeon_reg(0x0124))TEST 0x10
  0078:   JUMP_Equal 0x0073
  007b:   BYTE_0(my_radeon_reg(0x0115))&= 0xfe
  0080:   (WS_QUOTIENT)= (my_radeon_reg(0x0124))
  0085:   BYTE_3(WS_QUOTIENT)= BYTE_3(param[0x00])
  0089:   BYTE_0(WS_QUOTIENT)COMP 0x00
  008d:   JUMP_NotEqual 0x0094
  0090:   BYTE_0(WS_QUOTIENT)= 0x68
  0094:   (my_radeon_reg(0x0124))= (WS_QUOTIENT)
  0099:   BYTE_2(my_radeon_reg(0x0124))TEST 0x10
  009e:   JUMP_Equal 0x0099
  00a1:   BYTE_2(my_radeon_reg(0x0124))TEST 0x08
  00a6:   JUMP_Equal 0x00a1
  00a9:   BYTE_0(my_radeon_reg(0x1847))TEST 0x10
  00ae:   JUMP_NotEqual 0x00c0
  00b1:   (param[0x02])= (param[0x00])
  00b5:   BYTES_01(param[0x00])= 0x016f
  00ba:   my_EnableASIC_StaticPwrMgt();
  00bc:   (param[0x00])= (param[0x02])
  00c0:   BYTE_3(param[0x00]) = 0;
  00c3:   (param[0x00])*= 0x0000c350
  00ca:   (WS_FB_WIN)= (WS_QUOTIENT)
  00ce:   (param[0x00])*= 0x00000005
  00d5:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  00d7:   (WS_REMAINDER) = 0;
  00da:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0110])
  00df:   (WS_QUOTIENT)*= (WS_REMAINDER)
  00e3:   (WS_QUOTIENT)/= 0x00000014
  00ea:   (WS_FB_WIN)-= (WS_QUOTIENT)
  00ee:   (my_radeon_reg(0x0142))= (WS_FB_WIN)
  00f3:   (my_radeon_reg(0x0146))= (WS_FB_WIN)
  00f8:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0110])
  00fd:   BYTES_01(WS_REMAINDER)COMP 0x0000
  0102:   JUMP_Equal 0x0124
  0105:   BYTE_2(my_radeon_reg(0x0115))= 0x01
  010a:   (my_radeon_reg(0x0113))= 0x07270e00
  0112:   (my_radeon_reg(0x0114))= (WS_FB_WIN)
  0117:   BYTE_0(my_radeon_reg(0x0115))|= 0x01
  011c:   BYTE_1(my_radeon_reg(0x0115))TEST 0x02
  0121:   JUMP_Equal 0x011c
  0124:   BYTE_3(param[0x03]) = 0;
  0127:   (WS_FB_WIN) = 0;
  012a:   (my_radeon_reg(0x0082))= 0xc05001c8
  0132:   BYTES_01(WS_REMAINDER)= BYTES_12(my_radeon_reg(0x0083))
  0137:   BYTES_01(WS_REMAINDER)&= 0x0380
  013c:   BYTE_1(WS_REMAINDER)TEST 0x01
  0140:   JUMP_Equal 0x0166
  0143:   BYTE_3(param[0x03])|= 0x01
  0147:   BYTES_01(WS_FB_WIN)= 0x9c40
  014c:   BYTE_0(WS_REMAINDER)TEST 0x80
  0150:   JUMP_NotEqual 0x0158
  0153:   BYTES_01(WS_FB_WIN)= 0x7530
  0158:   BYTE_1(WS_REMAINDER)TEST 0x02
  015c:   JUMP_Equal 0x017f
  015f:   SHIFT_RIGHT BYTES_01(WS_FB_WIN)  by  01
  0163:   goto 0x017f
  0166:   (my_radeon_reg(0x0082))= 0xc0500118
  016e:   BYTE_0(my_radeon_reg(0x0083))TEST 0x20
  0173:   JUMP_Equal 0x017f
  0176:   BYTE_3(param[0x03])|= 0x01
  017a:   BYTES_01(WS_FB_WIN)= 0x2710
  017f:   BYTE_0(my_radeon_reg(0x1847))TEST 0x10
  0184:   JUMP_Equal 0x01c4
  0187:   (param[0x01])COMP 0x00009c40
  018e:   JUMP_Above 0x01c4
  0191:   BYTE_3(param[0x03])|= 0x02
  0195:   SET_DATA_BLOCK 0xff (this table)
  0197:   BYTES_01(WS_DATAPTR)+= 0x0534
  019c:   (param[0x01])COMP (data[0x0000])
  01a1:   JUMP_BelowOrEq 0x01ac
  01a4:   BYTES_01(WS_DATAPTR)+= 0x0005
  01a9:   goto 0x019c
  01ac:   (param[0x01])= (data[0x0000])
  01b1:   BYTE_0(param[0x03])= BYTE_0(data[0x0004])
  01b6:   (param[0x01])COMP (WS_FB_WIN)
  01ba:   JUMP_NotEqual 0x01c4
  01bd:   BYTE_3(param[0x03])|= 0x04
  01c1:   goto 0x01d2
  01c4:   BYTE_3(param[0x03])TEST 0x01
  01c8:   JUMP_Equal 0x01d2
  01cb:   BYTES_01(param[0x00])= 0x016d
  01d0:   my_EnableASIC_StaticPwrMgt();
  01d2:   (param[0x00])= (param[0x01])
  01d6:   my_ComputeMemoryEnginePLL();
  01d8:   (param[0x02])= (param[0x00])
  01dc:   BYTE_3(param[0x02]) = 0;
  01df:   BYTE_0(my_radeon_reg(0x0124))COMP BYTE_3(param[0x00])
  01e4:   JUMP_Equal 0x01fc
  01e7:   BYTE_2(my_radeon_reg(0x0124))TEST 0x08
  01ec:   JUMP_Equal 0x01e7
  01ef:   BYTE_0(my_radeon_reg(0x0124))= BYTE_3(param[0x00])
  01f4:   BYTE_2(my_radeon_reg(0x0124))TEST 0x08
  01f9:   JUMP_Equal 0x01f4
  01fc:   BYTE_3(param[0x03])TEST 0x02
  0200:   JUMP_Equal 0x0219
  0203:   (param[0x02])= (param[0x01])
  0207:   BYTE_3(param[0x03])TEST 0x04
  020b:   JUMP_NotEqual 0x0219
  020e:   BYTE_2(param[0x00])= BYTE_0(param[0x03])
  0212:   BYTES_01(param[0x00])= 0x016c
  0217:   my_EnableASIC_StaticPwrMgt();
  0219:   (param[0x00])= (param[0x02])
  021d:   return;
}
  021e:   BYTE_0(my_radeon_reg(0x013c))|= 0x01
  0223:   BYTE_0(my_radeon_reg(0x1841))|= 0x01
  0228:   BYTE_1(my_radeon_reg(0x1841))TEST 0x01
  022d:   JUMP_Equal 0x0228
  0230:   return;
}
  0231:   (param[0x00])TEST 0x00ffffff
  0238:   JUMP_Equal 0x0256
  023b:   BYTE_1(param[0x02])COMP 0x24
  023f:   JUMP_NotEqual 0x0246
  0242:   BYTE_2(param[0x02])= 0x00
  0246:   BYTE_0(param[0x02])COMP 0x02
  024a:   JUMP_Above 0x02c1
  024d:   my_GetPixelClock();
  024f:   BYTE_3(param[0x02])TEST 0x01
  0253:   JUMP_Equal 0x02c5
  0256:   BYTE_3(param[0x00])COMP 0x01
  025a:   JUMP_Above 0x026e
  025d:   (WS_FB_WIN)= (param[0x00])
  0261:   BYTE_0(param[0x00])= BYTE_3(param[0x00])
  0265:   BYTE_1(param[0x00]) = 0;
  0268:   my_EnableCRTC();
  026a:   (param[0x00])= (WS_FB_WIN)
  026e:   BYTE_0(param[0x02])COMP 0x02
  0272:   JUMP_Equal 0x0289
  0275:   SET_REG_BLOCK 0x0014
  0278:   BYTE_0(param[0x02])COMP 0x00
  027c:   JUMP_Equal 0x0289
  027f:   SET_REG_BLOCK 0x0028
  0282:   BYTE_0(param[0x02])COMP 0x01
  0286:   JUMP_NotEqual 0x0501
  0289:   (my_radeon_reg(0x1706)) = 0;
  028d:   BYTE_1(my_radeon_reg(0x1704))&= 0xef
  0292:   (my_radeon_reg(0x1705)) = 0;
  0296:   (my_radeon_reg(0x1703)) = 0;
  029a:   BYTE_0(my_radeon_reg(0x1707))&= 0xf7
  029f:   BYTE_0(my_radeon_reg(0x1707))|= 0x01
  02a4:   my_udelay 0x32
  02a6:   BYTE_0(my_radeon_reg(0x1707))&= 0x7f
  02ab:   my_udelay 0x32
  02ad:   BYTE_0(my_radeon_reg(0x1707))|= 0x02
  02b2:   my_udelay 0xc8
  02b4:   (param[0x00])TEST 0x00ffffff
  02bb:   JUMP_NotEqual 0x02c1
  02be:   goto 0x0501
  02c1:   BYTES_01(WS_REMAINDER)= BYTES_01(WS_REGPTR)
  02c5:   BYTE_3(param[0x00])COMP 0x01
  02c9:   JUMP_Above 0x02f6
  02cc:   (WS_FB_WIN)= (param[0x00])
  02d0:   BYTE_0(param[0x00])= BYTE_3(param[0x00])
  02d4:   BYTE_0(param[0x00])|= 0x80
  02d8:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  02da:   (param[0x00])= (WS_FB_WIN)
  02de:   BYTE_3(param[0x02])TEST 0x02
  02e2:   JUMP_Equal 0x02f0
  02e5:   (my_radeon_reg(0x00cc))= 0x00010301
  02ed:   goto 0x02f6
  02f0:   BYTES_12(my_radeon_reg(0x00cc))&= 0xfefc
  02f6:   BYTE_3(param[0x02])TEST 0x01
  02fa:   JUMP_Equal 0x03bc
  02fd:   BYTES_01(WS_REGPTR)= BYTES_01(WS_REMAINDER)
  0301:   SET_DATA_BLOCK 0xff (this table)
  0303:   BYTES_01(WS_DATAPTR)+= 0x0508
  0308:   BYTES_01(param[0x01])COMP BYTES_01(data[0x0000])
  030d:   JUMP_BelowOrEq 0x0318
  0310:   BYTES_01(WS_DATAPTR)+= 0x0006
  0315:   goto 0x0308
  0318:   (my_radeon_reg(0x1708))= (data[0x0002])
  031e:   BYTE_1(my_radeon_reg(0x1700))= 0x20
  0323:   BYTE_3(param[0x02])TEST 0x10
  0327:   JUMP_Equal 0x0332
  032a:   BYTE_2(my_radeon_reg(0x1707))= 0x00
  032f:   goto 0x0338
  0332:   MASK   BYTE_2(my_radeon_reg(0x1707))  &  0xf8  |  0x01
  0338:   BYTE_0(my_radeon_reg(0x170c))|= 0x01
  033d:   BYTE_3(param[0x02])TEST 0x02
  0341:   JUMP_Equal 0x034f
  0344:   (my_radeon_reg(0x1702))= 0x007e7e7e
  034c:   goto 0x036d
  034f:   BYTE_0(my_radeon_reg(0x1700))= BYTE_3(param[0x01])
  0354:   BYTES_23(my_radeon_reg(0x1701))= BYTES_01(param[0x01])
  0359:   BYTE_0(my_radeon_reg(0x1701))&= 0xf0
  035e:   BYTE_2(my_radeon_reg(0x1702))= BYTE_2(param[0x01])
  0363:   BYTE_0(my_radeon_reg(0x1702))= BYTE_3(param[0x03])
  0368:   BYTE_1(my_radeon_reg(0x1702))= BYTE_2(param[0x01])
  036d:   my_udelay 0x64
  036f:   BYTE_0(my_radeon_reg(0x170c)) = 0;
  0373:   BYTE_0(my_radeon_reg(0x1707))&= 0xfd
  0378:   my_udelay 0x32
  037a:   BYTE_0(my_radeon_reg(0x1707))|= 0x80
  037f:   my_mdelay 0x02
  0381:   BYTE_0(my_radeon_reg(0x1707))&= 0xfe
  0386:   my_udelay 0x0a
  0388:   BYTE_2(my_radeon_reg(0x1707))TEST 0x10
  038d:   JUMP_Equal 0x0386
  0390:   BYTE_2(my_radeon_reg(0x1707))TEST 0x20
  0395:   JUMP_Equal 0x0390
  0398:   BYTE_3(param[0x02])TEST 0x02
  039c:   JUMP_NotEqual 0x03b7
  039f:   BYTE_0(my_radeon_reg(0x1701))= BYTE_2(param[0x03])
  03a4:   BYTES_01(param[0x03])COMP 0x0000
  03a9:   JUMP_Equal 0x03b7
  03ac:   BYTES_01(my_radeon_reg(0x1705))= BYTES_01(param[0x03])
  03b1:   MASK   BYTE_2(my_radeon_reg(0x1705))  &  0xfc  |  0x01
  03b7:   BYTE_0(my_radeon_reg(0x1707))|= 0x08
  03bc:   SET_REG_BLOCK 0x0000
  03bf:   BYTE_3(param[0x00])COMP 0x01
  03c3:   JUMP_Above 0x0501
  03c6:   (WS_FB_WIN)= (param[0x00])
  03ca:   BYTE_3(WS_FB_WIN) = 0;
  03cd:   (WS_REMAINDER) = 0;
  03d0:   BYTE_0(WS_REMAINDER)= BYTE_3(param[0x02])
  03d4:   BYTE_0(WS_REMAINDER)&= 0x0c
  03d8:   SHIFT_RIGHT BYTE_0(WS_REMAINDER)  by  01
  03dc:   SET_DATA_BLOCK 0xff (this table)
  03de:   BYTES_01(WS_DATAPTR)+= 0x052c
  03e3:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  03e7:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0001])
  03ec:   (WS_FB_WIN)*= (WS_REMAINDER)
  03f0:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0000])
  03f5:   (WS_QUOTIENT)/= (WS_REMAINDER)
  03f9:   (WS_REMAINDER)= 0x05f5e100
  0400:   (WS_REMAINDER)/= (WS_QUOTIENT)
  0404:   (WS_QUOTIENT)COMP 0x00010000
  040b:   JUMP_Below 0x0413
  040e:   BYTES_01(WS_QUOTIENT)= 0xffff
  0413:   BYTE_0(param[0x00])= BYTE_3(param[0x00])
  0417:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0419:   BYTES_01(my_radeon_reg(0x1b30))= BYTES_01(WS_QUOTIENT)
  041e:   SET_REG_BLOCK 0x0000
  0421:   (param[0x03]) = 0;
  0424:   BYTE_0(param[0x03])= BYTE_3(param[0x00])
  0428:   SHIFT_LEFT BYTES_01(param[0x03])  by  02
  042c:   BYTE_2(param[0x02])COMP 0x00
  0430:   JUMP_NotEqual 0x0488
  0433:   BYTES_01(WS_REGPTR)= BYTES_01(param[0x03])
  0437:   (WS_FB_WIN)*= 0x0000c350
  043e:   (WS_FB_WIN)= (WS_QUOTIENT)
  0442:   (my_radeon_reg(0x0141))COMP (WS_QUOTIENT)
  0447:   JUMP_NotEqual 0x0452
  044a:   BYTE_0(my_radeon_reg(0x0140))TEST 0x10
  044f:   JUMP_NotEqual 0x0501
  0452:   SET_REG_BLOCK 0x0000
  0455:   BYTE_1(param[0x00]) = 0;
  0458:   my_EnableCRTC();
  045a:   BYTES_01(WS_REGPTR)= BYTES_01(param[0x03])
  045e:   BYTE_0(my_radeon_reg(0x0140))&= 0xef
  0463:   (my_radeon_reg(0x0141))= (WS_FB_WIN)
  0468:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  046a:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0110])
  046f:   BYTES_01(WS_REMAINDER)COMP 0x0000
  0474:   JUMP_NotEqual 0x0480
  0477:   MASK   BYTE_0(my_radeon_reg(0x0140))  &  0xdf  |  0x10
  047d:   goto 0x0501
  0480:   BYTE_0(my_radeon_reg(0x0140))|= 0x30
  0485:   goto 0x0501
  0488:   BYTES_01(WS_REGPTR)= BYTES_01(param[0x03])
  048c:   BYTE_0(WS_FB_WIN)= BYTE_3(param[0x02])
  0490:   BYTE_0(WS_FB_WIN)&= 0x0c
  0494:   SHIFT_LEFT BYTE_0(WS_FB_WIN)  by  02
  0498:   BYTE_0(WS_FB_WIN)|= 0x01
  049c:   BYTE_2(param[0x02])= BYTE_0(param[0x02])
  04a0:   BYTE_2(param[0x02])+= 0x01
  04a4:   BYTE_0(param[0x02])COMP 0x02
  04a8:   JUMP_NotEqual 0x04ae
  04ab:   BYTE_2(param[0x02]) = 0;
  04ae:   BYTE_3(param[0x02])TEST 0x01
  04b2:   JUMP_NotEqual 0x04ce
  04b5:   BYTE_0(my_radeon_reg(0x0140))COMP BYTE_2(param[0x02])
  04ba:   JUMP_NotEqual 0x04c9
  04bd:   BYTE_0(WS_REGPTR)= BYTE_0(param[0x02])
  04c1:   BYTE_0(my_radeon_reg(0x0138))COMP BYTE_0(WS_FB_WIN)
  04c6:   JUMP_Equal 0x0501
  04c9:   BYTE_1(param[0x00]) = 0;
  04cc:   my_EnableCRTC();
  04ce:   BYTE_0(WS_REGPTR)= BYTE_0(param[0x02])
  04d2:   BYTE_0(my_radeon_reg(0x0138))&= 0xfe
  04d7:   BYTES_01(WS_REGPTR)= BYTES_01(param[0x03])
  04db:   BYTE_0(my_radeon_reg(0x0140))= BYTE_2(param[0x02])
  04e0:   BYTE_0(WS_REGPTR)= BYTE_0(param[0x02])
  04e4:   BYTE_0(my_radeon_reg(0x0138))= BYTE_0(WS_FB_WIN)
  04e9:   BYTE_3(param[0x02])TEST 0x02
  04ed:   JUMP_Equal 0x0501
  04f0:   SET_REG_BLOCK 0x0000
  04f3:   BYTE_0(WS_SHIFT)= BYTE_0(param[0x00])
  04f7:   BYTE_0(my_radeon_reg(0x00c1))|= BYTE_0(WS_OR_MASK)
  04fc:   BYTE_1(my_radeon_reg(0x00c1))|= BYTE_0(WS_OR_MASK)
  0501:   SET_REG_BLOCK 0x0000
  0504:   return;
}
  0505: 
          
                          CTB_DS  59 bytes


command_table  0000bfee  #0d  (DynamicClockGating):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_1(param[0x00])COMP 0x07
  000d:   JUMP_Equal 0x0099
  0010:   (WS_REMAINDER) = 0;
  0013:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x00])
  0017:   SHIFT_LEFT BYTE_0(WS_REMAINDER)  by  02
  001b:   BYTES_01(WS_REGPTR)= BYTES_01(WS_REMAINDER)
  001f:   BYTE_1(param[0x00])COMP 0x01
  0023:   JUMP_Equal 0x008c
  0026:   BYTE_0(my_radeon_reg(0x1761)) = 0;
  002a:   BYTE_3(my_radeon_reg(0x1762))COMP 0x30
  002f:   JUMP_NotEqual 0x002a
  0032:   BYTE_0(WS_REGPTR)= BYTE_0(param[0x00])
  0036:   BYTES_01(my_radeon_reg(0x02fa))= 0x0002
  003c:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  003e:   BYTE_0(my_radeon_reg(0x1bbe))= 0x02
  0043:   BYTE_0(my_radeon_reg(0x1a91))= 0xcc
  0048:   BYTE_2(my_radeon_reg(0x1a8d))= 0x20
  004d:   BYTE_0(my_radeon_reg(0x1a7d))|= 0x01
  0052:   BYTE_0(my_radeon_reg(0x1b34))|= 0x01
  0057:   BYTE_0(my_radeon_reg(0x1b3a))= 0x11
  005c:   BYTES_01(my_radeon_reg(0x1b33))= 0x7fff
  0062:   (my_radeon_reg(0x1bb3))= 0x10040101
  006a:   BYTE_2(my_radeon_reg(0x1bb6))|= 0x01
  006f:   (my_radeon_reg(0x1b31))= 0x04000800
  0077:   BYTE_0(my_radeon_reg(0x1bc5))= 0x04
  007c:   BYTES_01(my_radeon_reg(0x1b86))= 0x0004
  0082:   BYTES_01(my_radeon_reg(0x1be7))= 0x0001
  0088:   SET_REG_BLOCK 0x0000
  008b:   return;
}
  008c:   BYTES_01(my_radeon_reg(0x1760)) = 0;
  0090:   BYTE_0(my_radeon_reg(0x1761))|= 0x01
  0095:   SET_REG_BLOCK 0x0000
  0098:   return;
}
  0099:   (my_radeon_reg(0x031a))= 0x06186186
  00a1:   (my_radeon_reg(0x031d))= 0x06186186
  00a9:   (my_radeon_reg(0x0311))= 0x002bc006
  00b1:   MASK   (my_radeon_reg(0x02f6))  &  0x9fff08ff  |  0x2000f404
  00bd:   (my_radeon_reg(0x02f9))= 0x00025161
  00c5:   (my_radeon_reg(0x0314))= 0x10009000
  00cd:   BYTE_2(my_radeon_reg(0x02f8))= 0x04
  00d2:   MASK   BYTE_1(my_radeon_reg(0x1707))  &  0xe7  |  0x08
  00d8:   MASK   BYTE_1(my_radeon_reg(0x171b))  &  0xe7  |  0x08
  00de:   BYTE_1(my_radeon_reg(0x1724))|= 0x01
  00e3:   (my_radeon_reg(0x013b))= 0x00120230
  00eb:   (my_radeon_reg(0x0130))= 0x0010bb80
  00f3:   BYTES_23(my_radeon_reg(0x17ba))= 0x0030
  00f9:   BYTE_0(my_radeon_reg(0x17b9))= 0x01
  00fe:   (my_radeon_reg(0x0131))= 0x0801003c
  0106:   BYTE_1(my_radeon_reg(0x00d4))= 0x02
  010b:   BYTES_01(my_radeon_reg(0x00fc))= 0x0100
  0111:   (my_radeon_reg(0x00dc))= 0x00190013
  0119:   BYTE_0(my_radeon_reg(0x00e0))= 0x2f
  011e:   BYTES_01(my_radeon_reg(0x00d8))= 0x0001
  0124:   (my_radeon_reg(0x00e4))= 0x9d1eb744
  012c:   (my_radeon_reg(0x00dd))= 0x00190012
  0134:   BYTE_0(my_radeon_reg(0x00e1))= 0x2a
  0139:   BYTES_01(my_radeon_reg(0x00d9))= 0x0001
  013f:   (my_radeon_reg(0x00e5))= 0x9d1eb744
  0147:   (my_radeon_reg(0x190a))= 0x0000000f
  014f:   (my_radeon_reg(0x1838))= 0x30000000
  0157:   BYTE_0(my_radeon_reg(0x1778)) = 0;
  015b:   BYTE_0(my_radeon_reg(0x177e))TEST 0x01
  0160:   JUMP_NotEqual 0x015b
  0163:   (my_radeon_reg(0x177d))= 0x00002000
  016b:   (my_radeon_reg(0x177c))= 0x100010ff
  0173:   BYTE_0(my_radeon_reg(0x1778))|= 0x01
  0178:   BYTES_23(param[0x00])= 0x0700
  017d:   my_DAC1EncoderControl();
  017f:   (param[0x00]) = 0;
  0182:   my_ProcessAuxChannelTransaction();
  0184:   SET_DATA_BLOCK 0x16 (Object_Info_Object_Header)
  0186:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0004])
  018b:   BYTES_01(WS_REMAINDER)TEST 0x0002
  0190:   JUMP_Equal 0x0088
  0193:   BYTE_2(my_radeon_reg(0x05c9))|= 0x04
  0198:   return;
}


command_table  00000000  #0e  (ResetMemoryDLL):

        /*    param size 0x01    */

command_table  00000000  #0f  (ResetMemoryDevice):

        /*    param size 0x01    */

command_table  00000000  #10  (MemoryPLLInit):

        /*    param size 0x01    */

command_table  0000d8cc  #11  (AdjustDisplayPll):

        /*    param size 0x03    */

  0006:   BYTES_23(WS_REMAINDER)= BYTES_23(param[0x00])
  000a:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x01])
  000e:   BYTES_23(param[0x00]) = 0;
  0011:   BYTES_01(param[0x01]) = 0;
  0014:   
                          switch  BYTE_2(WS_REMAINDER)
        14->002a 1e->003d 20->003d 21->003d
  0029:   return;
}
  002a:   BYTE_0(WS_REMAINDER)TEST 0x01
  002e:   JUMP_NotEqual 0x0088
  0031:   BYTE_0(WS_REMAINDER)TEST 0x08
  0035:   JUMP_NotEqual 0x0088
  0038:   SHIFT_LEFT BYTES_01(param[0x00])  by  01
  003c:   return;
}
  003d:   BYTE_3(WS_REMAINDER)COMP 0x00
  0041:   JUMP_NotEqual 0x004f
  0044:   BYTES_01(param[0x00])= 0x2710
  0049:   BYTES_01(param[0x01])= 0x0c01
  004e:   return;
}
  004f:   BYTE_3(WS_REMAINDER)COMP 0x01
  0053:   JUMP_Equal 0x0075
  0056:   BYTE_0(WS_REMAINDER)TEST 0x40
  005a:   JUMP_Equal 0x0088
  005d:   (WS_QUOTIENT)= 0x0001d4c0
  0064:   (WS_QUOTIENT)/= (param[0x00])
  0068:   SHIFT_LEFT BYTE_0(WS_QUOTIENT)  by  01
  006c:   BYTE_1(param[0x01])= BYTE_0(WS_QUOTIENT)
  0070:   SHIFT_RIGHT (param[0x00])  by  01
  0074:   return;
}
  0075:   BYTES_01(param[0x01])= 0x0001
  007a:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  007c:   BYTE_3(WS_QUOTIENT)= BYTE_0(data[0x0028])
  0081:   BYTE_3(WS_QUOTIENT)TEST 0x01
  0085:   JUMP_NotEqual 0x005d
  0088:   return;
}


command_table  00000000  #12  (AdjustMemoryController):

        /*    param size 0x01    */

command_table  0000c1a0  #13  (EnableASIC_StaticPwrMgt):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   
                          switch  BYTE_0(param[0x00])
        6d->001f 6c->0022 6f->0025 6e->0028
  001e:   return;
}
  001f:   goto 0x0028
  0022:   goto 0x0028
  0025:   goto 0x0028
  0028:   (WS_REMAINDER) = 0;
  002b:   BYTE_0(WS_REMAINDER)= BYTE_2(param[0x00])
  002f:   (my_radeon_reg(0x00bd))= (WS_REMAINDER)
  0034:   (WS_REMAINDER) = 0;
  0037:   BYTES_01(WS_REMAINDER)= BYTES_01(param[0x00])
  003b:   (my_radeon_reg(0x00b5))= (WS_REMAINDER)
  0040:   BYTE_0(my_radeon_reg(0x00b6))COMP 0x00
  0045:   JUMP_Equal 0x0040
  0048:   return;
}


command_table  0000c1ea  #14  (ASIC_StaticPwrMgtStatusChange_SetUniphyInstance):

        /*    param size 0x02    */

  0006:   SET_DATA_BLOCK 0xff (this table)
  0008:   BYTES_01(WS_ATTR) = 0;
  000b:   BYTES_01(WS_DATAPTR)+= 0x0050
  0010:   BYTE_0(WS_ATTR)= BYTE_0(param[0x00])
  0014:   BYTE_0(WS_ATTR)&= 0xf0
  0018:   
                          switch  BYTE_0(WS_ATTR)
        00->0037 40->002a 80->0032
  0029:   return;
}
  002a:   BYTES_01(WS_DATAPTR)+= 0x001a
  002f:   goto 0x0037
  0032:   BYTES_01(WS_DATAPTR)+= 0x000e
  0037:   BYTE_0(WS_ATTR)= BYTE_0(param[0x00])
  003b:   BYTE_0(WS_ATTR)&= 0x07
  003f:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_ATTR)
  0043:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_ATTR)
  0047:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  004c:   return;
}
  004d: 
          
                          CTB_DS  38 bytes


command_table  0000c260  #15  (DAC_LoadDetection):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTES_23(WS_REMAINDER)= BYTES_01(my_radeon_reg(0x19e4))
  000e:   (WS_FB_WIN)= (my_radeon_reg(0x19f5))
  0013:   BYTES_01(WS_QUOTIENT)= BYTES_12(my_radeon_reg(0x19f7))
  0018:   BYTE_0(my_radeon_reg(0x19e4))|= 0x01
  001d:   BYTE_0(my_radeon_reg(0x19ee)) = 0;
  0021:   BYTES_01(my_radeon_reg(0x19f4)) = 0;
  0025:   BYTE_0(my_radeon_reg(0x19f6))= 0x01
  002a:   BYTE_2(my_radeon_reg(0x19f7))= 0x07
  002f:   BYTE_0(my_radeon_reg(0x19f5)) = 0;
  0033:   my_mdelay 0x05
  0035:   (my_radeon_reg(0x19f5)) = 0;
  0039:   BYTES_01(my_radeon_reg(0x19f4))= 0x01e6
  003f:   my_udelay 0xc8
  0041:   BYTE_1(my_radeon_reg(0x19f7))|= 0x01
  0046:   my_udelay 0x64
  0048:   BYTE_3(WS_QUOTIENT)= BYTE_0(my_radeon_reg(0x19f8))
  004d:   BYTE_3(WS_QUOTIENT)&= 0x0e
  0051:   BYTES_01(my_radeon_reg(0x19f6)) = 0;
  0055:   BYTES_01(my_radeon_reg(0x19e4))= BYTES_23(WS_REMAINDER)
  005a:   (my_radeon_reg(0x19f5))= (WS_FB_WIN)
  005f:   BYTES_12(my_radeon_reg(0x19f7))= BYTES_01(WS_QUOTIENT)
  0064:   BYTE_3(WS_QUOTIENT)COMP 0x00
  0068:   JUMP_Equal 0x006f
  006b:   BYTE_3(WS_QUOTIENT)= 0x02
  006f:   MASK   BYTE_0(my_radeon_reg(0x05c9))  &  0xfc  |  BYTE_3(WS_QUOTIENT)
  0075:   return;
}


command_table  00000000  #16  (LVTMAEncoderControl):

        /*    param size 0x01    */

command_table  00000000  #17  (LCD1OutputControl):

        /*    param size 0x01    */

command_table  0000c2d6  #18  (DAC1EncoderControl):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_3(param[0x00])COMP 0x01
  000d:   JUMP_NotEqual 0x0042
  0010:   BYTE_0(my_radeon_reg(0x0128))|= 0x01
  0015:   BYTE_0(my_radeon_reg(0x19e4))&= 0xfd
  001a:   BYTE_0(my_radeon_reg(0x19e4))|= 0x01
  001f:   BYTE_0(my_radeon_reg(0x19f3))|= 0x01
  0024:   BYTE_0(my_radeon_reg(0x19f5)) = 0;
  0028:   my_udelay 0x14
  002a:   (my_radeon_reg(0x19f5)) = 0;
  002e:   my_udelay 0x02
  0030:   BYTES_01(my_radeon_reg(0x19f4)) = 0;
  0034:   (my_radeon_reg(0x19f3)) = 0;
  0038:   (my_radeon_reg(0x19ec)) = 0;
  003c:   BYTE_0(my_radeon_reg(0x19e4))|= 0x02
  0041:   return;
}
  0042:   (my_radeon_reg(0x19f5))|= 0x01010100
  004a:   BYTE_0(my_radeon_reg(0x19f5))|= 0x01
  004f:   BYTE_0(my_radeon_reg(0x19e4))&= 0xfc
  0054:   BYTES_01(my_radeon_reg(0x19f4)) = 0;
  0058:   BYTES_01(my_radeon_reg(0x19f3))|= 0x0701
  005e:   BYTE_0(my_radeon_reg(0x0128)) = 0;
  0062:   BYTE_3(param[0x00])COMP 0x07
  0066:   JUMP_NotEqual 0x00bc
  0069:   BYTE_0(my_radeon_reg(0x19fe))&= 0xfb
  006e:   (my_radeon_reg(0x19fd))= 0x00202002
  0076:   (my_radeon_reg(0x0082))= 0xc010407c
  007e:   (WS_QUOTIENT)= (my_radeon_reg(0x0083))
  0083:   SHIFT_RIGHT (WS_QUOTIENT)  by  07
  0087:   BYTE_0(WS_QUOTIENT)&= 0x3f
  008b:   (my_radeon_reg(0x0082))= 0xc010407c
  0093:   (WS_REMAINDER)= (my_radeon_reg(0x0083))
  0098:   SHIFT_RIGHT (WS_REMAINDER)  by  01
  009c:   BYTE_0(WS_REMAINDER)&= 0x3f
  00a0:   BYTE_2(WS_QUOTIENT)= BYTE_0(WS_REMAINDER)
  00a4:   BYTE_0(WS_QUOTIENT)COMP 0x00
  00a8:   JUMP_Equal 0x00b0
  00ab:   BYTE_1(my_radeon_reg(0x19fd))= BYTE_0(WS_QUOTIENT)
  00b0:   BYTE_2(WS_QUOTIENT)COMP 0x00
  00b4:   JUMP_Equal 0x00bc
  00b7:   BYTE_2(my_radeon_reg(0x19fd))= BYTE_2(WS_QUOTIENT)
  00bc:   return;
}


command_table  00000000  #19  (DAC2EncoderControl):

        /*    param size 0x01    */

command_table  00000000  #1a  (DVOOutputControl):

        /*    param size 0x01    */

command_table  00000000  #1b  (CV1OutputControl):

        /*    param size 0x01    */

command_table  0000e96e  #1c  (GetConditionalGoldenSetting_SetCRTC_DPM_State):

        /*    param size 0x01    */

  0006:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  000b:   BYTES_01(WS_DATAPTR)+= 0x0002
  0010:   BYTE_0(WS_SHIFT)= BYTE_2(param[0x00])
  0014:   BYTE_2(WS_REMAINDER)= BYTE_0(WS_OR_MASK)
  0018:   BYTE_3(param[0x00])COMP BYTE_0(data[0x0002])
  001d:   JUMP_NotEqual 0x0030
  0020:   BYTE_2(WS_REMAINDER)TEST BYTE_0(data[0x0003])
  0025:   JUMP_Equal 0x0030
  0028:   BYTES_01(param[0x00])COMP BYTES_01(data[0x0000])
  002d:   JUMP_BelowOrEq 0x0037
  0030:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  0034:   goto 0x0018
  0037:   return;
}


command_table  00000000  #1d  (TVEncoderControl):

        /*    param size 0x01    */

command_table  00000000  #1e  (TMDSAEncoderControl):

        /*    param size 0x01    */

command_table  00000000  #1f  (LVDSEncoderControl):

        /*    param size 0x01    */

command_table  00000000  #20  (TV1OutputControl):

        /*    param size 0x01    */

command_table  0000c394  #21  (EnableScaler):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  000b:   BYTE_2(my_radeon_reg(0x1b51))|= 0x01
  0010:   BYTE_0(my_radeon_reg(0x1b54)) = 0;
  0014:   BYTE_0(my_radeon_reg(0x1b44))|= 0x01
  0019:   BYTE_0(my_radeon_reg(0x1b45)) = 0;
  001d:   
                          switch  BYTE_1(param[0x00])
        00->0031 01->0039 02->004d
  002e:   goto 0x0070
  0031:   BYTE_0(my_radeon_reg(0x1b45))= 0x02
  0036:   goto 0x003e
  0039:   BYTE_0(my_radeon_reg(0x1b45))= 0x01
  003e:   BYTE_0(my_radeon_reg(0x1b42)) = 0;
  0042:   (my_radeon_reg(0x1b43)) = 0;
  0046:   (my_radeon_reg(0x1b47)) = 0;
  004a:   goto 0x0070
  004d:   BYTES_01(my_radeon_reg(0x1b43))= 0x0101
  0053:   (my_radeon_reg(0x1b47))= 0x00010001
  005b:   BYTE_1(my_radeon_reg(0x1b48))|= 0x01
  0060:   BYTE_1(my_radeon_reg(0x1b4b))|= 0x01
  0065:   BYTES_01(my_radeon_reg(0x1b53))= 0x1010
  006b:   BYTE_0(my_radeon_reg(0x1b42))= 0x01
  0070:   BYTE_2(my_radeon_reg(0x1b51)) = 0;
  0074:   SET_REG_BLOCK 0x0000
  0077:   return;
}


command_table  0000c40c  #22  (BlankCRTC):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_2(my_radeon_reg(0x05cb))TEST 0x01
  000e:   JUMP_Equal 0x0015
  0011:   BYTE_1(param[0x00])= 0x01
  0015:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0017:   BYTE_2(my_radeon_reg(0x1b9d)) = 0;
  001b:   BYTE_1(my_radeon_reg(0x1b9d))= BYTE_1(param[0x00])
  0020:   BYTE_1(param[0x00])COMP 0x00
  0024:   JUMP_Equal 0x0047
  0027:   BYTE_2(my_radeon_reg(0x1b9c))TEST 0x01
  002c:   JUMP_Equal 0x0047
  002f:   BYTE_0(my_radeon_reg(0x1ba3))TEST 0x01
  0034:   JUMP_NotEqual 0x002f
  0037:   BYTE_0(my_radeon_reg(0x1ba3))TEST 0x01
  003c:   JUMP_Equal 0x0037
  003f:   BYTE_0(my_radeon_reg(0x1ba3))TEST 0x01
  0044:   JUMP_NotEqual 0x003f
  0047:   SET_REG_BLOCK 0x0000
  004a:   return;
}


command_table  0000c458  #23  (EnableCRTC):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  000b:   BYTE_1(param[0x00])COMP 0x01
  000f:   JUMP_Equal 0x0030
  0012:   BYTE_1(my_radeon_reg(0x1b9c))|= 0x03
  0017:   BYTE_0(my_radeon_reg(0x1b9c))&= 0xfe
  001c:   BYTE_2(my_radeon_reg(0x1b9c))TEST 0x01
  0021:   JUMP_NotEqual 0x001c
  0024:   BYTE_3(my_radeon_reg(0x1b7c))&= 0x7f
  0029:   BYTE_0(my_radeon_reg(0x1ba9)) = 0;
  002d:   goto 0x003a
  0030:   BYTE_3(my_radeon_reg(0x1b7c))|= 0x80
  0035:   BYTE_0(my_radeon_reg(0x1b9c))|= 0x01
  003a:   SET_REG_BLOCK 0x0000
  003d:   return;
}


command_table  0000c496  #24  (GetPixelClock):

        /*    param size 0x04    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (WS_QUOTIENT) = 0;
  000c:   BYTES_01(WS_QUOTIENT)= BYTES_01(param[0x01])
  0010:   (WS_QUOTIENT)*= 0x000f4240
  0017:   (WS_QUOTIENT)+= (param[0x03])
  001b:   (WS_QUOTIENT)/= 0x0000000a
  0022:   (WS_QUOTIENT)*= 0x00000030
  0029:   (WS_REMAINDER) = 0;
  002c:   BYTE_0(WS_REMAINDER)= BYTE_3(param[0x01])
  0030:   (WS_QUOTIENT)/= (WS_REMAINDER)
  0034:   (WS_QUOTIENT)/= 0x000003e8
  003b:   (WS_FB_WIN)= (WS_QUOTIENT)
  003f:   (WS_REMAINDER)COMP 0x000001f4
  0046:   JUMP_BelowOrEq 0x0050
  0049:   (WS_FB_WIN)+= 0x00000001
  0050:   (param[0x03])COMP 0x00000000
  0057:   JUMP_Equal 0x0084
  005a:   BYTES_01(param[0x01])+= 0x0001
  005f:   (WS_QUOTIENT)= 0x000f4240
  0066:   (WS_QUOTIENT)-= (param[0x03])
  006a:   (WS_QUOTIENT)/= 0x000186a0
  0071:   BYTE_2(param[0x03])= BYTE_0(WS_QUOTIENT)
  0075:   SHIFT_LEFT (WS_REMAINDER)  by  0e
  0079:   (WS_REMAINDER)/= 0x000061a8
  0080:   BYTES_01(param[0x03])= BYTES_01(WS_QUOTIENT)
  0084:   BYTE_3(param[0x03])= BYTE_2(param[0x01])
  0088:   BYTE_2(param[0x02])COMP 0x00
  008c:   JUMP_Equal 0x00a5
  008f:   (WS_FB_WIN)+= 0x000001e0
  0096:   (WS_REMAINDER)= (param[0x00])
  009a:   BYTE_3(WS_REMAINDER) = 0;
  009d:   (WS_FB_WIN)/= (WS_REMAINDER)
  00a1:   BYTE_3(param[0x03])= BYTE_0(WS_QUOTIENT)
  00a5:   BYTE_2(param[0x03])|= 0x10
  00a9:   BYTE_3(param[0x02])TEST 0x01
  00ad:   JUMP_NotEqual 0x0118
  00b0:   BYTE_0(param[0x02])COMP 0x02
  00b4:   JUMP_Equal 0x00c4
  00b7:   SET_REG_BLOCK 0x0014
  00ba:   BYTE_0(param[0x02])COMP 0x00
  00be:   JUMP_Equal 0x00c4
  00c1:   SET_REG_BLOCK 0x0028
  00c4:   (WS_REMAINDER)= (my_radeon_reg(0x1707))
  00c9:   MASK   (WS_REMAINDER)  &  0xfff8fffc  |  0x00010008
  00d4:   BYTE_3(param[0x02])TEST 0x10
  00d8:   JUMP_Equal 0x00e0
  00db:   MASK   BYTE_2(WS_REMAINDER)  &  0xf8  |  0x00
  00e0:   (my_radeon_reg(0x1707))COMP (WS_REMAINDER)
  00e5:   JUMP_NotEqual 0x0118
  00e8:   BYTE_0(my_radeon_reg(0x1700))COMP BYTE_3(param[0x01])
  00ed:   JUMP_NotEqual 0x0118
  00f0:   BYTES_23(my_radeon_reg(0x1701))COMP BYTES_01(param[0x01])
  00f5:   JUMP_NotEqual 0x0118
  00f8:   BYTE_0(my_radeon_reg(0x1701))COMP BYTE_2(param[0x03])
  00fd:   JUMP_NotEqual 0x0118
  0100:   BYTES_01(my_radeon_reg(0x1705))COMP BYTES_01(param[0x03])
  0105:   JUMP_NotEqual 0x0118
  0108:   BYTE_2(my_radeon_reg(0x1702))COMP BYTE_2(param[0x01])
  010d:   JUMP_NotEqual 0x0118
  0110:   BYTE_0(my_radeon_reg(0x1702))COMP BYTE_3(param[0x03])
  0115:   JUMP_Equal 0x011c
  0118:   BYTE_3(param[0x02])|= 0x01
  011c:   SET_REG_BLOCK 0x0000
  011f:   return;
}


command_table  0000c5b6  #25  (EnableVGA_Render):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_0(my_radeon_reg(0x00fc))COMP BYTE_0(param[0x00])
  000e:   JUMP_NotEqual 0x0019
  0011:   BYTE_2(my_radeon_reg(0x00c0))|= 0x01
  0016:   goto 0x0026
  0019:   BYTE_1(my_radeon_reg(0x00fc))COMP BYTE_0(param[0x00])
  001e:   JUMP_NotEqual 0x0026
  0021:   BYTE_2(my_radeon_reg(0x00c0))|= 0x02
  0026:   BYTE_2(my_radeon_reg(0x00c1))|= 0x01
  002b:   return;
}


command_table  00000000  #26  (EnableVGA_Access_GetSCLKOverMCLKRatio):

        /*    param size 0x01    */

command_table  00000000  #27  (SetCRTC_Timing):

        /*    param size 0x01    */

command_table  0000c5e2  #28  (SetCRTC_OverScan):

        /*    param size 0x03    */

  0006:   my_INDIRECT_IO_MM();
  0009:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  000b:   (my_radeon_reg(0x1b5e))= (param[0x00])
  0010:   (my_radeon_reg(0x1b5f))= (param[0x01])
  0015:   SET_REG_BLOCK 0x0000
  0018:   return;
}


command_table  00000000  #29  (SetCRTC_Replication):

        /*    param size 0x01    */

command_table  0000c5fc  #2a  (SelectCRTC_Source):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009: 
          
                          switch  BYTE_1(param[0x00])
        00->0033 07->003b 03->0043 09->0043 0a->0043 0b->0043 0c->0043 0d->0043
        0e->0043
  0032:   return;
}
  0033:   BYTE_0(my_radeon_reg(0x19e5))= BYTE_0(param[0x00])
  0038:   goto 0x00b6
  003b:   BYTE_0(my_radeon_reg(0x1859))= BYTE_0(param[0x00])
  0040:   goto 0x00b6
  0043:   BYTE_3(param[0x00])= BYTE_0(param[0x00])
  0047:   BYTE_0(param[0x00]) = 0;
  004a:   BYTE_1(param[0x00])COMP 0x03
  004e:   JUMP_Equal 0x0059
  0051:   BYTE_0(param[0x00])= BYTE_1(param[0x00])
  0055:   BYTE_0(param[0x00])-= 0x08
  0059:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  005b:   MASK   BYTE_0(my_radeon_reg(0x1c00))  &  0xf8  |  BYTE_3(param[0x00])
  0061:   BYTE_0(param[0x00])= BYTE_3(param[0x00])
  0065:   BYTE_2(param[0x00])COMP 0x01
  0069:   JUMP_NotEqual 0x00b6
  006c:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  006e:   (my_radeon_reg(0x1bf2)) = 0;
  0072:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0074:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  0079:   BYTE_3(WS_REMAINDER)&= 0x70
  007d:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  007f:   (WS_QUOTIENT)= (data[0x0140])
  0084:   (WS_QUOTIENT)COMP 0x00000000
  008b:   JUMP_Equal 0x0096
  008e:   (my_radeon_reg(0x1bf2))= (WS_QUOTIENT)
  0093:   goto 0x00bc
  0096:   BYTE_3(WS_REMAINDER)COMP 0x20
  009a:   JUMP_Above 0x00bc
  009d:   JUMP_NotEqual 0x00ab
  00a0:   (my_radeon_reg(0x1bf2))|= 0x0000f900
  00a8:   goto 0x00bc
  00ab:   (my_radeon_reg(0x1bf2))|= 0x0000a100
  00b3:   goto 0x00bc
  00b6:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  00b8:   (my_radeon_reg(0x1bf2)) = 0;
  00bc:   BYTE_2(my_radeon_reg(0x1bee)) = 0;
  00c0:   (my_radeon_reg(0x1bf9)) = 0;
  00c4:   (my_radeon_reg(0x1bed)) = 0;
  00c8:   SET_REG_BLOCK 0x0000
  00cb:   return;
}


command_table  0000c6c8  #2b  (EnableGraphSurfaces):

        /*    param size 0x03    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_1(param[0x02])COMP 0x01
  000d:   JUMP_NotEqual 0x0150
  0010:   BYTE_2(param[0x02])TEST 0x03
  0014:   JUMP_NotEqual 0x0079
  0017:   (param[0x00])= 0x05000300
  001e:   (param[0x01])= 0x00020500
  0025:   BYTE_0(my_radeon_reg(0x00fc))COMP BYTE_0(param[0x02])
  002a:   JUMP_NotEqual 0x009f
  002d:   BYTES_23(my_radeon_reg(0x00c0))= 0x0200
  0033:   my_udelay 0x02
  0035:   (my_radeon_reg(0x00c6))= 0x00100000
  003d:   (my_radeon_reg(0x00c8))= 0x00500000
  0045:   BYTES_01(my_radeon_reg(0x00c3))= 0x0002
  004b:   BYTE_0(my_radeon_reg(0x00ca)) = 0;
  004f:   (my_radeon_reg(0x00c2))= 0x00000100
  0057:   BYTE_0(param[0x02])|= 0x80
  005b:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  005d:   BYTE_0(param[0x02])&= 0x07
  0061:   BYTE_0(WS_QUOTIENT) = 0;
  0064:   BYTE_1(my_radeon_reg(0x00cc))TEST 0x01
  0069:   JUMP_Equal 0x0073
  006c:   BYTES_01(WS_REGPTR) = 0;
  006f:   BYTE_0(WS_QUOTIENT)= 0x10
  0073:   BYTES_01(WS_REGPTR) = 0;
  0076:   goto 0x009f
  0079:   BYTE_0(param[0x02])|= 0x80
  007d:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  007f:   (my_radeon_reg(0x00cc)) = 0;
  0083:   BYTES_01(WS_REGPTR) = 0;
  0086:   BYTE_0(param[0x02])&= 0x07
  008a:   BYTE_0(my_radeon_reg(0x00ca))|= 0x01
  008f:   BYTE_0(my_radeon_reg(0x00c2))= 0x11
  0094:   (my_radeon_reg(0x00c6)) = 0;
  0098:   (my_radeon_reg(0x00c8)) = 0;
  009c:   BYTE_0(WS_QUOTIENT) = 0;
  009f:   BYTE_1(my_radeon_reg(0x05d0))&= 0xfe
  00a4:   BYTE_2(param[0x01])COMP 0x01
  00a8:   JUMP_BelowOrEq 0x00b0
  00ab:   BYTE_1(my_radeon_reg(0x05d0))|= 0x01
  00b0:   BYTE_2(WS_QUOTIENT)= BYTE_0(my_radeon_reg(0x00c9))
  00b5:   (WS_FB_WIN)= (my_radeon_reg(0x00c4))
  00ba:   (WS_REMAINDER)= (WS_FB_WIN)
  00be:   (WS_FB_WIN)+= (my_radeon_reg(0x00c6))
  00c3:   (WS_REMAINDER)+= (my_radeon_reg(0x00c8))
  00c8:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  00ca:   BYTE_0(my_radeon_reg(0x1a07))= BYTE_2(WS_QUOTIENT)
  00cf:   BYTE_0(my_radeon_reg(0x1a08))= BYTE_2(WS_QUOTIENT)
  00d4:   (my_radeon_reg(0x1a04))= (WS_FB_WIN)
  00d9:   (my_radeon_reg(0x1a05))= (WS_REMAINDER)
  00de:   BYTE_2(my_radeon_reg(0x1ac1)) = 0;
  00e2:   (my_radeon_reg(0x1b5c)) = 0;
  00e6:   (my_radeon_reg(0x1b5d))= (param[0x00])
  00eb:   BYTES_01(my_radeon_reg(0x1a09)) = 0;
  00ef:   BYTES_01(my_radeon_reg(0x1a0a)) = 0;
  00f3:   BYTES_01(my_radeon_reg(0x1a0b)) = 0;
  00f7:   BYTES_01(my_radeon_reg(0x1a0c)) = 0;
  00fb:   BYTES_01(my_radeon_reg(0x1a0e))= BYTES_01(param[0x00])
  0100:   BYTES_01(my_radeon_reg(0x1a0d))= BYTES_23(param[0x00])
  0105:   MASK   BYTES_01(my_radeon_reg(0x1a01))  &  0xf8fc  |  BYTES_23(param[0x01])
  010c:   BYTE_2(my_radeon_reg(0x1a01))&= 0x0f
  0111:   BYTES_01(my_radeon_reg(0x1a06))= BYTES_01(param[0x01])
  0116:   BYTE_0(my_radeon_reg(0x1a00))= 0x01
  011b:   BYTE_3(my_radeon_reg(0x1bb3))|= 0x10
  0120:   MASK   BYTE_2(my_radeon_reg(0x1bb3))  &  0xef  |  BYTE_0(WS_QUOTIENT)
  0126:   BYTE_0(my_radeon_reg(0x1a35)) = 0;
  012a:   BYTE_0(my_radeon_reg(0x1a3c)) = 0;
  012e:   (my_radeon_reg(0x1bca)) = 0;
  0132:   (my_radeon_reg(0x1bc8)) = 0;
  0136:   (my_radeon_reg(0x1bcc)) = 0;
  013a:   BYTE_2(param[0x02])TEST 0x03
  013e:   JUMP_NotEqual 0x014c
  0141:   BYTE_0(param[0x02])|= 0x80
  0145:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0147:   BYTE_0(my_radeon_reg(0x00cc))|= 0x01
  014c:   SET_REG_BLOCK 0x0000
  014f:   return;
}
  0150:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0152:   BYTE_1(param[0x02])COMP 0x00
  0156:   JUMP_NotEqual 0x016d
  0159:   BYTE_0(my_radeon_reg(0x1a00)) = 0;
  015d:   SET_REG_BLOCK 0x0000
  0160:   BYTE_0(my_radeon_reg(0x00fc))COMP BYTE_0(param[0x02])
  0165:   JUMP_NotEqual 0x016c
  0168:   BYTES_01(my_radeon_reg(0x00c1)) = 0;
  016c:   return;
}
  016d:   BYTE_1(param[0x02])COMP 0x10
  0171:   JUMP_Equal 0x017a
  0174:   BYTES_01(my_radeon_reg(0x1a06))= BYTES_01(param[0x01])
  0179:   return;
}
  017a:   (WS_QUOTIENT)= (my_radeon_reg(0x1a04))
  017f:   (WS_QUOTIENT)&= 0xff000000
  0186:   (WS_QUOTIENT)+= (param[0x00])
  018a:   BYTES_01(WS_QUOTIENT)&= 0xf000
  018f:   (my_radeon_reg(0x1a04))= (WS_QUOTIENT)
  0194:   BYTES_01(param[0x00])&= 0x0fff
  0199:   (WS_REMAINDER) = 0;
  019c:   BYTE_0(WS_REMAINDER)= BYTE_2(param[0x01])
  01a0:   BYTES_01(param[0x00])>>= BYTES_01(WS_REMAINDER)
  01a4:   BYTES_01(param[0x01])+= BYTES_01(param[0x00])
  01a8:   BYTE_0(param[0x00])&= 0xfc
  01ac:   SHIFT_LEFT (param[0x00])  by  10
  01b0:   (my_radeon_reg(0x1b5c))= (param[0x00])
  01b5:   BYTES_01(my_radeon_reg(0x1a0d))= BYTES_01(param[0x01])
  01ba:   return;
}


command_table  0000c884  #2c  (UpdateCRTC_DoubleBufferRegisters):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  000b:   BYTE_1(my_radeon_reg(0x1bb6))&= 0xfe
  0010:   BYTE_1(param[0x00])COMP 0x01
  0014:   JUMP_Equal 0x0037
  0017:   BYTE_2(my_radeon_reg(0x1a6e)) = 0;
  001b:   BYTE_2(my_radeon_reg(0x1a27)) = 0;
  001f:   BYTE_2(my_radeon_reg(0x1a11)) = 0;
  0023:   BYTE_0(my_radeon_reg(0x1bb5)) = 0;
  0027:   BYTE_0(my_radeon_reg(0x1bbd)) = 0;
  002b:   BYTE_0(my_radeon_reg(0x1bb6))TEST 0x01
  0030:   JUMP_NotEqual 0x002b
  0033:   SET_REG_BLOCK 0x0000
  0036:   return;
}
  0037:   BYTE_0(my_radeon_reg(0x1bbd))|= 0x01
  003c:   (my_radeon_reg(0x1b9e)) = 0;
  0040:   BYTE_0(my_radeon_reg(0x1ac0))&= 0xf7
  0045:   SET_REG_BLOCK 0x0000
  0048:   BYTE_0(my_radeon_reg(0x0132))|= 0x01
  004d:   BYTE_0(my_radeon_reg(0x0328))TEST 0x07
  0052:   JUMP_NotEqual 0x005c
  0055:   BYTE_0(my_radeon_reg(0x0328))= 0x02
  005a:   my_udelay 0x14
  005c:   return;
}


command_table  0000c8e2  #2d  (LUT_AutoFill):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  000b:   BYTE_0(my_radeon_reg(0x1a78)) = 0;
  000f:   (my_radeon_reg(0x1a80)) = 0;
  0013:   BYTE_1(param[0x00])COMP 0x01
  0017:   JUMP_NotEqual 0x009a
  001a:   BYTE_0(my_radeon_reg(0x1a01))TEST 0x03
  001f:   JUMP_Equal 0x0059
  0022:   BYTE_0(my_radeon_reg(0x1a7e))|= 0x07
  0027:   BYTE_0(my_radeon_reg(0x1a7f))= 0x01
  002c:   my_udelay 0x01
  002e:   BYTE_0(my_radeon_reg(0x1a7f))TEST 0x02
  0033:   JUMP_Equal 0x002c
  0036:   BYTE_0(my_radeon_reg(0x1a7f)) = 0;
  003a:   BYTES_01(my_radeon_reg(0x1a81)) = 0;
  003e:   BYTES_01(my_radeon_reg(0x1a82)) = 0;
  0042:   BYTES_01(my_radeon_reg(0x1a83)) = 0;
  0046:   BYTES_01(my_radeon_reg(0x1a84))= 0xffff
  004c:   BYTES_01(my_radeon_reg(0x1a85))= 0xffff
  0052:   BYTES_01(my_radeon_reg(0x1a86))= 0xffff
  0058:   return;
}
  0059:   (my_radeon_reg(0x1a79)) = 0;
  005d:   SET_DATA_BLOCK 0x05 (DAC_Info)
  005f:   BYTES_01(WS_DATAPTR)+= 0x0004
  0064:   (WS_REMAINDER) = 0;
  0067:   BYTE_0(WS_QUOTIENT)= BYTE_0(data[0x0000])
  006c:   SHIFT_LEFT (WS_QUOTIENT)  by  0a
  0070:   BYTE_0(WS_QUOTIENT)= BYTE_0(data[0x0001])
  0075:   SHIFT_LEFT (WS_QUOTIENT)  by  0a
  0079:   BYTE_0(WS_QUOTIENT)= BYTE_0(data[0x0002])
  007e:   SHIFT_LEFT (WS_QUOTIENT)  by  04
  0082:   (my_radeon_reg(0x1a7c))= (WS_QUOTIENT)
  0087:   BYTES_01(WS_DATAPTR)+= 0x0003
  008c:   BYTES_01(WS_REMAINDER)+= 0x0001
  0091:   BYTES_01(WS_REMAINDER)COMP 0x0100
  0096:   JUMP_Below 0x0067
  0099:   return;
}
  009a:   BYTE_0(my_radeon_reg(0x1a79))= BYTE_2(param[0x00])
  009f:   (WS_REMAINDER) = 0;
  00a2:   BYTES_01(WS_REMAINDER)= BYTES_23(param[0x01])
  00a6:   SET_FB_BASE 
  00a9:   BYTE_1(param[0x00])COMP 0x02
  00ad:   JUMP_NotEqual 0x00bc
  00b0:   (WS_QUOTIENT)= (my_radeon_reg(0x1a7c))
  00b5:   (fb[0x00])= (WS_QUOTIENT)
  00b9:   goto 0x00c5
  00bc:   (WS_QUOTIENT)= (fb[0x00])
  00c0:   (my_radeon_reg(0x1a7c))= (WS_QUOTIENT)
  00c5:   (WS_FB_WIN)+= 0x00000004
  00cc:   BYTES_23(WS_REMAINDER)+= 0x0001
  00d1:   BYTES_23(WS_REMAINDER)COMP BYTES_01(param[0x01])
  00d5:   JUMP_Below 0x00a9
  00d8:   return;
}


command_table  00000000  #2e  (EnableHW_IconCursor):

        /*    param size 0x01    */

command_table  00000000  #2f  (GetMemoryClock):

        /*    param size 0x01    */

command_table  0000c9bc  #30  (GetEngineClock):

        /*    param size 0x02    */

  0006:   (my_radeon_reg(0x0082))= 0xc050008c
  000e:   (WS_QUOTIENT) = 0;
  0011:   BYTE_0(WS_QUOTIENT)= BYTE_0(my_radeon_reg(0x0083))
  0016:   SET_DATA_BLOCK 0xff (this table)
  0018:   BYTES_01(WS_DATAPTR)+= 0x005d
  001d:   BYTES_01(WS_QUOTIENT)COMP BYTES_01(data[0x0002])
  0022:   JUMP_BelowOrEq 0x002d
  0025:   BYTES_01(WS_DATAPTR)+= 0x0008
  002a:   goto 0x001d
  002d:   BYTES_01(WS_QUOTIENT)-= BYTES_01(data[0x0004])
  0032:   BYTES_01(WS_QUOTIENT)*= BYTES_01(data[0x0006])
  0037:   BYTES_01(WS_QUOTIENT)+= BYTES_01(data[0x0000])
  003c:   BYTES_23(WS_QUOTIENT) = 0;
  003f:   (WS_FB_WIN)= (WS_QUOTIENT)
  0043:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  0045:   (param[0x00])= (data[0x0008])
  004a:   (param[0x00])*= 0x00000064
  0051:   (WS_QUOTIENT)/= (WS_FB_WIN)
  0055:   (param[0x00])= (WS_QUOTIENT)
  0059:   return;
}
  005a: 
          
                          CTB_DS  40 bytes


command_table  0000ca42  #31  (SetCRTC_UsingDTDTiming):

        /*    param size 0x07    */

  0006:   my_INDIRECT_IO_MM();
  0009:   SET_DATA_BLOCK 0xff (this table)
  000b:   BYTES_01(WS_DATAPTR)+= 0x013f
  0010:   BYTE_1(param[0x05]) = 0;
  0013:   BYTES_01(WS_DATAPTR)+= BYTES_01(param[0x05])
  0017:   BYTES_01(WS_DATAPTR)+= BYTES_01(param[0x05])
  001b:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  0020:   BYTES_01(WS_REMAINDER)= BYTES_01(param[0x03])
  0024:   BYTES_01(WS_REMAINDER)+= BYTES_23(param[0x03])
  0028:   BYTES_01(WS_REMAINDER)COMP 0x0003
  002d:   JUMP_Above 0x003b
  0030:   MASK   BYTES_23(my_radeon_reg(0x1bb3))  &  0xeff0  |  0x0003
  0038:   goto 0x0043
  003b:   MASK   BYTES_23(my_radeon_reg(0x1bb3))  &  0xfff0  |  0x1004
  0043:   BYTES_01(WS_REMAINDER)= BYTES_01(param[0x00])
  0047:   BYTES_01(WS_REMAINDER)+= BYTES_23(param[0x00])
  004b:   BYTES_01(WS_REMAINDER)-= 0x0001
  0050:   BYTES_01(my_radeon_reg(0x1b80))= BYTES_01(WS_REMAINDER)
  0055:   BYTES_01(my_radeon_reg(0x1b82)) = 0;
  0059:   BYTES_23(my_radeon_reg(0x1b82))= BYTES_23(param[0x02])
  005e:   BYTES_01(WS_REMAINDER)= BYTES_23(param[0x00])
  0062:   BYTES_01(WS_REMAINDER)-= BYTES_01(param[0x02])
  0066:   BYTES_23(WS_REMAINDER) = 0;
  0069:   BYTE_2(WS_REMAINDER)= BYTE_2(param[0x04])
  006d:   BYTES_01(WS_REMAINDER)-= BYTES_23(WS_REMAINDER)
  0071:   BYTES_23(my_radeon_reg(0x1b81))= BYTES_01(WS_REMAINDER)
  0076:   BYTES_01(WS_REMAINDER)= BYTES_23(param[0x00])
  007a:   BYTES_01(WS_REMAINDER)-= BYTES_01(param[0x02])
  007e:   BYTES_01(WS_REMAINDER)+= BYTES_23(WS_REMAINDER)
  0082:   BYTES_01(WS_REMAINDER)+= BYTES_01(param[0x00])
  0086:   BYTE_0(param[0x04])TEST 0x10
  008a:   JUMP_Equal 0x0091
  008d:   BYTES_01(WS_REMAINDER)+= BYTES_01(param[0x00])
  0091:   BYTES_01(my_radeon_reg(0x1b81))= BYTES_01(WS_REMAINDER)
  0096:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x04])
  009a:   BYTE_0(WS_REMAINDER)&= 0x02
  009e:   SHIFT_RIGHT BYTE_0(WS_REMAINDER)  by  01
  00a2:   BYTE_0(my_radeon_reg(0x1b83))= BYTE_0(WS_REMAINDER)
  00a7:   (my_radeon_reg(0x1b5e)) = 0;
  00ab:   BYTE_0(my_radeon_reg(0x1b5e))= BYTE_2(param[0x04])
  00b0:   BYTE_2(my_radeon_reg(0x1b5e))= BYTE_2(param[0x04])
  00b5:   BYTES_01(WS_REMAINDER)= BYTES_01(param[0x01])
  00b9:   BYTES_01(WS_REMAINDER)+= BYTES_23(param[0x01])
  00bd:   BYTES_01(WS_REMAINDER)-= 0x0001
  00c2:   BYTES_01(my_radeon_reg(0x1b87))= BYTES_01(WS_REMAINDER)
  00c7:   BYTES_01(my_radeon_reg(0x1b8e)) = 0;
  00cb:   BYTES_23(my_radeon_reg(0x1b8e))= BYTES_23(param[0x03])
  00d0:   BYTES_01(WS_REMAINDER)= BYTES_23(param[0x01])
  00d4:   BYTES_01(WS_REMAINDER)-= BYTES_01(param[0x03])
  00d8:   BYTES_23(WS_REMAINDER) = 0;
  00db:   BYTE_2(WS_REMAINDER)= BYTE_3(param[0x04])
  00df:   BYTES_01(WS_REMAINDER)-= BYTES_23(WS_REMAINDER)
  00e3:   BYTES_23(my_radeon_reg(0x1b8d))= BYTES_01(WS_REMAINDER)
  00e8:   BYTES_01(WS_REMAINDER)= BYTES_23(param[0x01])
  00ec:   BYTES_01(WS_REMAINDER)-= BYTES_01(param[0x03])
  00f0:   BYTES_01(WS_REMAINDER)+= BYTES_23(WS_REMAINDER)
  00f4:   BYTES_01(WS_REMAINDER)+= BYTES_01(param[0x01])
  00f8:   BYTE_0(param[0x04])TEST 0x20
  00fc:   JUMP_Equal 0x0103
  00ff:   BYTES_01(WS_REMAINDER)+= BYTES_01(param[0x01])
  0103:   BYTES_01(my_radeon_reg(0x1b8d))= BYTES_01(WS_REMAINDER)
  0108:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x04])
  010c:   BYTE_0(WS_REMAINDER)&= 0x04
  0110:   SHIFT_RIGHT BYTE_0(WS_REMAINDER)  by  02
  0114:   BYTE_0(my_radeon_reg(0x1b8f))= BYTE_0(WS_REMAINDER)
  0119:   (my_radeon_reg(0x1b5f)) = 0;
  011d:   BYTE_0(my_radeon_reg(0x1b5f))= BYTE_3(param[0x04])
  0122:   BYTE_2(my_radeon_reg(0x1b5f))= BYTE_3(param[0x04])
  0127:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x04])
  012b:   BYTE_0(WS_REMAINDER)&= 0x80
  012f:   SHIFT_RIGHT BYTE_0(WS_REMAINDER)  by  07
  0133:   BYTE_0(my_radeon_reg(0x1b9e))= BYTE_0(WS_REMAINDER)
  0138:   SET_REG_BLOCK 0x0000
  013b:   return;
}
  013c:   
                          CTB_DS  12 bytes


command_table  0000cb8e  #32  (ExternalEncoderControl):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (work[0x00]) = 0;
  000c:   BYTES_01(work[0x00])= BYTES_01(param[0x00])
  0010:   BYTES_01(param[0x00])= 0x2123
  0015:   BYTE_2(param[0x00])TEST 0x10
  0019:   JUMP_Equal 0x0021
  001c:   BYTES_01(param[0x00])= 0x2223
  0021:   my_EnableYUV();
  0023:   BYTES_01(WS_DATAPTR)COMP 0x0000
  0028:   JUMP_Equal 0x05c3
  002b:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0004])
  0030:   BYTE_0(WS_REMAINDER)COMP 0x00
  0034:   JUMP_Equal 0x05c3
  0037:   BYTE_0(WS_REMAINDER)COMP 0x15
  003b:   JUMP_Equal 0x05c3
  003e:   
                          switch  BYTE_3(param[0x00])
        07->0283 05->00fc 06->00fc 12->022c 01->005c 00->0076
  005b:   return;
}
  005c:   BYTE_2(param[0x00])TEST 0x10
  0060:   JUMP_Equal 0x05c3
  0063:   BYTE_2(my_radeon_reg(0x05cb))TEST 0x01
  0068:   JUMP_NotEqual 0x0076
  006b:   BYTE_3(my_radeon_reg(0x191d))&= 0xfe
  0070:   BYTE_3(my_radeon_reg(0x1919))|= 0x03
  0075:   return;
}
  0076:   BYTE_2(param[0x00])TEST 0x10
  007a:   JUMP_Equal 0x05c3
  007d:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0001])
  0082:   SET_DATA_BLOCK 0xff (this table)
  0084:   BYTES_01(WS_DATAPTR)+= 0x0793
  0089:   BYTES_01(WS_REMAINDER)COMP BYTES_01(data[0x0000])
  008e:   JUMP_Equal 0x0099
  0091:   BYTES_01(WS_DATAPTR)+= 0x0004
  0096:   goto 0x0089
  0099:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0002])
  009e:   BYTE_0(my_radeon_reg(0x1c51))TEST 0x01
  00a3:   JUMP_Equal 0x05c3
  00a6:   BYTES_01(WS_REMAINDER)= 0x0001
  00ab:   SET_DATA_BLOCK 0xff (this table)
  00ad:   BYTES_01(WS_DATAPTR)+= 0x0793
  00b2:   BYTE_1(my_radeon_reg(0x1c50))TEST BYTE_0(WS_REMAINDER)
  00b7:   JUMP_NotEqual 0x00cd
  00ba:   SHIFT_LEFT BYTE_0(WS_REMAINDER)  by  01
  00be:   BYTES_01(WS_DATAPTR)+= 0x0004
  00c3:   BYTE_0(WS_REMAINDER)COMP 0x80
  00c7:   JUMP_NotEqual 0x00b2
  00ca:   goto 0x00e2
  00cd:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0002])
  00d2:   BYTES_01(my_radeon_reg(0x1cc3)) = 0;
  00d6:   my_udelay 0xc8
  00d8:   BYTE_0(my_radeon_reg(0x1cc4))|= 0x01
  00dd:   my_udelay 0x32
  00df:   BYTES_01(WS_REGPTR) = 0;
  00e2:   BYTE_0(work[0x01])= 0x03
  00e6:   (work[0x00])= 0x00ffbc01
  00ed:   goto 0x013e
  00f0:   BYTE_2(WS_REMAINDER)TEST 0x02
  00f4:   JUMP_Equal 0x05c3
  00f7:   my_mdelay 0x01
  00f9:   goto 0x00e2
  00fc:   BYTE_0(work[0x01]) = 0;
  00ff:   (work[0x00])= 0x01fef300
  0106:   BYTE_3(param[0x00])COMP 0x05
  010a:   JUMP_Equal 0x013e
  010d:   BYTES_23(work[0x00])= 0x00fe
  0112:   goto 0x013e
  0115:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0117:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0028])
  011c:   BYTE_0(WS_REMAINDER)TEST 0x01
  0120:   JUMP_Equal 0x05c3
  0123:   BYTE_0(work[0x01])= 0x01
  0127:   (work[0x00])= 0x04fbf400
  012e:   BYTE_3(param[0x00])COMP 0x05
  0132:   JUMP_Equal 0x013e
  0135:   BYTES_23(work[0x00])= 0x00fb
  013a:   goto 0x013e
  013d:   return;
}
  013e:   BYTE_1(work[0x01]) = 0;
  0141:   BYTES_23(work[0x01])= BYTES_23(param[0x00])
  0145:   SET_FB_BASE 
  014b:   (fb[0x00])= 0x618005f0
  0152:   (fb[0x01]) = 0;
  0155:   BYTES_01(fb[0x01])= BYTES_01(work[0x00])
  0159:   BYTE_0(param[0x01])= BYTE_0(param[0x00])
  015d:   BYTE_3(param[0x01])= BYTE_1(param[0x00])
  0161:   (param[0x00])= 0x00004c00
  0168:   BYTES_12(param[0x01]) = 0;
  016b:   my_ProcessAuxChannelTransaction();
  016d:   BYTE_1(param[0x01])COMP 0x00
  0171:   JUMP_Equal 0x0184
  0174:   my_udelay 0xc8
  0176:   my_udelay 0xc8
  0178:   BYTE_1(work[0x01])+= 0x01
  017c:   BYTE_1(work[0x01])COMP 0x0c
  0180:   JUMP_Below 0x0161
  0183:   return;
}
  0184:   BYTE_1(work[0x01]) = 0;
  0187:   SET_FB_BASE 
  018d:   (fb[0x00])= 0x409005f2
  0194:   (param[0x00])= 0x4c044c00
  019b:   BYTES_12(param[0x01]) = 0;
  019e:   my_ProcessAuxChannelTransaction();
  01a0:   BYTE_1(param[0x01])COMP 0x00
  01a4:   JUMP_Equal 0x01b3
  01a7:   BYTE_1(work[0x01])+= 0x01
  01ab:   BYTE_1(work[0x01])COMP 0x06
  01af:   JUMP_Below 0x0187
  01b2:   return;
}
  01b3:   (WS_REMAINDER) = 0;
  01b6:   SET_FB_BASE 
  01bc:   BYTE_2(WS_REMAINDER)= BYTE_0(fb[0x00])
  01c0:   BYTE_2(work[0x00])COMP 0xff
  01c4:   JUMP_Equal 0x0206
  01c7:   BYTE_2(WS_REMAINDER)&= BYTE_2(work[0x00])
  01cb:   BYTE_2(WS_REMAINDER)|= BYTE_3(work[0x00])
  01cf:   BYTES_01(WS_REMAINDER)= BYTES_01(work[0x00])
  01d3:   SET_FB_BASE 
  01d9:   (fb[0x00])= 0x728005f0
  01e0:   (fb[0x01])= (WS_REMAINDER)
  01e4:   BYTE_1(work[0x01]) = 0;
  01e7:   (param[0x00])= 0x00004c00
  01ee:   BYTES_12(param[0x01]) = 0;
  01f1:   my_ProcessAuxChannelTransaction();
  01f3:   BYTE_1(param[0x01])COMP 0x00
  01f7:   JUMP_Equal 0x0206
  01fa:   BYTE_1(work[0x01])+= 0x01
  01fe:   BYTE_1(work[0x01])COMP 0x06
  0202:   JUMP_Below 0x01e7
  0205:   return;
}
  0206:   BYTES_23(param[0x00])= BYTES_23(work[0x01])
  020a:   BYTE_0(param[0x00])= BYTE_0(param[0x01])
  020e:   BYTE_1(param[0x00])= BYTE_3(param[0x01])
  0212:   
                          switch  BYTE_0(work[0x01])
        00->0115 01->013d 02->02b8 03->00f0 04->02cd
  022b:   return;
}
  022c:   BYTE_0(my_radeon_reg(0x05c9))&= 0xfc
  0231:   BYTE_2(work[0x00]) = 0;
  0234:   SET_FB_BASE 
  023a:   (fb[0x00])= 0x40900200
  0241:   BYTE_0(param[0x01])= BYTE_0(param[0x00])
  0245:   BYTE_3(param[0x01])= BYTE_1(param[0x00])
  0249:   (param[0x00])= 0x4c044c00
  0250:   BYTES_12(param[0x01]) = 0;
  0253:   my_ProcessAuxChannelTransaction();
  0255:   BYTE_1(param[0x01])COMP 0x00
  0259:   JUMP_Equal 0x026c
  025c:   my_udelay 0xc8
  025e:   my_udelay 0xc8
  0260:   BYTE_2(work[0x00])+= 0x01
  0264:   BYTE_2(work[0x00])COMP 0x06
  0268:   JUMP_Below 0x0234
  026b:   return;
}
  026c:   SET_FB_BASE 
  0272:   BYTE_0(fb[0x00])&= 0x3f
  0276:   BYTE_0(fb[0x00])COMP 0x00
  027a:   JUMP_Equal 0x0282
  027d:   BYTE_0(my_radeon_reg(0x05c9))|= 0x02
  0282:   return;
}
  0283:   (WS_REMAINDER) = 0;
  0286:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x00])
  028a:   BYTE_0(WS_REMAINDER)&= 0x0f
  028e:   SHIFT_LEFT BYTES_01(WS_REMAINDER)  by  01
  0292:   SET_DATA_BLOCK 0xff (this table)
  0294:   BYTES_01(WS_DATAPTR)+= 0x05c7
  0299:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  029d:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  02a2:   BYTE_2(my_radeon_reg(0x1880))&= 0xfb
  02a7:   BYTES_01(WS_REGPTR) = 0;
  02aa:   BYTE_0(work[0x01])= 0x02
  02ae:   (work[0x00])= 0x00ff0200
  02b5:   goto 0x013e
  02b8:   BYTE_2(WS_REMAINDER)COMP 0x20
  02bc:   JUMP_NotEqual 0x02de
  02bf:   BYTE_0(work[0x01])= 0x04
  02c3:   (work[0x00])= 0x00ff0300
  02ca:   goto 0x013e
  02cd:   BYTE_2(WS_REMAINDER)COMP 0x31
  02d1:   JUMP_NotEqual 0x02de
  02d4:   SET_DATA_BLOCK 0xff (this table)
  02d6:   BYTES_01(WS_DATAPTR)+= 0x06cf
  02db:   goto 0x02f1
  02de:   SET_DATA_BLOCK 0xff (this table)
  02e0:   BYTES_01(WS_DATAPTR)+= 0x05d3
  02e5:   BYTE_2(param[0x00])TEST 0x10
  02e9:   JUMP_Equal 0x02f1
  02ec:   BYTES_01(WS_DATAPTR)+= 0x0040
  02f1:   (WS_REMAINDER)= 0x00004c80
  02f8:   SET_FB_BASE 
  02fb:   (fb[0x00])= (data[0x0000])
  0300:   BYTES_01(WS_DATAPTR)+= 0x0004
  0305:   (WS_REMAINDER)+= 0x00000004
  030c:   (fb[0x00])COMP 0xffffffff
  0313:   JUMP_NotEqual 0x02f8
  0316:   BYTE_2(param[0x00])TEST 0x10
  031a:   JUMP_Equal 0x055c
  031d:   (param[0x01])= 0x00000006
  0324:   (WS_REMAINDER) = 0;
  0327:   SET_DATA_BLOCK 0x1a (ASIC_InternalSS_Info_ASIC_MVDDC_Info)
  0329:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  032e:   BYTES_01(WS_REMAINDER)+= BYTES_01(WS_DATAPTR)
  0332:   BYTES_01(WS_DATAPTR)+= 0x0004
  0337:   BYTE_0(param[0x01])COMP BYTE_0(data[0x0008])
  033c:   JUMP_Equal 0x0353
  033f:   BYTES_01(WS_DATAPTR)+= 0x000c
  0344:   BYTES_01(WS_DATAPTR)COMP BYTES_01(WS_REMAINDER)
  0348:   JUMP_NotEqual 0x0337
  034b:   BYTES_01(WS_REMAINDER)= 0x0000
  0350:   goto 0x042c
  0353:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0004])
  0358:   BYTES_01(WS_REMAINDER)COMP 0x0000
  035d:   JUMP_Equal 0x042c
  0360:   BYTES_01(param[0x01])= BYTES_01(data[0x0006])
  0365:   (WS_FB_WIN)= (WS_REMAINDER)
  0369:   (param[0x01])/= 0x00000064
  0370:   (work[0x01])= (WS_QUOTIENT)
  0374:   (WS_FB_WIN)*= (work[0x01])
  0378:   (param[0x01])= (WS_QUOTIENT)
  037c:   (WS_QUOTIENT)*= (WS_FB_WIN)
  0380:   (WS_QUOTIENT)*= 0x00000400
  0387:   (WS_QUOTIENT)/= 0x0000017d
  038e:   (WS_FB_WIN)= (WS_QUOTIENT)
  0392:   (param[0x01])*= 0x00080000
  0399:   (WS_QUOTIENT)/= 0x00000271
  03a0:   (WS_QUOTIENT)*= 0x00000010
  03a7:   (WS_FB_WIN)+= (WS_QUOTIENT)
  03ab:   (WS_REMAINDER)= (WS_FB_WIN)
  03af:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  03b1:   (param[0x01]) = 0;
  03b4:   BYTES_01(param[0x01])= BYTES_01(data[0x0004])
  03b9:   (param[0x01])*= 0x00000230
  03c0:   BYTES_01(param[0x01])COMP 0x0697
  03c5:   JUMP_BelowOrEq 0x03f0
  03c8:   SHIFT_RIGHT (WS_QUOTIENT)  by  01
  03cc:   BYTES_01(param[0x01])COMP 0x0d2f
  03d1:   JUMP_BelowOrEq 0x03f0
  03d4:   SHIFT_RIGHT (WS_QUOTIENT)  by  01
  03d8:   BYTES_01(param[0x01])COMP 0x1a5e
  03dd:   JUMP_BelowOrEq 0x03f0
  03e0:   SHIFT_RIGHT (WS_QUOTIENT)  by  01
  03e4:   BYTES_01(param[0x01])COMP 0x34bc
  03e9:   JUMP_BelowOrEq 0x03f0
  03ec:   SHIFT_RIGHT (WS_QUOTIENT)  by  01
  03f0:   (work[0x00])= (WS_QUOTIENT)
  03f4:   SET_FB_BASE 
  03fa:   (WS_REMAINDER)/= (work[0x00])
  03fe:   BYTE_2(fb[0x00])= BYTE_0(WS_QUOTIENT)
  0402:   SET_FB_BASE 
  0408:   SHIFT_LEFT (work[0x01])  by  09
  040c:   (work[0x00])/= (work[0x01])
  0410:   BYTE_0(WS_QUOTIENT)|= 0x80
  0414:   BYTE_2(fb[0x00])= BYTE_0(WS_QUOTIENT)
  0418:   SET_FB_BASE 
  041e:   BYTE_2(fb[0x00])= 0x00
  0422:   SET_FB_BASE 
  0428:   BYTE_2(fb[0x00])= 0x02
  042c:   SET_FB_BASE 
  0432:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0434:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  0439:   BYTE_3(WS_REMAINDER)TEST 0x01
  043d:   JUMP_NotEqual 0x0444
  0440:   BYTE_2(fb[0x00])= 0x00
  0444:   SET_FB_BASE 
  044a:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  044c:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  0451:   BYTE_3(WS_REMAINDER)TEST 0x01
  0455:   JUMP_NotEqual 0x045c
  0458:   BYTE_2(fb[0x00])= 0x3c
  045c:   SET_FB_BASE 
  0462:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0464:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  0469:   BYTE_3(WS_REMAINDER)TEST 0x02
  046d:   JUMP_Equal 0x047f
  0470:   BYTE_2(fb[0x00])= 0x46
  0474:   BYTE_3(WS_REMAINDER)TEST 0x10
  0478:   JUMP_NotEqual 0x047f
  047b:   BYTE_2(fb[0x00])= 0x4a
  047f:   SET_FB_BASE 
  0485:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0487:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  048c:   BYTE_3(WS_REMAINDER)TEST 0x20
  0490:   JUMP_NotEqual 0x0497
  0493:   BYTE_2(fb[0x00])|= 0x04
  0497:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0499:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0034])
  049e:   SET_FB_BASE 
  04a4:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  04a8:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0035])
  04ad:   SET_FB_BASE 
  04b3:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  04b7:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0039])
  04bc:   SET_FB_BASE 
  04c2:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  04c6:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0037])
  04cb:   SET_FB_BASE 
  04d1:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  04d5:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0036])
  04da:   SET_FB_BASE 
  04e0:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  04e4:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x003a])
  04e9:   SET_FB_BASE 
  04ef:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  04f3:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0038])
  04f8:   SET_FB_BASE 
  04fe:   BYTE_2(fb[0x00])= BYTE_0(WS_REMAINDER)
  0502:   SET_FB_BASE 
  0508:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  050a:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0136])
  050f:   BYTE_3(WS_REMAINDER)TEST 0x02
  0513:   JUMP_Equal 0x052e
  0516:   BYTE_2(fb[0x00])= 0x67
  051a:   BYTE_2(fb[0x01])= 0x89
  051e:   BYTE_2(fb[0x02])= 0xab
  0522:   BYTE_2(fb[0x03])= 0x01
  0526:   BYTE_2(fb[0x04])= 0x23
  052a:   BYTE_2(fb[0x05])= 0x45
  052e:   SET_FB_BASE 
  0534:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  0536:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0136])
  053b:   BYTE_3(WS_REMAINDER)TEST 0x20
  053f:   JUMP_Equal 0x054b
  0542:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0137])
  0547:   BYTE_2(fb[0x00])= BYTE_3(WS_REMAINDER)
  054b:   SET_FB_BASE 
  0551:   BYTE_3(WS_REMAINDER)TEST 0x10
  0555:   JUMP_Equal 0x055c
  0558:   BYTE_2(fb[0x00])= 0x80
  055c:   (work[0x00])= 0x00004c80
  0563:   BYTE_0(param[0x01])= BYTE_0(param[0x00])
  0567:   BYTE_3(param[0x01])= BYTE_1(param[0x00])
  056b:   (WS_REMAINDER) = 0;
  056e:   BYTES_01(WS_REMAINDER)= BYTES_01(work[0x00])
  0572:   SET_FB_BASE 
  0575:   (WS_REMAINDER)= (fb[0x00])
  0579:   (WS_REMAINDER)COMP 0xffffffff
  0580:   JUMP_Equal 0x05c2
  0583:   SET_FB_BASE 
  0589:   (fb[0x01])= 0x728005f0
  0590:   (fb[0x02])= (WS_REMAINDER)
  0594:   (param[0x00])= 0x00004c04
  059b:   BYTES_12(param[0x01]) = 0;
  059e:   my_ProcessAuxChannelTransaction();
  05a0:   BYTE_1(param[0x01])COMP 0x00
  05a4:   JUMP_Equal 0x05b7
  05a7:   my_udelay 0xc8
  05a9:   my_udelay 0xc8
  05ab:   BYTE_2(work[0x00])+= 0x01
  05af:   BYTE_2(work[0x00])COMP 0x07
  05b3:   JUMP_Below 0x056b
  05b6:   return;
}
  05b7:   BYTES_01(work[0x00])+= 0x0004
  05bc:   BYTES_23(work[0x00]) = 0;
  05bf:   goto 0x056b
  05c2:   return;
}
  05c3:   return;
}
  05c4: 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
          
                          CTB_DS  488 bytes


command_table  00000000  #33  (LVTMAOutputControl):

        /*    param size 0x01    */

command_table  00000000  #34  (VRAM_BlockDetectionByStrap):

        /*    param size 0x01    */

command_table  0000d33e  #35  (MemoryCleanUp):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (WS_REMAINDER)= (my_radeon_reg(0x00c4))
  000e:   SHIFT_RIGHT (WS_REMAINDER)  by  08
  0012:   BYTE_3(WS_REMAINDER)= BYTE_0(my_radeon_reg(0x00c9))
  0017:   (WS_QUOTIENT) = 0;
  001a:   BYTES_01(WS_QUOTIENT)= BYTES_01(param[0x00])
  001e:   SHIFT_LEFT (WS_QUOTIENT)  by  05
  0022:   (WS_QUOTIENT)+= (WS_REMAINDER)
  0026:   BYTE_0(param[0x00])= BYTE_3(WS_QUOTIENT)
  002a:   SHIFT_LEFT (WS_QUOTIENT)  by  08
  002e:   SET_FB_BASE 
  0034:   (fb[0x00]) = 0;
  0037:   SET_DATA_BLOCK 0x0b (VRAM_UsageByFirmware)
  0039:   (work[0x00])= 0x00001700
  0040:   SHIFT_RIGHT (work[0x00])  by  08
  0044:   (WS_REMAINDER)+= (work[0x00])
  0048:   (work[0x00])= (data[0x0004])
  004d:   SHIFT_LEFT (work[0x00])  by  02
  0051:   (WS_REMAINDER)+= (work[0x00])
  0055:   BYTE_1(param[0x00])= BYTE_3(WS_REMAINDER)
  0059:   SHIFT_LEFT (WS_REMAINDER)  by  08
  005d:   (WS_FB_WIN)= (WS_REMAINDER)
  0061:   (work[0x00]) = 0;
  0064:   BYTES_01(work[0x00])= BYTES_23(param[0x00])
  0068:   SHIFT_LEFT (work[0x00])  by  0d
  006c:   my_udelay 0xc8
  006e:   BYTE_3(my_radeon_reg(0x21a0))TEST 0x80
  0073:   JUMP_NotEqual 0x006c
  0076:   (work[0x00])COMP 0x00000000
  007d:   JUMP_Equal 0x00d3
  0080:   (WS_REMAINDER)= 0x00100000
  0087:   (work[0x00])COMP (WS_REMAINDER)
  008b:   JUMP_Above 0x0092
  008e:   (WS_REMAINDER)= (work[0x00])
  0092:   (work[0x00])-= (WS_REMAINDER)
  0096:   (my_radeon_reg(0xc064))= (WS_FB_WIN)
  009b:   BYTE_0(my_radeon_reg(0xc065))= BYTE_1(param[0x00])
  00a0:   (my_radeon_reg(0xc066))= (WS_QUOTIENT)
  00a5:   BYTE_0(my_radeon_reg(0xc067))= BYTE_0(param[0x00])
  00aa:   SHIFT_RIGHT (WS_QUOTIENT)  by  08
  00ae:   BYTE_3(WS_QUOTIENT)= BYTE_0(param[0x00])
  00b2:   SHIFT_RIGHT (WS_REMAINDER)  by  08
  00b6:   (WS_QUOTIENT)+= (WS_REMAINDER)
  00ba:   SHIFT_LEFT (WS_REMAINDER)  by  08
  00be:   BYTE_0(param[0x00])= BYTE_3(WS_QUOTIENT)
  00c2:   SHIFT_LEFT (WS_QUOTIENT)  by  08
  00c6:   BYTES_23(WS_REMAINDER)|= 0xd020
  00cb:   (my_radeon_reg(0xc0e8))= (WS_REMAINDER)
  00d0:   goto 0x006c
  00d3:   (my_radeon_reg(0x0012))= 0x00010000
  00db:   (my_radeon_reg(0x0013))= 0x00010000
  00e3:   return;
}


command_table  0000d422  #36  (ReadEDIDFromHWAssistedI2C_ProcessI2cChannelTransaction):

        /*    param size 0x03    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_0(my_radeon_reg(0x1834))|= 0x08
  000e:   BYTE_0(my_radeon_reg(0x1907))&= 0xfd
  0013:   (WS_REMAINDER) = 0;
  0016:   BYTE_0(WS_REMAINDER)= BYTE_3(param[0x01])
  001a:   BYTE_0(WS_REMAINDER)&= 0x0f
  001e:   BYTES_01(WS_QUOTIENT)= BYTES_01(WS_DATAPTR)
  0022:   SET_DATA_BLOCK 0xff (this table)
  0024:   BYTES_01(WS_DATAPTR)+= 0x0219
  0029:   SHIFT_LEFT BYTE_0(WS_REMAINDER)  by  02
  002d:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  0031:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  0036:   (my_radeon_reg(0x0000))= (WS_REMAINDER)
  003b:   BYTE_2(my_radeon_reg(0x0001))&= 0xfe
  0040:   BYTES_01(my_radeon_reg(0x0001)) = 0;
  0044:   BYTES_01(my_radeon_reg(0x183b))= BYTES_01(data[0x0002])
  004a:   BYTES_01(WS_DATAPTR)= BYTES_01(WS_QUOTIENT)
  004e:   (WS_QUOTIENT)= 0x00005dc0
  0055:   (WS_REMAINDER) = 0;
  0058:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x00])
  005c:   (WS_QUOTIENT)/= (WS_REMAINDER)
  0060:   BYTES_23(my_radeon_reg(0x1837))= BYTES_01(WS_QUOTIENT)
  0065:   BYTE_0(my_radeon_reg(0x1837))= 0x02
  006a:   (my_radeon_reg(0x1838))= 0x30000000
  0072:   BYTE_0(my_radeon_reg(0x1835))|= 0x02
  0077:   BYTE_2(my_radeon_reg(0x1839))= BYTE_1(param[0x01])
  007c:   BYTE_0(param[0x01])TEST 0x01
  0080:   JUMP_NotEqual 0x0087
  0083:   BYTE_2(my_radeon_reg(0x1839)) = 0;
  0087:   BYTES_01(my_radeon_reg(0x1839))= 0x3100
  008d:   BYTE_2(my_radeon_reg(0x1839))+= 0x01
  0092:   BYTE_0(param[0x01])TEST 0x02
  0096:   JUMP_Equal 0x009e
  0099:   BYTE_2(my_radeon_reg(0x1839))+= 0x01
  009e:   (WS_REMAINDER) = 0;
  00a1:   BYTE_1(WS_REMAINDER)= BYTE_2(param[0x01])
  00a5:   BYTE_3(WS_REMAINDER)|= 0x80
  00a9:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  00ae:   BYTE_1(WS_REMAINDER)= BYTE_1(param[0x00])
  00b2:   BYTE_2(WS_REMAINDER)+= 0x01
  00b6:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  00bb:   BYTE_0(param[0x01])TEST 0x02
  00bf:   JUMP_Equal 0x00ce
  00c2:   BYTE_1(WS_REMAINDER) = 0;
  00c5:   BYTE_2(WS_REMAINDER)+= 0x01
  00c9:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  00ce:   BYTE_0(param[0x01])TEST 0x01
  00d2:   JUMP_Equal 0x00ef
  00d5:   BYTE_1(WS_REMAINDER)= BYTE_2(param[0x00])
  00d9:   BYTE_2(WS_REMAINDER)+= 0x01
  00dd:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  00e2:   BYTE_1(WS_REMAINDER)= BYTE_3(param[0x00])
  00e6:   BYTE_2(WS_REMAINDER)+= 0x01
  00ea:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  00ef:   BYTE_0(my_radeon_reg(0x1834))|= 0x01
  00f4:   BYTE_2(WS_REMAINDER)= 0x01
  00f8:   goto 0x01c2
  00fb:   BYTE_0(WS_QUOTIENT)= BYTE_1(param[0x01])
  00ff:   BYTE_1(WS_QUOTIENT)= 0x01
  0103:   BYTES_23(WS_QUOTIENT)= BYTES_23(param[0x00])
  0107:   (WS_REMAINDER) = 0;
  010a:   BYTE_1(WS_REMAINDER)= BYTE_2(param[0x01])
  010e:   BYTE_1(WS_REMAINDER)|= 0x01
  0112:   BYTE_3(WS_REMAINDER)|= 0x80
  0116:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  011b:   BYTE_2(my_radeon_reg(0x1839))= 0x04
  0120:   BYTE_1(param[0x01])COMP 0x04
  0124:   JUMP_BelowOrEq 0x0130
  0127:   BYTES_01(my_radeon_reg(0x1839))= 0x1301
  012d:   goto 0x015f
  0130:   BYTE_2(my_radeon_reg(0x1839))= BYTE_0(WS_QUOTIENT)
  0135:   BYTES_01(my_radeon_reg(0x1839))= 0x3101
  013b:   goto 0x015f
  013e:   BYTE_1(my_radeon_reg(0x1839))&= 0xef
  0143:   BYTE_2(my_radeon_reg(0x1839))= 0x03
  0148:   BYTE_0(WS_QUOTIENT)COMP 0x04
  014c:   JUMP_Above 0x015f
  014f:   BYTE_2(my_radeon_reg(0x1839))= BYTE_0(WS_QUOTIENT)
  0154:   BYTE_2(my_radeon_reg(0x1839))-= 0x01
  0159:   MASK   BYTE_1(my_radeon_reg(0x1839))  &  0xfd  |  0x20
  015f:   BYTE_0(my_radeon_reg(0x1834))|= 0x01
  0164:   BYTE_2(WS_REMAINDER)= 0x00
  0168:   goto 0x01c2
  016b:   (WS_REMAINDER)= 0x80000001
  0172:   BYTE_2(WS_REMAINDER)= BYTE_1(WS_QUOTIENT)
  0176:   (my_radeon_reg(0x183a))= (WS_REMAINDER)
  017b:   BYTE_1(param[0x01])COMP 0x01
  017f:   JUMP_NotEqual 0x018a
  0182:   BYTE_2(param[0x00])= BYTE_1(my_radeon_reg(0x183a))
  0187:   goto 0x0201
  018a:   (WS_REMAINDER) = 0;
  018d:   BYTES_01(WS_REMAINDER)= BYTES_23(WS_QUOTIENT)
  0191:   SET_FB_BASE 
  0194:   BYTE_0(WS_REMAINDER)= BYTE_1(my_radeon_reg(0x183a))
  0199:   BYTE_1(WS_REMAINDER)= BYTE_1(my_radeon_reg(0x183a))
  019e:   BYTE_2(WS_REMAINDER)= BYTE_1(my_radeon_reg(0x183a))
  01a3:   BYTE_3(WS_REMAINDER)= BYTE_1(my_radeon_reg(0x183a))
  01a8:   (fb[0x00])= (WS_REMAINDER)
  01ac:   BYTE_1(WS_QUOTIENT) = 0;
  01af:   BYTES_23(WS_QUOTIENT)+= 0x0004
  01b4:   BYTE_0(WS_QUOTIENT)COMP 0x04
  01b8:   JUMP_BelowOrEq 0x0201
  01bb:   BYTE_0(WS_QUOTIENT)-= 0x04
  01bf:   goto 0x013e
  01c2:   BYTE_1(param[0x00])= 0x02
  01c6:   BYTES_01(WS_REMAINDER)= 0x0064
  01cb:   BYTES_01(WS_REMAINDER)-= 0x0001
  01d0:   BYTES_01(WS_REMAINDER)COMP 0x0000
  01d5:   JUMP_Equal 0x0201
  01d8:   my_udelay 0x64
  01da:   BYTE_0(my_radeon_reg(0x1836))TEST 0x10
  01df:   JUMP_Equal 0x01cb
  01e2:   BYTE_1(my_radeon_reg(0x1836))TEST 0x06
  01e7:   JUMP_NotEqual 0x0201
  01ea:   BYTE_1(param[0x00])= 0x01
  01ee:   BYTE_0(my_radeon_reg(0x1835))|= 0x02
  01f3:   BYTE_2(WS_REMAINDER)COMP 0x00
  01f7:   JUMP_Equal 0x016b
  01fa:   BYTE_0(param[0x01])TEST 0x01
  01fe:   JUMP_Equal 0x00fb
  0201:   BYTE_0(my_radeon_reg(0x1835))|= 0x02
  0206:   BYTE_0(my_radeon_reg(0x1834))= 0x02
  020b:   my_udelay 0x01
  020d:   (my_radeon_reg(0x1834)) = 0;
  0211:   (my_radeon_reg(0x183b)) = 0;
  0215:   return;
}
  0216: 
          
                          CTB_DS  32 bytes


command_table  00000000  #37  (WriteOneByteToHWAssistedI2C):

        /*    param size 0x01    */

command_table  0000d65c  #38  (ReadHWAssistedI2CStatus_HPDInterruptService):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_1(param[0x00])COMP 0x01
  000d:   JUMP_Equal 0x0054
  0010:   BYTE_2(param[0x00]) = 0;
  0013:   BYTE_0(param[0x00])COMP 0x06
  0017:   JUMP_Above 0x0050
  001a:   BYTE_0(param[0x00])-= 0x01
  001e:   BYTE_0(param[0x00])*= 0x03
  0022:   BYTES_01(WS_REGPTR) = 0;
  0025:   BYTE_0(WS_REGPTR)= BYTE_0(WS_QUOTIENT)
  0029:   BYTE_2(my_radeon_reg(0x1808))|= 0x01
  002e:   BYTE_2(param[0x00])= BYTE_0(my_radeon_reg(0x1807))
  0033:   BYTE_2(param[0x00])&= 0x03
  0037:   BYTE_0(my_radeon_reg(0x1807))TEST 0x02
  003c:   JUMP_Equal 0x004a
  003f:   MASK   BYTES_01(my_radeon_reg(0x1808))  &  0xfeff  |  0x0001
  0047:   goto 0x0050
  004a:   BYTES_01(my_radeon_reg(0x1808))|= 0x0101
  0050:   SET_REG_BLOCK 0x0000
  0053:   return;
}
  0054:   BYTE_1(my_radeon_reg(0x05cf))|= 0x08
  0059:   (my_radeon_reg(0x00b5))= 0x00000001
  0061:   BYTE_0(my_radeon_reg(0x00b6))COMP 0x00
  0066:   JUMP_Equal 0x0061
  0069:   return;
}


command_table  00000000  #39  (SpeedFanControl):

        /*    param size 0x01    */

command_table  00000000  #3a  (PowerConnectorDetection):

        /*    param size 0x01    */

command_table  00000000  #3b  (MC_Synchronization):

        /*    param size 0x01    */

command_table  0000d6c6  #3c  (ComputeMemoryEnginePLL):

        /*    param size 0x03    */

  0006:   (param[0x00])&= 0x00ffffff
  000d:   SET_DATA_BLOCK 0x1e (IntegratedSystemInfo)
  000f:   (WS_FB_WIN)= (data[0x0008])
  0014:   (WS_QUOTIENT)= 0x00001838
  001b:   (param[0x00])COMP 0x00000000
  0022:   JUMP_Equal 0x005d
  0025:   (WS_FB_WIN)*= 0x00000064
  002c:   (WS_QUOTIENT)+= (param[0x00])
  0030:   (WS_QUOTIENT)-= 0x00000001
  0037:   (WS_QUOTIENT)/= (param[0x00])
  003b:   (WS_QUOTIENT)COMP 0x00001838
  0042:   JUMP_Below 0x004c
  0045:   (WS_QUOTIENT)= 0x00001838
  004c:   (WS_QUOTIENT)COMP 0x000000c8
  0053:   JUMP_Above 0x005d
  0056:   (WS_QUOTIENT)= 0x000000c8
  005d:   SET_DATA_BLOCK 0xff (this table)
  005f:   BYTES_01(WS_DATAPTR)+= 0x00bb
  0064:   BYTES_01(WS_QUOTIENT)COMP BYTES_01(data[0x0002])
  0069:   JUMP_BelowOrEq 0x0074
  006c:   BYTES_01(WS_DATAPTR)+= 0x0008
  0071:   goto 0x0064
  0074:   BYTES_01(WS_QUOTIENT)-= BYTES_01(data[0x0000])
  0079:   BYTES_01(WS_QUOTIENT)+= BYTES_01(data[0x0006])
  007e:   BYTES_01(WS_QUOTIENT)-= 0x0001
  0083:   BYTES_01(WS_QUOTIENT)/= BYTES_01(data[0x0006])
  0088:   BYTES_01(WS_QUOTIENT)+= BYTES_01(data[0x0004])
  008d:   BYTE_3(param[0x00])= BYTE_0(WS_QUOTIENT)
  0091:   BYTES_01(WS_QUOTIENT)-= BYTES_01(data[0x0004])
  0096:   BYTES_01(WS_QUOTIENT)*= BYTES_01(data[0x0006])
  009b:   BYTES_01(WS_QUOTIENT)+= BYTES_01(data[0x0000])
  00a0:   (WS_REMAINDER)= (WS_QUOTIENT)
  00a4:   (WS_FB_WIN)*= 0x00000064
  00ab:   (WS_QUOTIENT)/= (WS_REMAINDER)
  00af:   BYTES_01(param[0x00])= BYTES_01(WS_QUOTIENT)
  00b3:   BYTE_2(param[0x00])= BYTE_2(WS_QUOTIENT)
  00b7:   return;
}
  00b8:   
                          CTB_DS  24 bytes


command_table  00000000  #3d  (MemoryRefreshConversion):

        /*    param size 0x01    */

command_table  00000000  #3e  (VRAM_GetCurrentInfoBlock):

        /*    param size 0x01    */

command_table  00000000  #3f  (DynamicMemorySettings):

        /*    param size 0x01    */

command_table  00000000  #40  (MemoryTraining):

        /*    param size 0x01    */

command_table  0000d79a  #41  (EnableSpreadSpectrumOnPPLL):

        /*    param size 0x03    */

  0006:   my_INDIRECT_IO_MM();
  0009:   SET_REG_BLOCK 0x0014
  000c:   BYTE_2(param[0x00])TEST 0x0c
  0010:   JUMP_Equal 0x0020
  0013:   SET_REG_BLOCK 0x0028
  0016:   BYTE_2(param[0x00])TEST 0x04
  001a:   JUMP_NotEqual 0x0020
  001d:   SET_REG_BLOCK 0x0000
  0020:   BYTE_3(param[0x00])COMP 0x01
  0024:   JUMP_Equal 0x003d
  0027:   BYTE_1(my_radeon_reg(0x1704))&= 0xef
  002c:   BYTES_01(my_radeon_reg(0x1705))COMP 0x0000
  0032:   JUMP_NotEqual 0x0070
  0035:   BYTE_2(my_radeon_reg(0x1705))&= 0xfc
  003a:   goto 0x0070
  003d:   BYTE_1(my_radeon_reg(0x1704))TEST 0x10
  0042:   JUMP_NotEqual 0x0070
  0045:   BYTE_0(my_radeon_reg(0x1707))&= 0xf7
  004a:   MASK   BYTE_2(my_radeon_reg(0x1705))  &  0xfc  |  0x01
  0050:   BYTE_2(param[0x00])TEST 0x01
  0054:   JUMP_NotEqual 0x005b
  0057:   BYTE_1(param[0x01])|= 0x20
  005b:   BYTE_1(param[0x01])|= 0x10
  005f:   BYTES_01(my_radeon_reg(0x1703))= BYTES_01(param[0x00])
  0064:   (my_radeon_reg(0x1704))= (param[0x01])
  0069:   my_mdelay 0x01
  006b:   BYTE_0(my_radeon_reg(0x1707))|= 0x08
  0070:   SET_REG_BLOCK 0x0000
  0073:   return;
}


command_table  00000000  #42  (TMDSAOutputControl):

        /*    param size 0x01    */

command_table  0000d956  #43  (SetVoltage):

        /*    param size 0x02    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTES_01(param[0x00])COMP 0x0001
  000e:   JUMP_NotEqual 0x002f
  0011:   (WS_REMAINDER) = 0;
  0014:   BYTES_01(WS_REMAINDER)= BYTES_23(param[0x00])
  0018:   SHIFT_LEFT (WS_REMAINDER)  by  02
  001c:   (my_radeon_reg(0x00a4))= (WS_REMAINDER)
  0021:   BYTES_01(my_radeon_reg(0x0094))= 0x0125
  0027:   BYTE_0(my_radeon_reg(0x0095))COMP 0x00
  002c:   JUMP_Equal 0x0027
  002f:   return;
}


command_table  00000000  #44  (DAC1OutputControl):

        /*    param size 0x01    */

command_table  00000000  #45  (DAC2OutputControl):

        /*    param size 0x01    */

command_table  00000000  #46  (SetupHWAssistedI2CStatus):

        /*    param size 0x01    */

command_table  0000c188  #47  (ClockSource):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (my_radeon_reg(0x0082))= 0xc0200000
  0011:   BYTE_2(my_radeon_reg(0x0083))&= 0xfc
  0016:   return;
}


command_table  00000000  #48  (MemoryDeviceInit):

        /*    param size 0x01    */

command_table  0000d80e  #49  (EnableYUV):

        /*    param size 0x02    */

  0006:   BYTES_01(WS_QUOTIENT)= BYTES_01(param[0x00])
  000a:   BYTES_01(param[0x00])= 0xff00
  000f:   SET_DATA_BLOCK 0x16 (Object_Info_Object_Header)
  0011:   BYTES_01(WS_REMAINDER)= BYTES_01(WS_QUOTIENT)
  0015:   SHIFT_RIGHT BYTES_01(WS_REMAINDER)  by  0c
  0019:   BYTE_0(WS_REMAINDER)COMP 0x02
  001d:   JUMP_Equal 0x002f
  0020:   BYTE_0(WS_REMAINDER)COMP 0x03
  0024:   JUMP_NotEqual 0x00b9
  0027:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x0006])
  002c:   goto 0x0034
  002f:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x000a])
  0034:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0000])
  0039:   BYTE_0(WS_REMAINDER)COMP 0x00
  003d:   JUMP_Equal 0x00b9
  0040:   BYTES_01(WS_QUOTIENT)COMP BYTES_01(data[0x0004])
  0045:   JUMP_Equal 0x0054
  0048:   BYTES_01(WS_DATAPTR)+= 0x0008
  004d:   BYTE_0(WS_REMAINDER)-= 0x01
  0051:   goto 0x0039
  0054:   BYTES_01(WS_QUOTIENT)= BYTES_01(data[0x0006])
  0059:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0008])
  005e:   SET_DATA_BLOCK 0x16 (Object_Info_Object_Header)
  0060:   BYTES_01(WS_QUOTIENT)+= BYTES_01(WS_DATAPTR)
  0064:   BYTES_01(WS_REMAINDER)COMP 0x0000
  0069:   JUMP_Equal 0x00a7
  006c:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  0070:   (WS_REMAINDER) = 0;
  0073:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0000])
  0078:   BYTE_2(WS_REMAINDER)= BYTE_0(data[0x0001])
  007d:   BYTE_0(WS_REMAINDER)COMP 0xff
  0081:   JUMP_Equal 0x00a7
  0084:   BYTE_0(WS_REMAINDER)COMP 0x01
  0088:   JUMP_NotEqual 0x0090
  008b:   BYTE_0(param[0x00])= BYTE_0(data[0x0002])
  0090:   BYTE_0(WS_REMAINDER)COMP 0x02
  0094:   JUMP_NotEqual 0x00a0
  0097:   BYTE_1(param[0x00])= BYTE_0(data[0x0002])
  009c:   BYTE_1(param[0x00])-= 0x01
  00a0:   BYTES_01(WS_DATAPTR)+= BYTES_23(WS_REMAINDER)
  00a4:   goto 0x0073
  00a7:   BYTES_01(WS_DATAPTR)= BYTES_01(WS_QUOTIENT)
  00ab:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0001])
  00b0:   BYTES_01(WS_REMAINDER)COMP 0x0000
  00b5:   JUMP_Equal 0x00b9
  00b8:   return;
}
  00b9:   BYTES_01(WS_DATAPTR) = 0;
  00bc:   return;
}


command_table  00000000  #4a  (DIG1EncoderControl):

        /*    param size 0x01    */

command_table  0000db50  #4b  (DIG2EncoderControl):

        /*    param size 0x01    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTE_2(my_radeon_reg(0x05c9))TEST 0x04
  000e:   JUMP_Equal 0x03f9
  0011:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0013:   BYTE_0(work[0x00])= BYTE_0(data[0x0042])
  0018:   BYTE_0(work[0x00])COMP 0x02
  001c:   JUMP_Below 0x03f9
  001f:   BYTES_01(param[0x00])= 0xff00
  0024:   BYTES_01(WS_QUOTIENT)= 0x3114
  0029:   SET_DATA_BLOCK 0x16 (Object_Info_Object_Header)
  002b:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x0006])
  0030:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0000])
  0035:   BYTE_0(WS_REMAINDER)COMP 0x00
  0039:   JUMP_Equal 0x00b4
  003c:   BYTES_01(WS_QUOTIENT)COMP BYTES_01(data[0x0004])
  0041:   JUMP_Equal 0x0050
  0044:   BYTES_01(WS_DATAPTR)+= 0x0008
  0049:   BYTE_0(WS_REMAINDER)-= 0x01
  004d:   goto 0x0035
  0050:   BYTES_01(WS_QUOTIENT)= BYTES_01(data[0x0006])
  0055:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0008])
  005a:   SET_DATA_BLOCK 0x16 (Object_Info_Object_Header)
  005c:   BYTES_01(WS_QUOTIENT)+= BYTES_01(WS_DATAPTR)
  0060:   BYTES_01(WS_REMAINDER)COMP 0x0000
  0065:   JUMP_Equal 0x00a3
  0068:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  006c:   (WS_REMAINDER) = 0;
  006f:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0000])
  0074:   BYTE_2(WS_REMAINDER)= BYTE_0(data[0x0001])
  0079:   BYTE_0(WS_REMAINDER)COMP 0xff
  007d:   JUMP_Equal 0x00a3
  0080:   BYTE_0(WS_REMAINDER)COMP 0x01
  0084:   JUMP_NotEqual 0x008c
  0087:   BYTE_0(param[0x00])= BYTE_0(data[0x0002])
  008c:   BYTE_0(WS_REMAINDER)COMP 0x02
  0090:   JUMP_NotEqual 0x009c
  0093:   BYTE_1(param[0x00])= BYTE_0(data[0x0002])
  0098:   BYTE_1(param[0x00])-= 0x01
  009c:   BYTES_01(WS_DATAPTR)+= BYTES_23(WS_REMAINDER)
  00a0:   goto 0x006f
  00a3:   BYTES_01(WS_DATAPTR)= BYTES_01(WS_QUOTIENT)
  00a7:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0001])
  00ac:   BYTES_01(WS_REMAINDER)COMP 0x0000
  00b1:   JUMP_NotEqual 0x00b8
  00b4:   BYTES_01(WS_DATAPTR) = 0;
  00b7:   return;
}
  00b8:   
                          switch  BYTE_0(work[0x00])
        02->00c2
  00c1:   return;
}
  00c2:   SET_FB_BASE 
  00c8:   (work[0x00])= (param[0x00])
  00cc:   (fb[0x00])= 0x40900509
  00d3:   (param[0x01]) = 0;
  00d6:   BYTE_0(param[0x01])= BYTE_0(param[0x00])
  00da:   BYTE_3(param[0x01])= BYTE_1(param[0x00])
  00de:   (param[0x00])= 0x4c044c00
  00e5:   my_ProcessAuxChannelTransaction();
  00e7:   BYTE_1(param[0x02])COMP 0x00
  00eb:   JUMP_Equal 0x00fb
  00ee:   my_udelay 0x90
  00f0:   BYTE_3(param[0x00])+= 0x01
  00f4:   BYTE_3(param[0x00])COMP 0x06
  00f8:   JUMP_Below 0x00de
  00fb:   (param[0x00])= (work[0x00])
  00ff:   BYTE_3(WS_QUOTIENT)= 0x01
  0103:   SET_FB_BASE 
  0109:   BYTE_0(fb[0x00])COMP 0x04
  010d:   JUMP_Equal 0x0114
  0110:   BYTE_3(WS_QUOTIENT)= 0x02
  0114:   SET_DATA_BLOCK 0xff (this table)
  0116:   BYTES_01(WS_DATAPTR)+= 0x043d
  011b:   (WS_REMAINDER)= 0x00004c80
  0122:   SET_FB_BASE 
  0125:   (fb[0x00])= (data[0x0000])
  012a:   BYTES_01(WS_DATAPTR)+= 0x0004
  012f:   (WS_REMAINDER)+= 0x00000004
  0136:   (fb[0x00])COMP 0xffffffff
  013d:   JUMP_NotEqual 0x0122
  0140:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0142:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0034])
  0147:   SHIFT_LEFT BYTE_0(WS_REMAINDER)  by  02
  014b:   SET_FB_BASE 
  0151:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  0155:   (WS_REMAINDER) = 0;
  0158:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0035])
  015d:   SET_FB_BASE 
  0163:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  0167:   (WS_REMAINDER) = 0;
  016a:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0039])
  016f:   SHIFT_LEFT BYTES_01(WS_REMAINDER)  by  02
  0173:   SET_FB_BASE 
  0179:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  017d:   (WS_REMAINDER) = 0;
  0180:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x003a])
  0185:   SHIFT_LEFT BYTES_01(WS_REMAINDER)  by  02
  0189:   SET_FB_BASE 
  018f:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  0193:   (WS_REMAINDER) = 0;
  0196:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0036])
  019b:   SET_FB_BASE 
  01a1:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  01a5:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0037])
  01aa:   SHIFT_LEFT BYTE_0(WS_REMAINDER)  by  02
  01ae:   SET_FB_BASE 
  01b4:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  01b8:   (WS_REMAINDER) = 0;
  01bb:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0038])
  01c0:   SET_FB_BASE 
  01c6:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  01ca:   (WS_REMAINDER) = 0;
  01cd:   BYTE_3(WS_QUOTIENT)COMP 0x01
  01d1:   JUMP_NotEqual 0x01d8
  01d4:   BYTE_0(WS_REMAINDER)|= 0x08
  01d8:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  01da:   BYTE_3(WS_REMAINDER)= BYTE_0(data[0x0028])
  01df:   BYTE_3(WS_REMAINDER)TEST 0x01
  01e3:   JUMP_Equal 0x01ea
  01e6:   BYTE_0(WS_REMAINDER)|= 0x80
  01ea:   BYTE_3(WS_REMAINDER)TEST 0x02
  01ee:   JUMP_NotEqual 0x01f5
  01f1:   BYTE_0(WS_REMAINDER)|= 0x04
  01f5:   BYTE_3(WS_REMAINDER)TEST 0x20
  01f9:   JUMP_Equal 0x0200
  01fc:   BYTE_0(WS_REMAINDER)|= 0x01
  0200:   SET_FB_BASE 
  0206:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  020a:   (param[0x01])= 0x00000006
  0211:   (WS_REMAINDER) = 0;
  0214:   SET_DATA_BLOCK 0x1a (ASIC_InternalSS_Info_ASIC_MVDDC_Info)
  0216:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0000])
  021b:   BYTES_01(WS_REMAINDER)+= BYTES_01(WS_DATAPTR)
  021f:   BYTES_01(WS_DATAPTR)+= 0x0004
  0224:   BYTE_0(param[0x01])COMP BYTE_0(data[0x0008])
  0229:   JUMP_Equal 0x023f
  022c:   BYTES_01(WS_DATAPTR)+= 0x000c
  0231:   BYTES_01(WS_DATAPTR)COMP BYTES_01(WS_REMAINDER)
  0235:   JUMP_NotEqual 0x0224
  0238:   BYTE_0(WS_REMAINDER)= 0x00
  023c:   goto 0x0389
  023f:   BYTES_23(WS_REMAINDER)= BYTES_01(data[0x0004])
  0244:   BYTES_23(WS_REMAINDER)COMP 0x0000
  0249:   JUMP_Equal 0x0238
  024c:   BYTE_3(WS_QUOTIENT)COMP 0x01
  0250:   JUMP_NotEqual 0x02c6
  0253:   BYTE_0(WS_REMAINDER)= 0x00
  0257:   BYTES_23(WS_REMAINDER)COMP 0x0017
  025c:   JUMP_Below 0x0333
  025f:   BYTE_0(WS_REMAINDER)= 0x01
  0263:   BYTES_23(WS_REMAINDER)COMP 0x0047
  0268:   JUMP_Below 0x0333
  026b:   BYTE_0(WS_REMAINDER)= 0x02
  026f:   BYTES_23(WS_REMAINDER)COMP 0x007c
  0274:   JUMP_Below 0x0333
  0277:   BYTE_0(WS_REMAINDER)= 0x03
  027b:   BYTES_23(WS_REMAINDER)COMP 0x00ac
  0280:   JUMP_Below 0x0333
  0283:   BYTE_0(WS_REMAINDER)= 0x04
  0287:   BYTES_23(WS_REMAINDER)COMP 0x00d3
  028c:   JUMP_Below 0x0333
  028f:   BYTE_0(WS_REMAINDER)= 0x05
  0293:   BYTES_23(WS_REMAINDER)COMP 0x0110
  0298:   JUMP_Below 0x0333
  029b:   BYTE_0(WS_REMAINDER)= 0x06
  029f:   BYTES_23(WS_REMAINDER)COMP 0x014b
  02a4:   JUMP_Below 0x0333
  02a7:   BYTE_0(WS_REMAINDER)= 0x07
  02ab:   BYTES_23(WS_REMAINDER)COMP 0x0171
  02b0:   JUMP_Below 0x0333
  02b3:   BYTE_0(WS_REMAINDER)= 0x08
  02b7:   BYTES_23(WS_REMAINDER)COMP 0x01ac
  02bc:   JUMP_Below 0x0333
  02bf:   BYTE_0(WS_REMAINDER)= 0x09
  02c3:   goto 0x0333
  02c6:   (work[0x00])= (WS_DATAPTR)
  02ca:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  02cc:   (param[0x01]) = 0;
  02cf:   BYTES_01(param[0x01])= BYTES_01(data[0x0004])
  02d4:   SET_DATA_BLOCK 0xff (this table)
  02d6:   BYTES_01(WS_DATAPTR)+= 0x03fd
  02db:   (param[0x01])COMP (data[0x0000])
  02e0:   JUMP_Below 0x02eb
  02e3:   BYTES_01(WS_DATAPTR)+= 0x0008
  02e8:   goto 0x02db
  02eb:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0004])
  02f0:   BYTES_23(WS_REMAINDER)COMP 0x0028
  02f5:   JUMP_Below 0x032a
  02f8:   BYTES_23(WS_REMAINDER)COMP 0x003c
  02fd:   JUMP_Below 0x032d
  0300:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0005])
  0305:   BYTES_23(WS_REMAINDER)COMP 0x0050
  030a:   JUMP_Below 0x032a
  030d:   BYTES_23(WS_REMAINDER)COMP 0x0078
  0312:   JUMP_Below 0x032d
  0315:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0006])
  031a:   BYTES_23(WS_REMAINDER)COMP 0x0078
  031f:   JUMP_Below 0x032a
  0322:   BYTES_23(WS_REMAINDER)COMP 0x00b4
  0327:   JUMP_Below 0x032d
  032a:   goto 0x0238
  032d:   SET_DATA_BLOCK 0x1a (ASIC_InternalSS_Info_ASIC_MVDDC_Info)
  032f:   (WS_DATAPTR)= (work[0x00])
  0333:   SET_FB_BASE 
  0339:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  033d:   BYTES_23(WS_REMAINDER)= BYTES_01(data[0x0006])
  0342:   BYTE_0(WS_REMAINDER)= 0x00
  0346:   BYTES_23(WS_REMAINDER)COMP 0x09ab
  034b:   JUMP_Below 0x036a
  034e:   BYTE_0(WS_REMAINDER)= 0x20
  0352:   BYTES_23(WS_REMAINDER)COMP 0x1036
  0357:   JUMP_Below 0x036a
  035a:   BYTE_0(WS_REMAINDER)= 0x40
  035e:   BYTES_23(WS_REMAINDER)COMP 0x16a8
  0363:   JUMP_Below 0x036a
  0366:   BYTE_0(WS_REMAINDER)= 0x60
  036a:   BYTE_0(WS_REMAINDER)|= 0x80
  036e:   BYTE_2(WS_REMAINDER)= BYTE_0(data[0x0009])
  0373:   BYTE_2(WS_REMAINDER)TEST 0x01
  0377:   JUMP_NotEqual 0x0389
  037a:   BYTE_0(WS_REMAINDER)|= 0x10
  037e:   BYTE_3(WS_QUOTIENT)COMP 0x01
  0382:   JUMP_Equal 0x0389
  0385:   BYTE_0(WS_REMAINDER)&= 0x7f
  0389:   SET_FB_BASE 
  038f:   BYTE_1(fb[0x00])= BYTE_0(WS_REMAINDER)
  0393:   (work[0x00])= 0x00004c80
  039a:   BYTE_0(param[0x01])= BYTE_0(param[0x00])
  039e:   BYTE_3(param[0x01])= BYTE_1(param[0x00])
  03a2:   (WS_REMAINDER) = 0;
  03a5:   BYTES_01(WS_REMAINDER)= BYTES_01(work[0x00])
  03a9:   SET_FB_BASE 
  03ac:   (WS_REMAINDER)= (fb[0x00])
  03b0:   (WS_REMAINDER)COMP 0xffffffff
  03b7:   JUMP_Equal 0x03f9
  03ba:   SET_FB_BASE 
  03c0:   (fb[0x01])= 0x618003f0
  03c7:   (fb[0x02])= (WS_REMAINDER)
  03cb:   (param[0x00])= 0x00004c04
  03d2:   BYTES_12(param[0x01]) = 0;
  03d5:   my_ProcessAuxChannelTransaction();
  03d7:   BYTE_1(param[0x01])COMP 0x00
  03db:   JUMP_Equal 0x03ee
  03de:   my_udelay 0xc8
  03e0:   my_udelay 0xc8
  03e2:   BYTE_2(work[0x00])+= 0x01
  03e6:   BYTE_2(work[0x00])COMP 0x07
  03ea:   JUMP_Below 0x03a2
  03ed:   return;
}
  03ee:   BYTES_01(work[0x00])+= 0x0004
  03f3:   BYTES_23(work[0x00]) = 0;
  03f6:   goto 0x03a2
  03f9:   return;
}
  03fa: 
        
        
        
          
                          CTB_DS  128 bytes


command_table  0000dfce  #4c  (DIG1TransmitterControl_UNIPHYTransmitterControl):

        /*    param size 0x03    */

  0006:   my_INDIRECT_IO_MM();
  0009:   (WS_FB_WIN)= (param[0x02])
  000d:   BYTES_23(WS_FB_WIN) = 0;
  0010:   BYTE_2(WS_FB_WIN)= BYTE_2(param[0x00])
  0014:   SHIFT_LEFT BYTES_23(WS_FB_WIN)  by  04
  0018: 
          
                          switch  BYTE_3(param[0x00])
        07->0484 01->004c 00->037f 0b->04c2 03->05d6 02->0608 04->0644 06->05b9
        05->05b3 0c->06d4 0d->06e7
  0049:   goto 0x0480
  004c:   BYTE_0(param[0x02])= BYTE_2(param[0x00])
  0050:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0052:   BYTE_1(my_radeon_reg(0x1c50))= BYTE_0(WS_FB_WIN)
  0057:   BYTE_2(my_radeon_reg(0x1c50))= BYTE_2(param[0x01])
  005c:   BYTE_0(WS_REMAINDER)= BYTE_3(param[0x01])
  0060:   BYTE_0(WS_REMAINDER)&= 0x70
  0064:   BYTE_0(WS_REMAINDER)COMP 0x00
  0068:   JUMP_Equal 0x0074
  006b:   BYTE_0(WS_REMAINDER)-= 0x10
  006f:   BYTE_3(my_radeon_reg(0x1c50))= BYTE_0(WS_REMAINDER)
  0074:   BYTE_2(param[0x01])COMP 0x05
  0078:   JUMP_Equal 0x00d7
  007b:   BYTE_2(param[0x01])COMP 0x00
  007f:   JUMP_Equal 0x00d7
  0082:   BYTE_2(param[0x01])COMP 0x01
  0086:   JUMP_NotEqual 0x00aa
  0089:   BYTE_0(param[0x01])= 0x04
  008d:   BYTE_2(my_radeon_reg(0x1c00))TEST 0x01
  0092:   JUMP_Equal 0x00a1
  0095:   BYTE_0(param[0x01])= 0x08
  0099:   SHIFT_RIGHT BYTES_01(param[0x00])  by  01
  009d:   BYTE_3(param[0x01])|= 0x02
  00a1:   BYTES_01(my_radeon_reg(0x1c8d))= 0x000f
  00a7:   goto 0x00f9
  00aa:   BYTE_0(param[0x01])COMP 0x04
  00ae:   JUMP_BelowOrEq 0x00b6
  00b1:   BYTE_2(my_radeon_reg(0x1c00))|= 0x01
  00b6:   BYTE_2(param[0x01])COMP 0x03
  00ba:   JUMP_NotEqual 0x00ce
  00bd:   BYTES_01(param[0x00])COMP 0x39d0
  00c2:   JUMP_Below 0x00ce
  00c5:   BYTES_01(my_radeon_reg(0x1c8d))= 0x000f
  00cb:   goto 0x00f9
  00ce:   BYTES_01(my_radeon_reg(0x1c8d))= 0x010f
  00d4:   goto 0x00f9
  00d7:   BYTE_2(param[0x01])= 0x00
  00db:   BYTE_3(param[0x01])|= 0x02
  00df:   BYTE_0(WS_SHIFT)= BYTE_0(param[0x01])
  00e3:   (WS_QUOTIENT)= (WS_OR_MASK)
  00e7:   BYTE_0(WS_QUOTIENT)-= 0x01
  00eb:   BYTE_0(param[0x01])-= 0x01
  00ef:   BYTE_0(my_radeon_reg(0x1cc2))= BYTE_0(param[0x01])
  00f4:   BYTES_01(my_radeon_reg(0x1c8d))= BYTES_01(WS_QUOTIENT)
  00f9:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  00fd:   BYTE_0(my_radeon_reg(0x1986))TEST 0x01
  0102:   JUMP_NotEqual 0x0480
  0105:   SET_DATA_BLOCK 0xff (this table)
  0107:   BYTES_01(WS_DATAPTR)+= 0x06f1
  010c:   (WS_QUOTIENT) = 0;
  010f:   BYTE_2(param[0x00])*= 0x08
  0113:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_QUOTIENT)
  0117:   BYTE_2(my_radeon_reg(0x198a))&= 0xfe
  011c:   (WS_QUOTIENT)= (data[0x0000])
  0121:   BYTE_2(param[0x01])COMP 0x01
  0125:   JUMP_NotEqual 0x012f
  0128:   (WS_QUOTIENT)= 0x03000102
  012f:   BYTE_0(my_radeon_reg(0x198a))|= 0x01
  0134:   (my_radeon_reg(0x198e))= (WS_QUOTIENT)
  0139:   BYTE_1(my_radeon_reg(0x198d))= BYTE_0(data[0x0004])
  013f:   BYTE_2(my_radeon_reg(0x198d))&= 0xfc
  0144:   BYTE_1(my_radeon_reg(0x1987))|= BYTE_0(data[0x0005])
  014a:   BYTE_0(param[0x01])COMP 0x04
  014e:   JUMP_BelowOrEq 0x0165
  0151:   BYTES_01(WS_REGPTR)COMP BYTES_23(WS_FB_WIN)
  0155:   JUMP_NotEqual 0x0165
  0158:   BYTES_01(WS_REGPTR)+= 0x0010
  015d:   BYTE_2(my_radeon_reg(0x198a))|= 0x01
  0162:   goto 0x012f
  0165:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  0169:   BYTE_2(param[0x01])COMP 0x00
  016d:   JUMP_Equal 0x01cf
  0170:   SET_DATA_BLOCK 0x07 (TMDS_Info)
  0172:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x0008])
  0177:   (param[0x02])= (param[0x00])
  017b:   BYTE_3(param[0x02])= BYTE_2(param[0x01])
  017f:   my_GetConditionalGoldenSetting_SetCRTC_DPM_State();
  0181:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  0185:   (my_radeon_reg(0x1980))= (data[0x0004])
  018b:   (my_radeon_reg(0x1981))= (data[0x0008])
  0191:   (my_radeon_reg(0x1982))= (data[0x000c])
  0197:   (my_radeon_reg(0x1983))= (data[0x0010])
  019d:   BYTES_01(my_radeon_reg(0x198b))= BYTES_01(data[0x0014])
  01a3:   BYTES_01(my_radeon_reg(0x198f))= BYTES_01(data[0x0016])
  01a9:   BYTES_12(my_radeon_reg(0x1984))= BYTES_01(data[0x0018])
  01af:   BYTE_3(param[0x02])= BYTE_0(data[0x001a])
  01b4:   BYTE_0(my_radeon_reg(0x1984))&= 0xfe
  01b9:   BYTE_0(param[0x01])COMP 0x04
  01bd:   JUMP_BelowOrEq 0x01d5
  01c0:   BYTES_01(WS_REGPTR)COMP BYTES_23(WS_FB_WIN)
  01c4:   JUMP_NotEqual 0x01d5
  01c7:   BYTES_01(WS_REGPTR)+= 0x0010
  01cc:   goto 0x0185
  01cf:   BYTES_01(WS_FB_WIN) = 0;
  01d2:   goto 0x04c2
  01d5:   my_udelay 0x28
  01d7:   BYTE_0(param[0x02])= BYTE_2(param[0x00])
  01db:   BYTE_0(param[0x02])|= 0x40
  01df:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  01e1:   BYTE_3(my_radeon_reg(0x1908))= BYTE_3(param[0x02])
  01e6:   BYTE_0(my_radeon_reg(0x1908))|= 0x01
  01eb:   BYTE_0(param[0x01])COMP 0x04
  01ef:   JUMP_BelowOrEq 0x01fc
  01f2:   BYTE_3(my_radeon_reg(0x1909))= BYTE_3(param[0x02])
  01f7:   BYTE_0(my_radeon_reg(0x1909))|= 0x01
  01fc:   my_udelay 0xfa
  01fe:   SET_REG_BLOCK 0x0000
  0201:   BYTE_2(param[0x01])COMP 0x01
  0205:   JUMP_NotEqual 0x0210
  0208:   BYTES_01(WS_REGPTR) = 0;
  020b:   BYTE_0(my_radeon_reg(0x1919))|= 0x01
  0210:   SET_DATA_BLOCK 0xff (this table)
  0212:   BYTES_01(WS_DATAPTR)+= 0x0701
  0217:   BYTES_01(WS_REMAINDER) = 0;
  021a:   BYTE_0(WS_REMAINDER)= BYTE_3(param[0x01])
  021e:   BYTE_0(WS_REMAINDER)&= 0x0c
  0222:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  0226:   BYTES_01(WS_FB_WIN)= BYTES_01(data[0x0002])
  022b:   BYTES_01(WS_REMAINDER)COMP 0x000c
  0230:   JUMP_Equal 0x024c
  0233:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  0238:   BYTE_2(param[0x00])COMP 0x00
  023c:   JUMP_Above 0x0247
  023f:   BYTE_0(my_radeon_reg(0x1706))|= 0x01
  0244:   goto 0x024c
  0247:   BYTE_0(my_radeon_reg(0x1706))|= 0x04
  024c:   SET_DATA_BLOCK 0x07 (TMDS_Info)
  024e:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x000c])
  0253:   (param[0x02])= (param[0x00])
  0257:   BYTE_3(param[0x02])= BYTE_2(param[0x01])
  025b:   my_GetConditionalGoldenSetting_SetCRTC_DPM_State();
  025d:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  0261:   (WS_QUOTIENT)= (my_radeon_reg(0x1987))
  0266:   BYTES_23(WS_QUOTIENT)= BYTES_01(data[0x000c])
  026b:   MASK   BYTES_01(WS_QUOTIENT)  &  0x2000  |  BYTES_01(WS_FB_WIN)
  0271:   BYTE_2(param[0x01])COMP 0x01
  0275:   JUMP_BelowOrEq 0x0283
  0278:   BYTE_3(param[0x01])TEST 0x02
  027c:   JUMP_Equal 0x0283
  027f:   BYTE_0(WS_QUOTIENT)|= 0x02
  0283:   (my_radeon_reg(0x1985))= (data[0x0004])
  0289:   (my_radeon_reg(0x1987))= (WS_QUOTIENT)
  028e:   (WS_REMAINDER)= (data[0x0008])
  0293:   MASK   BYTE_0(WS_REMAINDER)  &  0xf7  |  0x07
  0298:   (my_radeon_reg(0x1986))= (WS_REMAINDER)
  029d:   my_udelay 0x0f
  029f:   BYTE_0(my_radeon_reg(0x1986))&= 0xfd
  02a4:   my_udelay 0xc8
  02a6:   my_udelay 0xc8
  02a8:   BYTE_0(my_radeon_reg(0x1986))|= 0x08
  02ad:   my_udelay 0xc8
  02af:   my_udelay 0xc8
  02b1:   BYTE_0(my_radeon_reg(0x1984))|= 0x02
  02b6:   BYTE_0(param[0x01])COMP 0x04
  02ba:   JUMP_BelowOrEq 0x02c2
  02bd:   BYTE_0(my_radeon_reg(0x1994))|= 0x02
  02c2:   SET_REG_BLOCK 0x0000
  02c5:   BYTE_0(WS_SHIFT)= BYTE_2(param[0x00])
  02c9:   (WS_REMAINDER)= (WS_OR_MASK)
  02cd:   BYTE_0(my_radeon_reg(0x0166))= BYTE_0(WS_REMAINDER)
  02d2:   BYTE_0(param[0x01])COMP 0x04
  02d6:   JUMP_BelowOrEq 0x02e2
  02d9:   SHIFT_LEFT BYTE_0(WS_REMAINDER)  by  01
  02dd:   (my_radeon_reg(0x0166))|= (WS_REMAINDER)
  02e2:   my_udelay 0x05
  02e4:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  02e8:   BYTE_0(my_radeon_reg(0x1984))&= 0xfd
  02ed:   BYTE_0(param[0x01])COMP 0x04
  02f1:   JUMP_BelowOrEq 0x02f9
  02f4:   BYTE_0(my_radeon_reg(0x1994))&= 0xfd
  02f9:   BYTES_01(WS_REGPTR) = 0;
  02fc:   BYTE_0(WS_REGPTR)= BYTE_2(param[0x00])
  0300:   BYTE_0(my_radeon_reg(0x0160))|= 0x01
  0305:   my_udelay 0x01
  0307:   SET_REG_BLOCK 0x0000
  030a:   BYTE_0(my_radeon_reg(0x0166)) = 0;
  030e:   my_udelay 0x0a
  0310:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  0314:   BYTE_2(my_radeon_reg(0x198d))= 0x10
  0319:   BYTE_0(param[0x01])COMP 0x04
  031d:   JUMP_BelowOrEq 0x0324
  0320:   BYTE_2(my_radeon_reg(0x199d)) = 0;
  0324:   BYTE_0(param[0x02])= BYTE_2(param[0x00])
  0328:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  032a:   BYTE_0(my_radeon_reg(0x1c51))|= 0x01
  032f:   my_udelay 0x0a
  0331:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  0335:   BYTE_0(my_radeon_reg(0x198d))|= 0x01
  033a:   my_udelay 0x0a
  033c:   BYTE_1(my_radeon_reg(0x198a))|= 0x10
  0341:   BYTE_0(param[0x01])COMP 0x04
  0345:   JUMP_BelowOrEq 0x0356
  0348:   my_udelay 0xc8
  034a:   BYTE_0(my_radeon_reg(0x199d))|= 0x01
  034f:   my_udelay 0x0a
  0351:   BYTE_1(my_radeon_reg(0x199a))|= 0x10
  0356:   SET_REG_BLOCK 0x0000
  0359:   BYTE_2(param[0x01])COMP 0x01
  035d:   JUMP_NotEqual 0x0480
  0360:   BYTE_2(my_radeon_reg(0x05cb))TEST 0x01
  0365:   JUMP_Equal 0x0371
  0368:   MASK   BYTE_3(my_radeon_reg(0x1919))  &  0xfe  |  0x02
  036e:   goto 0x0480
  0371:   BYTES_23(my_radeon_reg(0x1919))&= 0xfdfd
  0377:   BYTE_0(my_radeon_reg(0x1919))|= 0x10
  037c:   goto 0x0480
  037f:   BYTE_0(param[0x02])= BYTE_2(param[0x00])
  0383:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0385:   BYTE_0(my_radeon_reg(0x1c51))TEST 0x01
  038a:   JUMP_Equal 0x0480
  038d:   BYTE_1(WS_FB_WIN)= BYTE_2(my_radeon_reg(0x1c00))
  0392:   BYTE_2(my_radeon_reg(0x1c50))COMP 0x01
  0397:   JUMP_Equal 0x03dc
  039a:   BYTE_2(my_radeon_reg(0x1c50))COMP 0x02
  039f:   JUMP_Equal 0x03aa
  03a2:   BYTE_2(my_radeon_reg(0x1c50))COMP 0x03
  03a7:   JUMP_NotEqual 0x03b8
  03aa:   (my_radeon_reg(0x1c51)) = 0;
  03ae:   my_mdelay 0x02
  03b0:   BYTE_2(my_radeon_reg(0x1c00))&= 0xfe
  03b5:   goto 0x03f1
  03b8:   BYTE_0(WS_SHIFT)= BYTE_2(param[0x00])
  03bc:   BYTE_1(my_radeon_reg(0x1c50))TEST BYTE_0(WS_OR_MASK)
  03c1:   JUMP_Equal 0x03f1
  03c4:   BYTES_01(my_radeon_reg(0x1cc3)) = 0;
  03c8:   my_udelay 0xc8
  03ca:   BYTE_0(my_radeon_reg(0x1cc4))|= 0x01
  03cf:   my_udelay 0x32
  03d1:   BYTE_0(my_radeon_reg(0x1cc0)) = 0;
  03d5:   BYTE_0(my_radeon_reg(0x1cd1)) = 0;
  03d9:   goto 0x03f1
  03dc:   BYTES_01(WS_REGPTR) = 0;
  03df:   (my_radeon_reg(0x1919))&= 0xfdfdffef
  03e7:   my_mdelay 0x01
  03e9:   BYTE_1(my_radeon_reg(0x191a))COMP 0x09
  03ee:   JUMP_NotEqual 0x03e7
  03f1:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  03f5:   BYTE_1(my_radeon_reg(0x198a))&= 0xef
  03fa:   BYTE_2(my_radeon_reg(0x198d)) = 0;
  03fe:   (my_radeon_reg(0x1983)) = 0;
  0402:   (my_radeon_reg(0x1982)) = 0;
  0406:   BYTE_1(WS_FB_WIN)TEST 0x01
  040a:   JUMP_Equal 0x041e
  040d:   BYTE_1(my_radeon_reg(0x199a))&= 0xef
  0412:   BYTE_2(my_radeon_reg(0x199d)) = 0;
  0416:   (my_radeon_reg(0x1993)) = 0;
  041a:   (my_radeon_reg(0x1992)) = 0;
  041e:   BYTE_0(param[0x02])= BYTE_2(param[0x00])
  0422:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0424:   BYTE_0(my_radeon_reg(0x1c51)) = 0;
  0428:   BYTE_1(my_radeon_reg(0x1c50)) = 0;
  042c:   (my_radeon_reg(0x1c8d)) = 0;
  0430:   BYTES_01(WS_REGPTR) = 0;
  0433:   BYTE_0(WS_REGPTR)= BYTE_2(param[0x00])
  0437:   BYTE_0(my_radeon_reg(0x0160))&= 0xfe
  043c:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  0440:   BYTE_0(my_radeon_reg(0x1986))&= 0x07
  0445:   my_udelay 0x0a
  0447:   BYTE_0(my_radeon_reg(0x1986))&= 0xfe
  044c:   my_udelay 0x0a
  044e:   BYTE_0(param[0x02])= BYTE_2(param[0x00])
  0452:   BYTE_0(param[0x02])|= 0x40
  0456:   my_ASIC_StaticPwrMgtStatusChange_SetUniphyInstance();
  0458:   BYTE_0(my_radeon_reg(0x1908))&= 0xfe
  045d:   BYTE_1(WS_FB_WIN)TEST 0x01
  0461:   JUMP_Equal 0x0469
  0464:   BYTE_0(my_radeon_reg(0x1909))&= 0xfe
  0469:   my_udelay 0x28
  046b:   BYTES_01(WS_REGPTR)= BYTES_23(WS_FB_WIN)
  046f:   BYTE_0(my_radeon_reg(0x1984))|= 0x01
  0474:   BYTE_1(WS_FB_WIN)TEST 0x01
  0478:   JUMP_Equal 0x0480
  047b:   BYTE_0(my_radeon_reg(0x1994))|= 0x01
  0480:   SET_REG_BLOCK 0x0000
  0483:   return;
}
  0484:   BYTES_01(my_radeon_reg(0x191b))= 0x0f9f
  048a:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  048c:   BYTE_1(param[0x01])COMP 0x14
  0490:   JUMP_NotEqual 0x04a9
  0493:   (my_radeon_reg(0x191c))= 0x01000001
  049b:   (my_radeon_reg(0x191d))= 0x0000007d
  04a3:   BYTE_3(my_radeon_reg(0x1919))|= 0x02
  04a8:   return;
}
  04a9:   BYTE_1(param[0x01])COMP 0x0e
  04ad:   JUMP_NotEqual 0x0480
  04b0:   (my_radeon_reg(0x191c))= (data[0x0034])
  04b6:   (my_radeon_reg(0x191d))= (data[0x0038])
  04bc:   BYTE_3(my_radeon_reg(0x191d))= 0x01
  04c1:   return;
}
  04c2:   BYTE_1(WS_FB_WIN)&= 0x1b
  04c6:   SET_DATA_BLOCK 0xff (this table)
  04c8:   BYTES_01(WS_DATAPTR)+= 0x0711
  04cd:   (WS_QUOTIENT) = 0;
  04d0:   BYTE_1(WS_FB_WIN)COMP BYTE_0(data[0x0000])
  04d5:   JUMP_Equal 0x04e9
  04d8:   BYTE_0(WS_QUOTIENT)+= 0x01
  04dc:   BYTES_01(WS_DATAPTR)+= 0x0001
  04e1:   BYTE_0(WS_QUOTIENT)COMP 0x0a
  04e5:   JUMP_Below 0x04d0
  04e8:   return;
}
  04e9:   BYTES_01(WS_REGPTR) = 0;
  04ec:   BYTE_0(WS_SHIFT)= BYTE_0(WS_QUOTIENT)
  04f0:   (WS_REMAINDER)= (WS_OR_MASK)
  04f4:   BYTES_01(WS_FB_WIN)= BYTES_01(WS_REMAINDER)
  04f8:   BYTES_01(param[0x00])COMP 0x3f48
  04fd:   JUMP_Equal 0x0532
  0500:   SHIFT_LEFT (WS_REMAINDER)  by  0a
  0504:   BYTES_01(param[0x00])COMP 0x6978
  0509:   JUMP_Equal 0x0532
  050c:   SHIFT_LEFT (WS_REMAINDER)  by  0a
  0510:   BYTES_01(param[0x00])COMP 0xd2f0
  0515:   JUMP_Equal 0x0532
  0518:   BYTES_01(param[0x00])COMP 0x7e90
  051d:   JUMP_NotEqual 0x05a7
  0520:   SHIFT_LEFT (WS_REMAINDER)  by  0a
  0524:   BYTE_0(WS_QUOTIENT)COMP 0x02
  0528:   JUMP_Below 0x0532
  052b:   SHIFT_RIGHT BYTES_01(WS_FB_WIN)  by  02
  052f:   goto 0x0535
  0532:   BYTES_01(WS_FB_WIN) = 0;
  0535:   SET_DATA_BLOCK 0x07 (TMDS_Info)
  0537:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x0004])
  053c:   BYTE_2(param[0x01]) = 0;
  053f:   BYTE_0(WS_SHIFT)= BYTE_2(param[0x00])
  0543:   BYTE_0(WS_QUOTIENT)= BYTE_0(WS_OR_MASK)
  0547:   BYTE_2(param[0x01])COMP BYTE_0(data[0x0000])
  054c:   JUMP_NotEqual 0x0557
  054f:   BYTE_0(WS_QUOTIENT)TEST BYTE_0(data[0x0001])
  0554:   JUMP_NotEqual 0x055f
  0557:   BYTES_01(WS_DATAPTR)+= BYTES_01(data[0x0002])
  055c:   goto 0x0547
  055f:   (my_radeon_reg(0x0000)) = 0;
  0563:   BYTES_01(WS_DATAPTR)+= 0x0004
  0568:   (WS_QUOTIENT)= (data[0x0000])
  056d:   BYTES_01(WS_QUOTIENT)COMP 0x0000
  0572:   JUMP_Equal 0x05a7
  0575:   BYTES_23(WS_QUOTIENT)+= BYTES_01(WS_DATAPTR)
  0579:   (WS_REMAINDER)TEST (data[0x0004])
  057e:   JUMP_NotEqual 0x0591
  0581:   BYTE_0(WS_FB_WIN)TEST BYTE_0(data[0x0008])
  0586:   JUMP_NotEqual 0x0591
  0589:   BYTES_01(WS_DATAPTR)+= 0x0009
  058e:   goto 0x0579
  0591:   BYTES_01(WS_QUOTIENT)+= BYTES_23(WS_FB_WIN)
  0595:   BYTES_01(my_radeon_reg(0x0000))= BYTES_01(WS_QUOTIENT)
  059a:   (my_radeon_reg(0x0001))= (data[0x0009])
  05a0:   BYTES_01(WS_DATAPTR)= BYTES_23(WS_QUOTIENT)
  05a4:   goto 0x0568
  05a7:   BYTE_3(param[0x02])= 0x0f
  05ab:   BYTE_3(param[0x00])COMP 0x01
  05af:   JUMP_Equal 0x01d5
  05b2:   return;
}
  05b3:   (WS_REMAINDER) = 0;
  05b6:   goto 0x05c1
  05b9:   BYTE_0(WS_REMAINDER)= 0x10
  05bd:   BYTE_1(WS_REMAINDER)= 0x01
  05c1:   BYTE_2(param[0x01])COMP 0x01
  05c5:   JUMP_Equal 0x05c9
  05c8:   return;
}
  05c9:   MASK   BYTE_1(my_radeon_reg(0x198a))  &  0xef  |  BYTE_0(WS_REMAINDER)
  05cf:   MASK   BYTE_1(my_radeon_reg(0x199a))  &  0xef  |  BYTE_0(WS_REMAINDER)
  05d5:   return;
}
  05d6:   BYTE_2(my_radeon_reg(0x05cb))TEST 0x01
  05db:   JUMP_NotEqual 0x0480
  05de:   BYTE_3(my_radeon_reg(0x1919))TEST 0x01
  05e3:   JUMP_NotEqual 0x0480
  05e6:   my_mdelay 0x33
  05e8:   BYTE_1(my_radeon_reg(0x191d))COMP 0x00
  05ed:   JUMP_Equal 0x0602
  05f0:   BYTE_2(my_radeon_reg(0x1940))|= 0x01
  05f5:   BYTE_3(my_radeon_reg(0x1919))|= 0x03
  05fa:   my_mdelay 0x00
  05fc:   BYTE_2(my_radeon_reg(0x1940))&= 0xfe
  0601:   return;
}
  0602:   BYTE_3(my_radeon_reg(0x1919))|= 0x03
  0607:   return;
}
  0608:   BYTE_3(my_radeon_reg(0x1919))TEST 0x01
  060d:   JUMP_Equal 0x0480
  0610:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0612:   BYTE_0(WS_REMAINDER)= BYTE_0(data[0x0042])
  0617:   BYTE_0(WS_REMAINDER)COMP 0x00
  061b:   JUMP_NotEqual 0x0480
  061e:   BYTE_2(my_radeon_reg(0x191d))COMP 0x00
  0623:   JUMP_Equal 0x063b
  0626:   BYTE_2(my_radeon_reg(0x1940))|= 0x01
  062b:   my_mdelay 0x00
  062d:   MASK   BYTE_3(my_radeon_reg(0x1919))  &  0xfe  |  0x02
  0633:   BYTE_2(my_radeon_reg(0x1940))&= 0xfe
  0638:   goto 0x0641
  063b:   MASK   BYTE_3(my_radeon_reg(0x1919))  &  0xfe  |  0x02
  0641:   my_mdelay 0x02
  0643:   return;
}
  0644:   BYTE_1(my_radeon_reg(0x05d0))TEST 0x02
  0649:   JUMP_Equal 0x0651
  064c:   BYTE_0(my_radeon_reg(0x1921))|= 0x01
  0651:   SET_DATA_BLOCK 0x06 (LVDS_Info)
  0653:   (WS_REMAINDER) = 0;
  0656:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0032])
  065b:   BYTES_01(WS_REMAINDER)COMP 0x0000
  0660:   JUMP_Equal 0x06d3
  0663:   (WS_FB_WIN)= 0x016e3600
  066a:   (WS_REMAINDER)*= 0x00000fff
  0671:   (WS_FB_WIN)/= (WS_QUOTIENT)
  0675:   (WS_REMAINDER)COMP 0x00000000
  067c:   JUMP_Equal 0x0684
  067f:   BYTES_01(WS_QUOTIENT)+= 0x0001
  0684:   BYTES_23(my_radeon_reg(0x191b))= BYTES_01(WS_QUOTIENT)
  0689:   (WS_REMAINDER) = 0;
  068c:   BYTES_01(WS_REMAINDER)= BYTES_01(data[0x0032])
  0691:   (WS_QUOTIENT)*= (WS_REMAINDER)
  0695:   (WS_FB_WIN)/= (WS_QUOTIENT)
  0699:   BYTE_2(my_radeon_reg(0x1920))= 0x0c
  069e:   BYTES_01(my_radeon_reg(0x1920))= BYTES_01(WS_QUOTIENT)
  06a3:   SHIFT_LEFT (WS_QUOTIENT)  by  04
  06a7:   (WS_REMAINDER) = 0;
  06aa:   BYTE_0(WS_REMAINDER)= BYTE_1(my_radeon_reg(0x05cb))
  06af:   BYTES_01(WS_REMAINDER)+= 0x0001
  06b4:   (WS_QUOTIENT)*= (WS_REMAINDER)
  06b8:   SHIFT_RIGHT (WS_QUOTIENT)  by  08
  06bc:   BYTES_01(my_radeon_reg(0x191e))= BYTES_01(WS_QUOTIENT)
  06c1:   BYTE_3(my_radeon_reg(0x191e))|= 0xc0
  06c6:   BYTE_0(my_radeon_reg(0x1921))&= 0xfe
  06cb:   BYTE_1(my_radeon_reg(0x1921))TEST 0x01
  06d0:   JUMP_NotEqual 0x06cb
  06d3:   return;
}
  06d4:   BYTE_0(my_radeon_reg(0x1919))|= 0x11
  06d9:   BYTE_1(my_radeon_reg(0x191a))COMP 0x04
  06de:   JUMP_NotEqual 0x06d9
  06e1:   BYTE_2(my_radeon_reg(0x1919))&= 0xfd
  06e6:   return;
}
  06e7:   MASK   BYTE_0(my_radeon_reg(0x1919))  &  0xef  |  0x01
  06ed:   return;
}
  06ee: 
          
                          CTB_DS  44 bytes


command_table  00000000  #4d  (DIG2TransmitterControl_LVTMATransmitterControl):

        /*    param size 0x01    */

command_table  0000e6ec  #4e  (ProcessAuxChannelTransaction):

        /*    param size 0x03    */

  0006:   my_INDIRECT_IO_MM();
  0009:   BYTES_01(param[0x00])COMP 0x0000
  000e:   JUMP_Equal 0x01a7
  0011:   (WS_REMAINDER) = 0;
  0014:   BYTE_0(WS_REMAINDER)= BYTE_0(param[0x01])
  0018:   BYTE_0(WS_REMAINDER)&= 0x0f
  001c:   SHIFT_LEFT BYTES_01(WS_REMAINDER)  by  02
  0020:   BYTES_01(WS_QUOTIENT)= BYTES_01(WS_DATAPTR)
  0024:   SET_DATA_BLOCK 0xff (this table)
  0026:   BYTES_01(WS_DATAPTR)+= 0x020d
  002b:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  002f:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0002])
  0034:   BYTE_2(my_radeon_reg(0x194c))|= 0x01
  0039:   BYTES_01(my_radeon_reg(0x194c)) = 0;
  003d:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  0042:   BYTE_3(WS_REMAINDER)= BYTE_3(param[0x01])
  0046:   SHIFT_LEFT BYTE_3(WS_REMAINDER)  by  04
  004a:   MASK   BYTE_2(my_radeon_reg(0x1880))  &  0x8f  |  BYTE_3(WS_REMAINDER)
  0050:   BYTES_01(WS_DATAPTR)= BYTES_01(WS_QUOTIENT)
  0054:   BYTES_01(my_radeon_reg(0x1880))|= 0x0101
  005a:   (WS_REMAINDER) = 0;
  005d:   BYTES_01(WS_REMAINDER)= BYTES_01(param[0x00])
  0061:   SET_FB_BASE 
  0064:   BYTE_0(WS_REMAINDER)= BYTE_3(fb[0x00])
  0068:   SHIFT_RIGHT BYTE_0(WS_REMAINDER)  by  04
  006c:   BYTE_2(my_radeon_reg(0x1881))= BYTE_0(WS_REMAINDER)
  0071:   BYTE_1(WS_REMAINDER)= BYTE_1(param[0x01])
  0075:   SHIFT_LEFT BYTE_1(WS_REMAINDER)  by  04
  0079:   BYTE_0(my_radeon_reg(0x1881))= BYTE_1(WS_REMAINDER)
  007e:   (WS_QUOTIENT) = 0;
  0081:   BYTE_3(WS_QUOTIENT)|= 0x80
  0085:   BYTE_1(WS_QUOTIENT)= BYTE_2(fb[0x00])
  0089:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  008e:   (WS_QUOTIENT) = 0;
  0091:   BYTE_1(WS_QUOTIENT)= BYTE_1(fb[0x00])
  0095:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  009a:   BYTE_1(WS_QUOTIENT)= BYTE_0(fb[0x00])
  009e:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  00a3:   BYTE_1(WS_QUOTIENT)= BYTE_3(fb[0x00])
  00a7:   BYTE_1(WS_QUOTIENT)&= 0x0f
  00ab:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  00b0:   BYTE_0(WS_REMAINDER)COMP 0x04
  00b4:   JUMP_BelowOrEq 0x00e9
  00b7:   BYTE_0(WS_REMAINDER)-= 0x04
  00bb:   (WS_FB_WIN)+= 0x00000004
  00c2:   BYTE_1(WS_QUOTIENT)= BYTE_0(fb[0x00])
  00c6:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  00cb:   BYTE_1(WS_QUOTIENT)= BYTE_1(fb[0x00])
  00cf:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  00d4:   BYTE_1(WS_QUOTIENT)= BYTE_2(fb[0x00])
  00d8:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  00dd:   BYTE_1(WS_QUOTIENT)= BYTE_3(fb[0x00])
  00e1:   (my_radeon_reg(0x1886))= (WS_QUOTIENT)
  00e6:   goto 0x00b0
  00e9:   BYTE_0(my_radeon_reg(0x1883))|= 0x02
  00ee:   BYTE_0(my_radeon_reg(0x1881))|= 0x01
  00f3:   BYTE_0(WS_QUOTIENT)= BYTE_1(param[0x01])
  00f7:   BYTE_0(WS_QUOTIENT)*= 0x0a
  00fb:   BYTE_0(WS_QUOTIENT)+= 0x32
  00ff:   BYTE_0(my_radeon_reg(0x1884))TEST 0x01
  0104:   JUMP_NotEqual 0x011b
  0107:   my_udelay 0x0a
  0109:   BYTE_0(WS_QUOTIENT)-= 0x01
  010d:   BYTE_0(WS_QUOTIENT)COMP 0x00
  0111:   JUMP_NotEqual 0x00ff
  0114:   BYTE_1(param[0x01])= 0x01
  0118:   goto 0x01a3
  011b:   (my_radeon_reg(0x1884))TEST 0x00ff8ff0
  0123:   JUMP_Equal 0x012d
  0126:   BYTE_1(param[0x01])= 0x02
  012a:   goto 0x01a3
  012d:   (my_radeon_reg(0x1886))= 0x80000001
  0135:   (WS_QUOTIENT)= (my_radeon_reg(0x1886))
  013a:   BYTE_1(param[0x01])= BYTE_1(WS_QUOTIENT)
  013e:   BYTE_2(param[0x01])= BYTE_3(my_radeon_reg(0x1884))
  0143:   BYTE_2(param[0x01])&= 0x1f
  0147:   BYTE_2(param[0x01])COMP 0x00
  014b:   JUMP_Above 0x0155
  014e:   BYTE_1(param[0x01])= 0x03
  0152:   goto 0x01a3
  0155:   BYTE_2(param[0x01])-= 0x01
  0159:   BYTES_23(param[0x00])COMP 0x0000
  015e:   JUMP_Equal 0x01a3
  0161:   BYTE_2(param[0x01])COMP 0x00
  0165:   JUMP_Equal 0x01a3
  0168:   BYTE_0(WS_REMAINDER)= BYTE_2(param[0x01])
  016c:   BYTES_01(WS_QUOTIENT)= BYTES_23(param[0x00])
  0170:   BYTES_23(WS_QUOTIENT) = 0;
  0173:   SET_FB_BASE 
  0176:   BYTE_0(WS_QUOTIENT)= BYTE_1(my_radeon_reg(0x1886))
  017b:   BYTE_1(WS_QUOTIENT)= BYTE_1(my_radeon_reg(0x1886))
  0180:   BYTE_2(WS_QUOTIENT)= BYTE_1(my_radeon_reg(0x1886))
  0185:   BYTE_3(WS_QUOTIENT)= BYTE_1(my_radeon_reg(0x1886))
  018a:   (fb[0x00])= (WS_QUOTIENT)
  018e:   BYTE_0(WS_REMAINDER)COMP 0x04
  0192:   JUMP_BelowOrEq 0x01a3
  0195:   BYTE_0(WS_REMAINDER)-= 0x04
  0199:   (WS_FB_WIN)+= 0x00000004
  01a0:   goto 0x0176
  01a3:   SET_REG_BLOCK 0x0000
  01a6:   return;
}
  01a7:   SET_DATA_BLOCK 0xff (this table)
  01a9:   BYTES_01(WS_DATAPTR)+= 0x020d
  01ae:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  01b3:   BYTES_23(my_radeon_reg(0x1888))= 0x0018
  01b9:   (my_radeon_reg(0x1889))= 0x00021c00
  01c1:   (my_radeon_reg(0x188a))= 0x123d1210
  01c9:   BYTES_01(WS_DATAPTR)+= 0x0004
  01ce:   BYTE_0(param[0x00])+= 0x01
  01d2:   BYTE_0(param[0x00])COMP 0x06
  01d6:   JUMP_NotEqual 0x01ae
  01d9:   BYTES_01(WS_REGPTR) = 0;
  01dc:   BYTE_0(WS_REMAINDER)= 0x10
  01e0:   BYTE_1(my_radeon_reg(0x197f))|= 0x40
  01e5:   BYTE_1(my_radeon_reg(0x197f))&= 0xbf
  01ea:   BYTE_0(WS_REMAINDER)-= 0x01
  01ee:   BYTE_0(WS_REMAINDER)COMP 0x00
  01f2:   JUMP_NotEqual 0x01e0
  01f5:   BYTE_0(my_radeon_reg(0x190b))|= 0x01
  01fa:   BYTE_2(my_radeon_reg(0x190b)) = 0;
  01fe:   BYTE_0(my_radeon_reg(0x190c))|= 0x01
  0203:   BYTE_2(my_radeon_reg(0x190c)) = 0;
  0207:   my_udelay 0x32
  0209:   return;
}
  020a:   
                          CTB_DS  24 bytes


command_table  0000e912  #4f  (DPEncoderService):

        /*    param size 0x02    */

  0006:   BYTE_0(param[0x01])= 0x04
  000a:   BYTE_0(WS_REMAINDER)= BYTE_2(param[0x00])
  000e:   BYTES_01(WS_REMAINDER)&= 0x000f
  0013:   SHIFT_LEFT BYTES_01(WS_REMAINDER)  by  01
  0017:   SET_DATA_BLOCK 0xff (this table)
  0019:   BYTES_01(WS_DATAPTR)+= 0x0050
  001e:   BYTES_01(WS_DATAPTR)+= BYTES_01(WS_REMAINDER)
  0022:   BYTES_01(WS_REGPTR)= BYTES_01(data[0x0000])
  0027:   BYTE_2(my_radeon_reg(0x194c))&= 0xfe
  002c:   BYTES_01(my_radeon_reg(0x194c))= 0x1111
  0032:   my_mdelay 0x02
  0034:   BYTES_01(my_radeon_reg(0x194f))TEST 0x0001
  003a:   JUMP_NotEqual 0x0041
  003d:   BYTE_0(param[0x01])= 0x13
  0041:   BYTES_01(my_radeon_reg(0x194c)) = 0;
  0045:   (my_radeon_reg(0x194e)) = 0;
  0049:   SET_REG_BLOCK 0x0000
  004c:   return;
}
  004d:   
                          CTB_DS  12 bytes



*** Data Tables:

data_table  00000000  #01  (MultimediaCapabilityInfo):


data_table  00000000  #02  (MultimediaConfigInfo):


data_table  0000a6da  #03  (StandardVESA_Timing):


  00000000:            4e0c 8002  c000 9001  2d00 2000        N.......-. .
  00000010: 4000 0100  0300 0000  0000 0000  0200 e655    @..............U
  00000020: d609 8002  a000 e001  2d00 1000  6000 0a00    ........-...`...
  00000030: 0200 0000  0000 0808  0600 123c  a00f 2003    ...........<.. .
  00000040: 0001 5802  1c00 2800  8000 0100  0400 0000    ..X...(.........
  00000050: 0000 0000  0000 6a3c  6419 0004  4001 0003    ......j<d...@...
  00000060: 2600 1800  8800 0300  0600 0000  0000 0000    &...............
  00000070: 0600 553c  302a 0005  0802 c003  2800 6000    ..U<0*......(.`.
  00000080: 7000 0100  0300 0000  0000 0000  0000 e93c    p..............<
  00000090: 302a 0005  9801 0004  2a00 3000  7000 0100    0*......*.0.p...
  000000a0: 0300 0000  0000 0000  0000 ea3c  8f2f 7805    ...........<./x.
  000000b0: d001 1a04  2700 5800  9000 0300  0400 0000    ....'.X.........
  000000c0: 0000 0000  0200 eb3c  483f 4006  3002 b004    .......<H?@.0...
  000000d0: 3200 4000  c000 0100  0300 0000  0000 0000    2.@.............
  000000e0: 0000 ec3c                                     ...<            

  NOTE: General revisionless dumper only.
  NOTE: Apparently broken

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x00e4     (228)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x02       (2)
  0004:  ATOM_DTD_FORMAT aModeTimings                    [0] :
    0004:  USHORT usPixClk                                     = 0x0c4e     (3150)
    0006:  USHORT usHActive                                    = 0x0280     (640)
    0008:  USHORT usHBlanking_Time                             = 0x00c0     (192)
    000a:  USHORT usVActive                                    = 0x0190     (400)
    000c:  USHORT usVBlanking_Time                             = 0x002d     (45)
    000e:  USHORT usHSyncOffset                                = 0x0020     (32)
    0010:  USHORT usHSyncWidth                                 = 0x0040     (64)
    0012:  USHORT usVSyncOffset                                = 0x0001     (1)
    0014:  USHORT usVSyncWidth                                 = 0x0003     (3)
    0016:  USHORT usImageHSize                                 = 0x0000     (0)
    0018:  USHORT usImageVSize                                 = 0x0000     (0)
    001a:  UCHAR ucHBorder                                     = 0x00       (0)
    001b:  UCHAR ucVBorder                                     = 0x00       (0)
    001c:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      001c:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      001c:  (union) USHORT usAccess                             = 0x0002     (2)
    001e:  UCHAR ucInternalModeNumber                          = 0xe6       (230)
    001f:  UCHAR ucRefreshRate                                 = 0x55       (85)
  0020:  ATOM_DTD_FORMAT aModeTimings                    [1] :
    0020:  USHORT usPixClk                                     = 0x09d6     (2518)
    0022:  USHORT usHActive                                    = 0x0280     (640)
    0024:  USHORT usHBlanking_Time                             = 0x00a0     (160)
    0026:  USHORT usVActive                                    = 0x01e0     (480)
    0028:  USHORT usVBlanking_Time                             = 0x002d     (45)
    002a:  USHORT usHSyncOffset                                = 0x0010     (16)
    002c:  USHORT usHSyncWidth                                 = 0x0060     (96)
    002e:  USHORT usVSyncOffset                                = 0x000a     (10)
    0030:  USHORT usVSyncWidth                                 = 0x0002     (2)
    0032:  USHORT usImageHSize                                 = 0x0000     (0)
    0034:  USHORT usImageVSize                                 = 0x0000     (0)
    0036:  UCHAR ucHBorder                                     = 0x08       (8)
    0037:  UCHAR ucVBorder                                     = 0x08       (8)
    0038:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0038:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      0038:  (union) USHORT usAccess                             = 0x0006     (6)
    003a:  UCHAR ucInternalModeNumber                          = 0x12       (18)
    003b:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  003c:  ATOM_DTD_FORMAT aModeTimings                    [2] :
    003c:  USHORT usPixClk                                     = 0x0fa0     (4000)
    003e:  USHORT usHActive                                    = 0x0320     (800)
    0040:  USHORT usHBlanking_Time                             = 0x0100     (256)
    0042:  USHORT usVActive                                    = 0x0258     (600)
    0044:  USHORT usVBlanking_Time                             = 0x001c     (28)
    0046:  USHORT usHSyncOffset                                = 0x0028     (40)
    0048:  USHORT usHSyncWidth                                 = 0x0080     (128)
    004a:  USHORT usVSyncOffset                                = 0x0001     (1)
    004c:  USHORT usVSyncWidth                                 = 0x0004     (4)
    004e:  USHORT usImageHSize                                 = 0x0000     (0)
    0050:  USHORT usImageVSize                                 = 0x0000     (0)
    0052:  UCHAR ucHBorder                                     = 0x00       (0)
    0053:  UCHAR ucVBorder                                     = 0x00       (0)
    0054:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0054:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      0054:  (union) USHORT usAccess                             = 0x0000     (0)
    0056:  UCHAR ucInternalModeNumber                          = 0x6a       (106)
    0057:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  0058:  ATOM_DTD_FORMAT aModeTimings                    [3] :
    0058:  USHORT usPixClk                                     = 0x1964     (6500)
    005a:  USHORT usHActive                                    = 0x0400     (1024)
    005c:  USHORT usHBlanking_Time                             = 0x0140     (320)
    005e:  USHORT usVActive                                    = 0x0300     (768)
    0060:  USHORT usVBlanking_Time                             = 0x0026     (38)
    0062:  USHORT usHSyncOffset                                = 0x0018     (24)
    0064:  USHORT usHSyncWidth                                 = 0x0088     (136)
    0066:  USHORT usVSyncOffset                                = 0x0003     (3)
    0068:  USHORT usVSyncWidth                                 = 0x0006     (6)
    006a:  USHORT usImageHSize                                 = 0x0000     (0)
    006c:  USHORT usImageVSize                                 = 0x0000     (0)
    006e:  UCHAR ucHBorder                                     = 0x00       (0)
    006f:  UCHAR ucVBorder                                     = 0x00       (0)
    0070:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0070:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      0070:  (union) USHORT usAccess                             = 0x0006     (6)
    0072:  UCHAR ucInternalModeNumber                          = 0x55       (85)
    0073:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  0074:  ATOM_DTD_FORMAT aModeTimings                    [4] :
    0074:  USHORT usPixClk                                     = 0x2a30     (10800)
    0076:  USHORT usHActive                                    = 0x0500     (1280)
    0078:  USHORT usHBlanking_Time                             = 0x0208     (520)
    007a:  USHORT usVActive                                    = 0x03c0     (960)
    007c:  USHORT usVBlanking_Time                             = 0x0028     (40)
    007e:  USHORT usHSyncOffset                                = 0x0060     (96)
    0080:  USHORT usHSyncWidth                                 = 0x0070     (112)
    0082:  USHORT usVSyncOffset                                = 0x0001     (1)
    0084:  USHORT usVSyncWidth                                 = 0x0003     (3)
    0086:  USHORT usImageHSize                                 = 0x0000     (0)
    0088:  USHORT usImageVSize                                 = 0x0000     (0)
    008a:  UCHAR ucHBorder                                     = 0x00       (0)
    008b:  UCHAR ucVBorder                                     = 0x00       (0)
    008c:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      008c:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      008c:  (union) USHORT usAccess                             = 0x0000     (0)
    008e:  UCHAR ucInternalModeNumber                          = 0xe9       (233)
    008f:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  0090:  ATOM_DTD_FORMAT aModeTimings                    [5] :
    0090:  USHORT usPixClk                                     = 0x2a30     (10800)
    0092:  USHORT usHActive                                    = 0x0500     (1280)
    0094:  USHORT usHBlanking_Time                             = 0x0198     (408)
    0096:  USHORT usVActive                                    = 0x0400     (1024)
    0098:  USHORT usVBlanking_Time                             = 0x002a     (42)
    009a:  USHORT usHSyncOffset                                = 0x0030     (48)
    009c:  USHORT usHSyncWidth                                 = 0x0070     (112)
    009e:  USHORT usVSyncOffset                                = 0x0001     (1)
    00a0:  USHORT usVSyncWidth                                 = 0x0003     (3)
    00a2:  USHORT usImageHSize                                 = 0x0000     (0)
    00a4:  USHORT usImageVSize                                 = 0x0000     (0)
    00a6:  UCHAR ucHBorder                                     = 0x00       (0)
    00a7:  UCHAR ucVBorder                                     = 0x00       (0)
    00a8:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      00a8:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      00a8:  (union) USHORT usAccess                             = 0x0000     (0)
    00aa:  UCHAR ucInternalModeNumber                          = 0xea       (234)
    00ab:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  00ac:  ATOM_DTD_FORMAT aModeTimings                    [6] :
    00ac:  USHORT usPixClk                                     = 0x2f8f     (12175)
    00ae:  USHORT usHActive                                    = 0x0578     (1400)
    00b0:  USHORT usHBlanking_Time                             = 0x01d0     (464)
    00b2:  USHORT usVActive                                    = 0x041a     (1050)
    00b4:  USHORT usVBlanking_Time                             = 0x0027     (39)
    00b6:  USHORT usHSyncOffset                                = 0x0058     (88)
    00b8:  USHORT usHSyncWidth                                 = 0x0090     (144)
    00ba:  USHORT usVSyncOffset                                = 0x0003     (3)
    00bc:  USHORT usVSyncWidth                                 = 0x0004     (4)
    00be:  USHORT usImageHSize                                 = 0x0000     (0)
    00c0:  USHORT usImageVSize                                 = 0x0000     (0)
    00c2:  UCHAR ucHBorder                                     = 0x00       (0)
    00c3:  UCHAR ucVBorder                                     = 0x00       (0)
    00c4:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      00c4:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      00c4:  (union) USHORT usAccess                             = 0x0002     (2)
    00c6:  UCHAR ucInternalModeNumber                          = 0xeb       (235)
    00c7:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  00c8:  ATOM_DTD_FORMAT aModeTimings                    [7] :
    00c8:  USHORT usPixClk                                     = 0x3f48     (16200)
    00ca:  USHORT usHActive                                    = 0x0640     (1600)
    00cc:  USHORT usHBlanking_Time                             = 0x0230     (560)
    00ce:  USHORT usVActive                                    = 0x04b0     (1200)
    00d0:  USHORT usVBlanking_Time                             = 0x0032     (50)
    00d2:  USHORT usHSyncOffset                                = 0x0040     (64)
    00d4:  USHORT usHSyncWidth                                 = 0x00c0     (192)
    00d6:  USHORT usVSyncOffset                                = 0x0001     (1)
    00d8:  USHORT usVSyncWidth                                 = 0x0003     (3)
    00da:  USHORT usImageHSize                                 = 0x0000     (0)
    00dc:  USHORT usImageVSize                                 = 0x0000     (0)
    00de:  UCHAR ucHBorder                                     = 0x00       (0)
    00df:  UCHAR ucVBorder                                     = 0x00       (0)
    00e0:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      00e0:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      00e0:  (union) USHORT usAccess                             = 0x0000     (0)
    00e2:  UCHAR ucInternalModeNumber                          = 0xec       (236)
    00e3:  UCHAR ucRefreshRate                                 = 0x3c       (60)
  00e4:  ATOM_DTD_FORMAT aModeTimings                    [8] :
    00e4:  USHORT usPixClk                                     = 0x006c     (108)
    00e6:  USHORT usHActive                                    = 0x0202     (514)
    00e8:  USHORT usHBlanking_Time                             = 0x0002     (2)
    00ea:  USHORT usVActive                                    = 0x0f21     (3873)
    00ec:  USHORT usVBlanking_Time                             = 0x4e20     (20000)
    00ee:  USHORT usHSyncOffset                                = 0x0000     (0)
    00f0:  USHORT usHSyncWidth                                 = 0x0000     (0)
    00f2:  USHORT usVSyncOffset                                = 0x0000     (0)
    00f4:  USHORT usVSyncWidth                                 = 0x0000     (0)
    00f6:  USHORT usImageHSize                                 = 0x0000     (0)
    00f8:  USHORT usImageVSize                                 = 0x0000     (0)
    00fa:  UCHAR ucHBorder                                     = 0x00       (0)
    00fb:  UCHAR ucVBorder                                     = 0x00       (0)
    00fc:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      00fc:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      00fc:  (union) USHORT usAccess                             = 0x0000     (0)
    00fe:  UCHAR ucInternalModeNumber                          = 0x00       (0)
    00ff:  UCHAR ucRefreshRate                                 = 0x00       (0)
  0100:  ATOM_DTD_FORMAT aModeTimings                    [9] :
    0100:  USHORT usPixClk                                     = 0x0000     (0)
    0102:  USHORT usHActive                                    = 0x0000     (0)
    0104:  USHORT usHBlanking_Time                             = 0xd4c0     (54464)
    0106:  USHORT usVActive                                    = 0x0001     (1)
    0108:  USHORT usVBlanking_Time                             = 0x0000     (0)
    010a:  USHORT usHSyncOffset                                = 0x0000     (0)
    010c:  USHORT usHSyncWidth                                 = 0xd2f0     (54000)
    010e:  USHORT usVSyncOffset                                = 0x0000     (0)
    0110:  USHORT usVSyncWidth                                 = 0x0000     (0)
    0112:  USHORT usImageHSize                                 = 0x0000     (0)
    0114:  USHORT usImageVSize                                 = 0x0320     (800)
    0116:  UCHAR ucHBorder                                     = 0xb0       (176)
    0117:  UCHAR ucVBorder                                     = 0x04       (4)
    0118:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0118:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0000     (0)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      0118:  (union) USHORT usAccess                             = 0x0000     (0)
    011a:  UCHAR ucInternalModeNumber                          = 0x00       (0)
    011b:  UCHAR ucRefreshRate                                 = 0x00       (0)
  011c:  ATOM_DTD_FORMAT aModeTimings                   [10] :
    011c:  USHORT usPixClk                                     = 0x3880     (14464)
    011e:  USHORT usHActive                                    = 0x0001     (1)
    0120:  USHORT usHBlanking_Time                             = 0x0001     (1)
    0122:  USHORT usVActive                                    = 0x0000     (0)
    0124:  USHORT usVBlanking_Time                             = 0x0000     (0)
    0126:  USHORT usHSyncOffset                                = 0x0000     (0)
    0128:  USHORT usHSyncWidth                                 = 0x0000     (0)
    012a:  USHORT usVSyncOffset                                = 0x0000     (0)
    012c:  USHORT usVSyncWidth                                 = 0x9c40     (40000)
    012e:  USHORT usImageHSize                                 = 0x02a3     (675)
    0130:  USHORT usImageVSize                                 = 0x12c0     (4800)
    0132:  UCHAR ucHBorder                                     = 0x00       (0)
    0133:  UCHAR ucVBorder                                     = 0x00       (0)
    0134:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0134:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0001     (1)
               USHORT H_ReplicationBy2:1                           = 0x0001     (1)
               USHORT V_ReplicationBy2:1                           = 0x0001     (1)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0010     (16)
      0134:  (union) USHORT usAccess                             = 0x403e     (16446)
    0136:  UCHAR ucInternalModeNumber                          = 0xc0       (192)
    0137:  UCHAR ucRefreshRate                                 = 0x12       (18)
  0138:  ATOM_DTD_FORMAT aModeTimings                   [11] :
    0138:  USHORT usPixClk                                     = 0x2710     (10000)
    013a:  USHORT usHActive                                    = 0x2710     (10000)
    013c:  USHORT usHBlanking_Time                             = 0x00ff     (255)
    013e:  USHORT usVActive                                    = 0x0000     (0)
    0140:  USHORT usVBlanking_Time                             = 0x0000     (0)
    0142:  USHORT usHSyncOffset                                = 0x0000     (0)
    0144:  USHORT usHSyncWidth                                 = 0x0000     (0)
    0146:  USHORT usVSyncOffset                                = 0x0000     (0)
    0148:  USHORT usVSyncWidth                                 = 0x0000     (0)
    014a:  USHORT usImageHSize                                 = 0x0000     (0)
    014c:  USHORT usImageVSize                                 = 0x0000     (0)
    014e:  UCHAR ucHBorder                                     = 0x00       (0)
    014f:  UCHAR ucVBorder                                     = 0x00       (0)
    0150:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0150:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0001     (1)
               USHORT RGB888:1                                     = 0x0001     (1)
               USHORT Reserved:6                                   = 0x0000     (0)
      0150:  (union) USHORT usAccess                             = 0x0304     (772)
    0152:  UCHAR ucInternalModeNumber                          = 0x02       (2)
    0153:  UCHAR ucRefreshRate                                 = 0x01       (1)
  0154:  ATOM_DTD_FORMAT aModeTimings                   [12] :
    0154:  USHORT usPixClk                                     = 0x0000     (0)
    0156:  USHORT usHActive                                    = 0x0000     (0)
    0158:  USHORT usHBlanking_Time                             = 0x2a00     (10752)
    015a:  USHORT usVActive                                    = 0x2a00     (10752)
    015c:  USHORT usVBlanking_Time                             = 0x0000     (0)
    015e:  USHORT usHSyncOffset                                = 0x2a2a     (10794)
    0160:  USHORT usHSyncWidth                                 = 0x002a     (42)
    0162:  USHORT usVSyncOffset                                = 0x2a00     (10752)
    0164:  USHORT usVSyncWidth                                 = 0x2a00     (10752)
    0166:  USHORT usImageHSize                                 = 0x152a     (5418)
    0168:  USHORT usImageVSize                                 = 0x2a00     (10752)
    016a:  UCHAR ucHBorder                                     = 0x2a       (42)
    016b:  UCHAR ucVBorder                                     = 0x2a       (42)
    016c:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      016c:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0001     (1)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0001     (1)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0001     (1)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0005     (5)
      016c:  (union) USHORT usAccess                             = 0x1515     (5397)
    016e:  UCHAR ucInternalModeNumber                          = 0x15       (21)
    016f:  UCHAR ucRefreshRate                                 = 0x15       (21)
  0170:  ATOM_DTD_FORMAT aModeTimings                   [13] :
    0170:  USHORT usPixClk                                     = 0x3f15     (16149)
    0172:  USHORT usHActive                                    = 0x3f15     (16149)
    0174:  USHORT usHBlanking_Time                             = 0x1515     (5397)
    0176:  USHORT usVActive                                    = 0x3f3f     (16191)
    0178:  USHORT usVBlanking_Time                             = 0x153f     (5439)
    017a:  USHORT usHSyncOffset                                = 0x3f15     (16149)
    017c:  USHORT usHSyncWidth                                 = 0x3f15     (16149)
    017e:  USHORT usVSyncOffset                                = 0x3f3f     (16191)
    0180:  USHORT usVSyncWidth                                 = 0x3f15     (16149)
    0182:  USHORT usImageHSize                                 = 0x3f3f     (16191)
    0184:  USHORT usImageVSize                                 = 0x0000     (0)
    0186:  UCHAR ucHBorder                                     = 0x00       (0)
    0187:  UCHAR ucVBorder                                     = 0x05       (5)
    0188:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      0188:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0001     (1)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0001     (1)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0001     (1)
      0188:  (union) USHORT usAccess                             = 0x0505     (1285)
    018a:  UCHAR ucInternalModeNumber                          = 0x08       (8)
    018b:  UCHAR ucRefreshRate                                 = 0x08       (8)
  018c:  ATOM_DTD_FORMAT aModeTimings                   [14] :
    018c:  USHORT usPixClk                                     = 0x0b08     (2824)
    018e:  USHORT usHActive                                    = 0x0b0b     (2827)
    0190:  USHORT usHBlanking_Time                             = 0x0e0e     (3598)
    0192:  USHORT usVActive                                    = 0x110e     (4366)
    0194:  USHORT usVBlanking_Time                             = 0x1111     (4369)
    0196:  USHORT usHSyncOffset                                = 0x1414     (5140)
    0198:  USHORT usHSyncWidth                                 = 0x1814     (6164)
    019a:  USHORT usVSyncOffset                                = 0x1818     (6168)
    019c:  USHORT usVSyncWidth                                 = 0x1c1c     (7196)
    019e:  USHORT usImageHSize                                 = 0x201c     (8220)
    01a0:  USHORT usImageVSize                                 = 0x2020     (8224)
    01a2:  UCHAR ucHBorder                                     = 0x24       (36)
    01a3:  UCHAR ucVBorder                                     = 0x24       (36)
    01a4:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      01a4:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0000     (0)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0001     (1)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x000a     (10)
      01a4:  (union) USHORT usAccess                             = 0x2824     (10276)
    01a6:  UCHAR ucInternalModeNumber                          = 0x28       (40)
    01a7:  UCHAR ucRefreshRate                                 = 0x28       (40)
  01a8:  ATOM_DTD_FORMAT aModeTimings                   [15] :
    01a8:  USHORT usPixClk                                     = 0x2d2d     (11565)
    01aa:  USHORT usHActive                                    = 0x322d     (12845)
    01ac:  USHORT usHBlanking_Time                             = 0x3232     (12850)
    01ae:  USHORT usVActive                                    = 0x3838     (14392)
    01b0:  USHORT usVBlanking_Time                             = 0x3f38     (16184)
    01b2:  USHORT usHSyncOffset                                = 0x3f3f     (16191)
    01b4:  USHORT usHSyncWidth                                 = 0x0000     (0)
    01b6:  USHORT usVSyncOffset                                = 0x103f     (4159)
    01b8:  USHORT usVSyncWidth                                 = 0x3f00     (16128)
    01ba:  USHORT usImageHSize                                 = 0x001f     (31)
    01bc:  USHORT usImageVSize                                 = 0x2f3f     (12095)
    01be:  UCHAR ucHBorder                                     = 0x00       (0)
    01bf:  UCHAR ucVBorder                                     = 0x3f       (63)
    01c0:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      01c0:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0001     (1)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0001     (1)
               USHORT H_ReplicationBy2:1                           = 0x0001     (1)
               USHORT V_ReplicationBy2:1                           = 0x0001     (1)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      01c0:  (union) USHORT usAccess                             = 0x003f     (63)
    01c2:  UCHAR ucInternalModeNumber                          = 0x3f       (63)
    01c3:  UCHAR ucRefreshRate                                 = 0x3f       (63)

  Total data structure size:  01c4


data_table  0000a7be  #04  (FirmwareInfo):


  00000000:            0200 210f  204e 0000  0000 0000        ..!. N......
  00000010: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000020: c0d4 0100  0000 0000  f0d2 0000  0000 0000    ................
  00000030: 2003 b004  0000 0000  8038 0100  0100 0000     ........8......
  00000040: 0000 0000  0000 0000  409c a302  c012 0000    ........@.......
  00000050: 3e40 c012  1027 1027  ff00 0000  0000 0000    >@...'.'........
  00000060: 0000 0000  0000 0000  0000 0000               ............    

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x006c     (108)
    0002:  UCHAR ucTableFormatRevision                         = 0x02       (2)
    0003:  UCHAR ucTableContentRevision                        = 0x02       (2)
  0004:  ULONG ulFirmwareRevision                            = 0x0f210002 (253820930)
  0008:  ULONG ulDefaultEngineClock                          = 0x00004e20 (20000)
  000c:  ULONG ulDefaultMemoryClock                          = 0x00000000 (0)
  0010:  ULONG ulReserved                                [0] = 0x00000000 (0)
  0014:  ULONG ulReserved                                [1] = 0x00000000 (0)
  0018:  ULONG ulReserved1                                   = 0x00000000 (0)
  001c:  ULONG ulReserved2                                   = 0x00000000 (0)
  0020:  ULONG ulMaxPixelClockPLL_Output                     = 0x0001d4c0 (120000)
  0024:  ULONG ulBinaryAlteredInfo                           = 0x00000000 (0)
  0028:  ULONG ulDefaultDispEngineClkFreq                    = 0x0000d2f0 (54000)
  002c:  UCHAR ucReserved3                                   = 0x00       (0)
  002d:  UCHAR ucMinAllowedBL_Level                          = 0x00       (0)
  002e:  USHORT usBootUpVDDCVoltage                          = 0x0000     (0)
  0030:  USHORT usLcdMinPixelClockPLL_Output                 = 0x0320     (800)
  0032:  USHORT usLcdMaxPixelClockPLL_Output                 = 0x04b0     (1200)
  0034:  ULONG ulReserved4                                   = 0x00000000 (0)
  0038:  ULONG ulMinPixelClockPLL_Output                     = 0x00013880 (80000)
  003c:  ULONG ulReserved5                                   = 0x00000001 (1)
  0040:  ULONG ulReserved6                                   = 0x00000000 (0)
  0044:  ULONG ulReserved7                                   = 0x00000000 (0)
  0048:  USHORT usReserved11                                 = 0x9c40     (40000)
  004a:  USHORT usMinPixelClockPLL_Input                     = 0x02a3     (675)
  004c:  USHORT usMaxPixelClockPLL_Input                     = 0x12c0     (4800)
  004e:  USHORT usBootUpVDDCIVoltage                         = 0x0000     (0)
  0050:  ATOM_FIRMWARE_CAPABILITY_ACCESS usFirmwareCapability :
    0050:  (union) ATOM_FIRMWARE_CAPABILITY sbfAccess          :
             USHORT FirmwarePosted:1                             = 0x0000     (0)
             USHORT DualCRTC_Support:1                           = 0x0001     (1)
             USHORT ExtendedDesktopSupport:1                     = 0x0001     (1)
             USHORT MemoryClockSS_Support:1                      = 0x0001     (1)
             USHORT EngineClockSS_Support:1                      = 0x0001     (1)
             USHORT GPUControlsBL:1                              = 0x0001     (1)
             USHORT WMI_SUPPORT:1                                = 0x0000     (0)
             USHORT PPMode_Assigned:1                            = 0x0000     (0)
             USHORT HyperMemory_Support:1                        = 0x0000     (0)
             USHORT HyperMemory_Size:4                           = 0x0000     (0)
             USHORT Reserved:3                                   = 0x0002     (2)
    0050:  (union) USHORT susAccess                            = 0x403e     (16446)
  0052:  USHORT usCoreReferenceClock                         = 0x12c0     (4800)
  0054:  USHORT usMemoryReferenceClock                       = 0x2710     (10000)
  0056:  USHORT usUniphyDPModeExtClkFreq                     = 0x2710     (10000)
  0058:  UCHAR ucMemoryModule_ID                             = 0xff       (255)
  0059:  UCHAR ucReserved9                               [0] = 0x00       (0)
  005a:  UCHAR ucReserved9                               [1] = 0x00       (0)
  005b:  UCHAR ucReserved9                               [2] = 0x00       (0)
  005c:  USHORT usBootUpMVDDCVoltage                         = 0x0000     (0)
  005e:  USHORT usReserved12                                 = 0x0000     (0)
  0060:  ULONG ulReserved10                              [0] = 0x00000000 (0)
  0064:  ULONG ulReserved10                              [1] = 0x00000000 (0)
  0068:  ULONG ulReserved10                              [2] = 0x00000000 (0)

  Total data structure size:  006c


data_table  0000a82a  #05  (DAC_Info):


  00000000:            0000 0000  002a 002a  0000 2a2a        .....*.*..**
  00000010: 2a00 002a  002a 2a15  002a 2a2a  1515 1515    *..*.**..***....
  00000020: 153f 153f  1515 3f3f  3f15 153f  153f 3f3f    .?.?..???..?.???
  00000030: 153f 3f3f  0000 0005  0505 0808  080b 0b0b    .???............
  00000040: 0e0e 0e11  1111 1414  1418 1818  1c1c 1c20    ............... 
  00000050: 2020 2424  2428 2828  2d2d 2d32  3232 3838      $$$(((---22288
  00000060: 383f 3f3f  0000 3f10  003f 1f00  3f2f 003f    8???..?..?..?/.?
  00000070: 3f00 3f3f  002f 3f00  1f3f 0010  3f00 003f    ?.??./?..?..?..?
  00000080: 1000 3f1f  003f 2f00  3f3f 002f  3f00 1f3f    ..?..?/.??./?..?
  00000090: 0010 3f00  003f 0000  3f10 003f  1f00 3f2f    ..?..?..?..?..?/
  000000a0: 003f 3f00  2f3f 001f  3f00 103f  1f1f 3f27    .??./?..?..?..?'
  000000b0: 1f3f 2f1f  3f37 1f3f  3f1f 3f3f  1f37 3f1f    .?/.?7.??.??.7?.
  000000c0: 2f3f 1f27  3f1f 1f3f  271f 3f2f  1f3f 371f    /?.'?..?'.?/.?7.
  000000d0: 3f3f 1f37  3f1f 2f3f  1f27 3f1f  1f3f 1f1f    ??.7?./?.'?..?..
  000000e0: 3f27 1f3f  2f1f 3f37  1f3f 3f1f  373f 1f2f    ?'.?/.?7.??.7?./
  000000f0: 3f1f 273f  2d2d 3f31  2d3f 362d  3f3a 2d3f    ?.'?--?1-?6-?:-?
  00000100: 3f2d 3f3f  2d3a 3f2d  363f 2d31  3f2d 2d3f    ?-??-:?-6?-1?--?
  00000110: 312d 3f36  2d3f 3a2d  3f3f 2d3a  3f2d 363f    1-?6-?:-??-:?-6?
  00000120: 2d31 3f2d  2d3f 2d2d  3f31 2d3f  362d 3f3a    -1?--?--?1-?6-?:
  00000130: 2d3f 3f2d  3a3f 2d36  3f2d 313f  0000 1c07    -??-:?-6?-1?....
  00000140: 001c 0e00  1c15 001c  1c00 1c1c  0015 1c00    ................
  00000150: 0e1c 0007  1c00 001c  0700 1c0e  001c 1500    ................
  00000160: 1c1c 0015  1c00 0e1c  0007 1c00  001c 0000    ................
  00000170: 1c07 001c  0e00 1c15  001c 1c00  151c 000e    ................
  00000180: 1c00 071c  0e0e 1c11  0e1c 150e  1c18 0e1c    ................
  00000190: 1c0e 1c1c  0e18 1c0e  151c 0e11  1c0e 0e1c    ................
  000001a0: 110e 1c15  0e1c 180e  1c1c 0e18  1c0e 151c    ................
  000001b0: 0e11 1c0e  0e1c 0e0e  1c11 0e1c  150e 1c18    ................
  000001c0: 0e1c 1c0e  181c 0e15  1c0e 111c  1414 1c16    ................
  000001d0: 141c 1814  1c1a 141c  1c14 1c1c  141a 1c14    ................
  000001e0: 181c 1416  1c14 141c  1614 1c18  141c 1a14    ................
  000001f0: 1c1c 141a  1c14 181c  1416 1c14  141c 1414    ................
  00000200: 1c16 141c  1814 1c1a  141c 1c14  1a1c 1418    ................
  00000210: 1c14 161c  0000 1004  0010 0800  100c 0010    ................
  00000220: 1000 1010  000c 1000  0810 0004  1000 0010    ................
  00000230: 0400 1008  0010 0c00  1010 000c  1000 0810    ................
  00000240: 0004 1000  0010 0000  1004 0010  0800 100c    ................
  00000250: 0010 1000  0c10 0008  1000 0410  0808 100a    ................
  00000260: 0810 0c08  100e 0810  1008 1010  080e 1008    ................
  00000270: 0c10 080a  1008 0810  0a08 100c  0810 0e08    ................
  00000280: 1010 080e  1008 0c10  080a 1008  0810 0808    ................
  00000290: 100a 0810  0c08 100e  0810 1008  0e10 080c    ................
  000002a0: 1008 0a10  0b0b 100c  0b10 0d0b  100f 0b10    ................
  000002b0: 100b 1010  0b0f 100b  0d10 0b0c  100b 0b10    ................
  000002c0: 0c0b 100d  0b10 0f0b  1010 0b0f  100b 0d10    ................
  000002d0: 0b0c 100b  0b10 0b0b  100c 0b10  0d0b 100f    ................
  000002e0: 0b10 100b  0f10 0b0d  100b 0c10  0000 0000    ................
  000002f0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000300: 0000 0000                                     ....            

  NOTE: General revisionless dumper only.

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x0304     (772)
    0002:  UCHAR ucTableFormatRevision                         = 0x02       (2)
    0003:  UCHAR ucTableContentRevision                        = 0x01       (1)
  0004:  USHORT usMaxFrequency                               = 0x0000     (0)
  0006:  USHORT usReserved                                   = 0x0000     (0)

  Total data structure size:  0008


data_table  0000ab2e  #06  (LVDS_Info):


  00000000:            0000 0000  0000 0000  0000 0000        ............
  00000010: 0000 0000  0000 0000  0000 0000  0600 0000    ................
  00000020: 4c00 2000  0000 0000  1d3c 0106  0000 0000    L. ......<......
  00000030: 00cb c800  075a 5a07  7d00 0000  0000 0000    .....ZZ.}.......
  00000040: 0000 0000  0000 0000  0000 0000  0480 0000    ................
  00000050: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000060: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000070: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000080: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000090: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000a0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000b0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000c0: 0000 0000  0000 0000  0000 0000  0000 ff00    ................
  000000d0: 00                                            .               

  NOTE: Dumper revision differs.   Used:   Format Rev. 01  Content Rev. 02

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x00d1     (209)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x03       (3)
  0004:  ATOM_DTD_FORMAT sLCDTiming                          :
    0004:  USHORT usPixClk                                     = 0x0000     (0)
    0006:  USHORT usHActive                                    = 0x0000     (0)
    0008:  USHORT usHBlanking_Time                             = 0x0000     (0)
    000a:  USHORT usVActive                                    = 0x0000     (0)
    000c:  USHORT usVBlanking_Time                             = 0x0000     (0)
    000e:  USHORT usHSyncOffset                                = 0x0000     (0)
    0010:  USHORT usHSyncWidth                                 = 0x0000     (0)
    0012:  USHORT usVSyncOffset                                = 0x0000     (0)
    0014:  USHORT usVSyncWidth                                 = 0x0000     (0)
    0016:  USHORT usImageHSize                                 = 0x0000     (0)
    0018:  USHORT usImageVSize                                 = 0x0000     (0)
    001a:  UCHAR ucHBorder                                     = 0x00       (0)
    001b:  UCHAR ucVBorder                                     = 0x00       (0)
    001c:  ATOM_MODE_MISC_INFO_ACCESS susModeMiscInfo          :
      001c:  (union) ATOM_MODE_MISC_INFO sbfAccess               :
               USHORT HorizontalCutOff:1                           = 0x0000     (0)
               USHORT HSyncPolarity:1                              = 0x0001     (1)
               USHORT VSyncPolarity:1                              = 0x0001     (1)
               USHORT VerticalCutOff:1                             = 0x0000     (0)
               USHORT H_ReplicationBy2:1                           = 0x0000     (0)
               USHORT V_ReplicationBy2:1                           = 0x0000     (0)
               USHORT CompositeSync:1                              = 0x0000     (0)
               USHORT Interlace:1                                  = 0x0000     (0)
               USHORT DoubleClock:1                                = 0x0000     (0)
               USHORT RGB888:1                                     = 0x0000     (0)
               USHORT Reserved:6                                   = 0x0000     (0)
      001c:  (union) USHORT usAccess                             = 0x0006     (6)
    001e:  UCHAR ucInternalModeNumber                          = 0x00       (0)
    001f:  UCHAR ucRefreshRate                                 = 0x00       (0)
  0020:  USHORT usExtInfoTableOffset                         = 0x004c     (76)
  0022:  USHORT usSupportedRefreshRate                       = 0x0020     (32)
  0024:  USHORT usOffDelayInMs                               = 0x0000     (0)
  0026:  UCHAR ucPowerSequenceDigOntoDEin10Ms                = 0x00       (0)
  0027:  UCHAR ucPowerSequenceDEtoBLOnin10Ms                 = 0x00       (0)
  0028:  UCHAR ucLVDS_Misc                                   = 0x1d       (29)
  0029:  UCHAR ucPanelDefaultRefreshRate                     = 0x3c       (60)
  002a:  UCHAR ucPanelIdentification                         = 0x01       (1)
  002b:  UCHAR ucSS_Id                                       = 0x06       (6)
  002c:  USHORT usLCDVenderID                                = 0x0000     (0)
  002e:  USHORT usLCDProductID                               = 0x0000     (0)
  0030:  UCHAR ucLCDPanel_SpecialHandlingCap                 = 0x00       (0)
  0031:  UCHAR ucPanelInfoSize                               = 0xcb       (203)
  0032:  UCHAR ucReserved                                [0] = 0xc8       (200)
  0033:  UCHAR ucReserved                                [1] = 0x00       (0)

  Total data structure size:  0034


data_table  0000b3ba  #07  (TMDS_Info):


  00000000:            5f01 1200  3200 9e03  aa03 0000        _...2.......
  00000010: 0000 8019  001f 8119  001f 8219  001f 8319    ................
  00000020: 001f 8b19  0010 8f19  0010 8419  0817 0819    ................
  00000030: 181f 1b00  a438 021e  0000 a02a  0000 1000    .....8.....*....
  00000040: 0000 000e  2901 0000  0000 0802  7808 0fff    ....).......x...
  00000050: ff02 1e00  00a0 2a00  0010 0004  0407 0e69    ......*........i
  00000060: 0100 0000  0008 0278  080f 7440  031e 0000    .......x..t@....
  00000070: a02a 0000  1000 0000  000e 2801  0000 0000    .*........(.....
  00000080: 0802 7808  0fe4 5703  1e00 00a0  2a00 0010    ..x...W.....*...
  00000090: 0004 0487  0ea8 0100  0000 0008  0278 080f    .............x..
  000000a0: ffff 031e  0000 a02a  0000 1000  040e 870e    .......*........
  000000b0: 6803 0000  0000 2803  7801 4fa4  3802 2100    h.....(.x.O.8.!.
  000000c0: 00a0 2a00  0010 0000  0000 0e29  0100 0000    ..*........)....
  000000d0: 0008 0278  080f ffff  0221 0000  a02a 0000    ...x.....!...*..
  000000e0: 1000 0404  070e 6901  0000 0000  0802 7808    ......i.......x.
  000000f0: 0f74 4003  2100 00a0  2a00 0010  0004 0487    .t@.!...*.......
  00000100: 0ea8 0100  0000 0008  0278 080f  e457 0321    .........x...W.!
  00000110: 0000 a02a  0000 1000  080d 870e  c802 0000    ...*............
  00000120: 0000 0802  7808 0fff  ff03 2100  00a0 2a00    ....x.....!...*.
  00000130: 0010 0008  0f87 0ea8  0300 0000  0028 0378    .............(.x
  00000140: 014f ec2c  0121 0000  0000 0000  1000 0000    .O.,.!..........
  00000150: 000e c000  0e40 0000  0802 8808  0f00 0000    .....@..........
  00000160: 1e11 0180  1960 0001  0410 4000  0000 0000    .....`....@.....
  00000170: 0208 2080  0000 0050  1504 1040  0001 0000    .. ....P...@....
  00000180: a02a 0820  8000 0200  00f0 3f10  4000 0104    .*. ......?.@...
  00000190: 1111 0100  2080 0002  0811 1151  1540 0001    .... ......Q.@..
  000001a0: 0410 1111  a12a 8000  0208 2022  2202 0000    .....*.... ""...
  000001b0: 0104 1040  2222 5215  0002 0820  8033 3303    ...@""R.... .33.
  000001c0: 0000 0081  190f 00ff  ffff ffff  0000 1000    ................
  000001d0: 0000 8219  3300 ffff  0bc0 ff0c  0003 0e00    ....3...........
  000001e0: 00f0 0300  0c00 000e  0000 0004  000c 0801    ................
  000001f0: 0e00 0004  2800 0c04  010e 0000  0010 000c    ....(...........
  00000200: 0601 0e00  0083 193c  00b7 de0f  faff c000    .......<........
  00000210: 0000 0000  1001 0000  0100 0000  0020 0000    ............. ..
  00000220: 2001 0000  0000 4000  00e0 0000  0008 2000     .....@....... .
  00000230: 0000 4000  0000 4001  8004 00a0  0000 0000    ..@...@.........
  00000240: 008b 190f  00ff ffff  ffff 0000  0000 0000    ................
  00000250: 8f19 0f00  ffff ffff  ff08 0200  0000 0084    ................
  00000260: 190f 00ff  ffff ffff  0078 0800  0000 0000    .........x......
  00000270: 0021 2c01  8019 6000  0104 1040  0000 0000    .!,...`....@....
  00000280: 0002 0820  8000 0000  5015 0410  4000 0100    ... ....P...@...
  00000290: 00a0 2a08  2080 0002  0000 f03f  1040 0001    ..*. ......?.@..
  000002a0: 0411 1101  0020 8000  0208 1111  5115 4000    ..... ......Q.@.
  000002b0: 0104 1011  11a1 2a80  0002 0820  2222 0200    ......*.... ""..
  000002c0: 0001 0410  4022 2252  1500 0208  2080 3333    ....@""R.... .33
  000002d0: 0300 0000  8119 0f00  ffff ffff  ff00 0010    ................
  000002e0: 0000 0082  1957 00ff  ef0a c0ee  0c00 030e    .....W..........
  000002f0: 0000 f000  000c 0000  0e00 1000  0201 0c08    ................
  00000300: 020e 0000  0021 000c  0403 0e00  0001 0010    .....!..........
  00000310: 0c08 030e  0000 0004  000c 0801  0e00 0000    ................
  00000320: 0800 0c06  020e 0000  0400 000c  0401 0e00    ................
  00000330: 0000 1000  0c08 040e  0000 8319  2a00 f7df    ............*...
  00000340: 0fd2 ffc0  0000 0000  00f0 2900  0001 0000    ..........).....
  00000350: 0820 0000  0080 0000  0000 0000  0400 4001    . ............@.
  00000360: 0000 0000  8b19 0f00  ffff ffff  ff00 0000    ................
  00000370: 0000 008f  190f 00ff  ffff ffff  0802 0000    ................
  00000380: 0000 8419  1800 ffff  fffb ff00  7808 0000    ............x...
  00000390: 0000 0400  0078 0300  0000 0000  0000 8519    .....x..........
  000003a0: 001f 8619  001f 8719  101f 0e00  483f 003f    ............H?.?
  000003b0: 0080 2800  5d00 1200  1100 7869  003f 0000    ..(.].....xi.?..
  000003c0: 1b00 5d00  1a00 0100  907e 003f  6866 2000    ..]......~.?hf .
  000003d0: 5d00 0a00  0100 f0d2  003f 0000  3600 5d00    ]........?..6.].
  000003e0: 1a00 0100  350c 023f  0000 5000  1d00 8510    ....5..?..P.....
  000003f0: 01c0 6a18  023f 0000  2800 1d00  3210 01a0    ..j..?..(...2...
  00000400: d430 023f  0000 1400  1d00 0a10  0180 ffff    .0.?............
  00000410: 023f 0000  1400 1d00  2a10 0101  a00f 033f    .?......*......?
  00000420: 0000 5000  1d00 8510  01c0 4c1d  033f 0000    ..P.......L..?..
  00000430: 1400 1d00  0a10 0180  7440 033f  0000 1400    ........t@.?....
  00000440: 1d00 0a10  0101 e457  033f 0000  1400 5d00    .......W.?....].
  00000450: 0010 0101  ffff 033f  0000 1e00  5d00 0a00    .......?....]...
  00000460: 0102 9411  0121 0000  3800 1d00  1910 00c0    .....!..8.......
  00000470: 7017 0121  0000 1c00  1d00 0810  00a0 2823    p..!..........(#
  00000480: 0121 0000  1c00 1d00  1910 00a0  ec2c 0121    .!...........,.!
  00000490: 0000 0e00  1d00 0810  0080 0000               ............    

  NOTE: General revisionless dumper only.

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x049c     (1180)
    0002:  UCHAR ucTableFormatRevision                         = 0x03       (3)
    0003:  UCHAR ucTableContentRevision                        = 0x02       (2)
  0004:  USHORT usMaxFrequency                               = 0x015f     (351)
  0006:  ATOM_MISC_CONTROL_INFO asMiscInfo               [0] :
    0006:  USHORT usFrequency                                  = 0x0012     (18)
    0008:  UCHAR ucPLL_ChargePump                              = 0x32       (50)
    0009:  UCHAR ucPLL_DutyCycle                               = 0x00       (0)
    000a:  UCHAR ucPLL_VCO_Gain                                = 0x9e       (158)
    000b:  UCHAR ucPLL_VoltageSwing                            = 0x03       (3)
  000c:  ATOM_MISC_CONTROL_INFO asMiscInfo               [1] :
    000c:  USHORT usFrequency                                  = 0x03aa     (938)
    000e:  UCHAR ucPLL_ChargePump                              = 0x00       (0)
    000f:  UCHAR ucPLL_DutyCycle                               = 0x00       (0)
    0010:  UCHAR ucPLL_VCO_Gain                                = 0x00       (0)
    0011:  UCHAR ucPLL_VoltageSwing                            = 0x00       (0)
  0012:  ATOM_MISC_CONTROL_INFO asMiscInfo               [2] :
    0012:  USHORT usFrequency                                  = 0x1980     (6528)
    0014:  UCHAR ucPLL_ChargePump                              = 0x00       (0)
    0015:  UCHAR ucPLL_DutyCycle                               = 0x1f       (31)
    0016:  UCHAR ucPLL_VCO_Gain                                = 0x81       (129)
    0017:  UCHAR ucPLL_VoltageSwing                            = 0x19       (25)
  0018:  ATOM_MISC_CONTROL_INFO asMiscInfo               [3] :
    0018:  USHORT usFrequency                                  = 0x1f00     (7936)
    001a:  UCHAR ucPLL_ChargePump                              = 0x82       (130)
    001b:  UCHAR ucPLL_DutyCycle                               = 0x19       (25)
    001c:  UCHAR ucPLL_VCO_Gain                                = 0x00       (0)
    001d:  UCHAR ucPLL_VoltageSwing                            = 0x1f       (31)

  Total data structure size:  001e


data_table  00000000  #08  (AnalogTV_Info):


data_table  00000000  #09  (SupportedDevicesInfo):


data_table  0000ac00  #0a  (GPIO_I2C_Info):


  00000000:            4c19 4e19  4f19 4d19  4c19 4e19        L.N.O.M.L.N.
  00000010: 4f19 4d19  9000 0000  0008 0808  0800 0050    O.M............P
  00000020: 1952 1953  1951 1950  1952 1953  1951 1991    .R.S.Q.P.R.S.Q..
  00000030: 0000 0000  0808 0808  0000 5419  5619 5719    ..........T.V.W.
  00000040: 5519 5419  5619 5719  5519 9200  0000 0008    U.T.V.W.U.......
  00000050: 0808 0800  0058 195a  195b 1959  1958 195a    .....X.Z.[.Y.X.Z
  00000060: 195b 1959  1993 0000  0000 0808  0808 0000    .[.Y............
  00000070: 5c19 5e19  5f19 5d19  5c19 5e19  5f19 5d19    \.^._.].\.^._.].
  00000080: 9400 0000  0008 0808  0800 0060  1962 1963    ...........`.b.c
  00000090: 1961 1960  1962 1963  1961 1995  0000 0000    .a.`.b.c.a......
  000000a0: 0808 0808  0000 7019  7219 7319  7119 7019    ......p.r.s.q.p.
  000000b0: 7219 7319  7119 9600  0000 0008  0808 0800    r.s.q...........
  000000c0: 0070 1972  1973 1971  1970 1972  1973 1971    .p.r.s.q.p.r.s.q
  000000d0: 1997 0000  0000 0808  0808 0000               ............    

  NOTE: General revisionless dumper only.

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x00dc     (220)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x01       (1)
  0004:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [0] :
    0004:  USHORT usClkMaskRegisterIndex                       = 0x194c     (6476)
    0006:  USHORT usClkEnRegisterIndex                         = 0x194e     (6478)
    0008:  USHORT usClkY_RegisterIndex                         = 0x194f     (6479)
    000a:  USHORT usClkA_RegisterIndex                         = 0x194d     (6477)
    000c:  USHORT usDataMaskRegisterIndex                      = 0x194c     (6476)
    000e:  USHORT usDataEnRegisterIndex                        = 0x194e     (6478)
    0010:  USHORT usDataY_RegisterIndex                        = 0x194f     (6479)
    0012:  USHORT usDataA_RegisterIndex                        = 0x194d     (6477)
    0014:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      0014:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x00       (0)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      0014:  (union) UCHAR ucAccess                              = 0x90       (144)
    0015:  UCHAR ucClkMaskShift                                = 0x00       (0)
    0016:  UCHAR ucClkEnShift                                  = 0x00       (0)
    0017:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    0018:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    0019:  UCHAR ucDataMaskShift                               = 0x08       (8)
    001a:  UCHAR ucDataEnShift                                 = 0x08       (8)
    001b:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    001c:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    001d:  UCHAR ucReserved1                                   = 0x00       (0)
    001e:  UCHAR ucReserved2                                   = 0x00       (0)
  001f:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [1] :
    001f:  USHORT usClkMaskRegisterIndex                       = 0x1950     (6480)
    0021:  USHORT usClkEnRegisterIndex                         = 0x1952     (6482)
    0023:  USHORT usClkY_RegisterIndex                         = 0x1953     (6483)
    0025:  USHORT usClkA_RegisterIndex                         = 0x1951     (6481)
    0027:  USHORT usDataMaskRegisterIndex                      = 0x1950     (6480)
    0029:  USHORT usDataEnRegisterIndex                        = 0x1952     (6482)
    002b:  USHORT usDataY_RegisterIndex                        = 0x1953     (6483)
    002d:  USHORT usDataA_RegisterIndex                        = 0x1951     (6481)
    002f:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      002f:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x01       (1)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      002f:  (union) UCHAR ucAccess                              = 0x91       (145)
    0030:  UCHAR ucClkMaskShift                                = 0x00       (0)
    0031:  UCHAR ucClkEnShift                                  = 0x00       (0)
    0032:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    0033:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    0034:  UCHAR ucDataMaskShift                               = 0x08       (8)
    0035:  UCHAR ucDataEnShift                                 = 0x08       (8)
    0036:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    0037:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    0038:  UCHAR ucReserved1                                   = 0x00       (0)
    0039:  UCHAR ucReserved2                                   = 0x00       (0)
  003a:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [2] :
    003a:  USHORT usClkMaskRegisterIndex                       = 0x1954     (6484)
    003c:  USHORT usClkEnRegisterIndex                         = 0x1956     (6486)
    003e:  USHORT usClkY_RegisterIndex                         = 0x1957     (6487)
    0040:  USHORT usClkA_RegisterIndex                         = 0x1955     (6485)
    0042:  USHORT usDataMaskRegisterIndex                      = 0x1954     (6484)
    0044:  USHORT usDataEnRegisterIndex                        = 0x1956     (6486)
    0046:  USHORT usDataY_RegisterIndex                        = 0x1957     (6487)
    0048:  USHORT usDataA_RegisterIndex                        = 0x1955     (6485)
    004a:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      004a:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x02       (2)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      004a:  (union) UCHAR ucAccess                              = 0x92       (146)
    004b:  UCHAR ucClkMaskShift                                = 0x00       (0)
    004c:  UCHAR ucClkEnShift                                  = 0x00       (0)
    004d:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    004e:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    004f:  UCHAR ucDataMaskShift                               = 0x08       (8)
    0050:  UCHAR ucDataEnShift                                 = 0x08       (8)
    0051:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    0052:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    0053:  UCHAR ucReserved1                                   = 0x00       (0)
    0054:  UCHAR ucReserved2                                   = 0x00       (0)
  0055:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [3] :
    0055:  USHORT usClkMaskRegisterIndex                       = 0x1958     (6488)
    0057:  USHORT usClkEnRegisterIndex                         = 0x195a     (6490)
    0059:  USHORT usClkY_RegisterIndex                         = 0x195b     (6491)
    005b:  USHORT usClkA_RegisterIndex                         = 0x1959     (6489)
    005d:  USHORT usDataMaskRegisterIndex                      = 0x1958     (6488)
    005f:  USHORT usDataEnRegisterIndex                        = 0x195a     (6490)
    0061:  USHORT usDataY_RegisterIndex                        = 0x195b     (6491)
    0063:  USHORT usDataA_RegisterIndex                        = 0x1959     (6489)
    0065:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      0065:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x03       (3)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      0065:  (union) UCHAR ucAccess                              = 0x93       (147)
    0066:  UCHAR ucClkMaskShift                                = 0x00       (0)
    0067:  UCHAR ucClkEnShift                                  = 0x00       (0)
    0068:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    0069:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    006a:  UCHAR ucDataMaskShift                               = 0x08       (8)
    006b:  UCHAR ucDataEnShift                                 = 0x08       (8)
    006c:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    006d:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    006e:  UCHAR ucReserved1                                   = 0x00       (0)
    006f:  UCHAR ucReserved2                                   = 0x00       (0)
  0070:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [4] :
    0070:  USHORT usClkMaskRegisterIndex                       = 0x195c     (6492)
    0072:  USHORT usClkEnRegisterIndex                         = 0x195e     (6494)
    0074:  USHORT usClkY_RegisterIndex                         = 0x195f     (6495)
    0076:  USHORT usClkA_RegisterIndex                         = 0x195d     (6493)
    0078:  USHORT usDataMaskRegisterIndex                      = 0x195c     (6492)
    007a:  USHORT usDataEnRegisterIndex                        = 0x195e     (6494)
    007c:  USHORT usDataY_RegisterIndex                        = 0x195f     (6495)
    007e:  USHORT usDataA_RegisterIndex                        = 0x195d     (6493)
    0080:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      0080:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x04       (4)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      0080:  (union) UCHAR ucAccess                              = 0x94       (148)
    0081:  UCHAR ucClkMaskShift                                = 0x00       (0)
    0082:  UCHAR ucClkEnShift                                  = 0x00       (0)
    0083:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    0084:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    0085:  UCHAR ucDataMaskShift                               = 0x08       (8)
    0086:  UCHAR ucDataEnShift                                 = 0x08       (8)
    0087:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    0088:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    0089:  UCHAR ucReserved1                                   = 0x00       (0)
    008a:  UCHAR ucReserved2                                   = 0x00       (0)
  008b:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [5] :
    008b:  USHORT usClkMaskRegisterIndex                       = 0x1960     (6496)
    008d:  USHORT usClkEnRegisterIndex                         = 0x1962     (6498)
    008f:  USHORT usClkY_RegisterIndex                         = 0x1963     (6499)
    0091:  USHORT usClkA_RegisterIndex                         = 0x1961     (6497)
    0093:  USHORT usDataMaskRegisterIndex                      = 0x1960     (6496)
    0095:  USHORT usDataEnRegisterIndex                        = 0x1962     (6498)
    0097:  USHORT usDataY_RegisterIndex                        = 0x1963     (6499)
    0099:  USHORT usDataA_RegisterIndex                        = 0x1961     (6497)
    009b:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      009b:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x05       (5)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      009b:  (union) UCHAR ucAccess                              = 0x95       (149)
    009c:  UCHAR ucClkMaskShift                                = 0x00       (0)
    009d:  UCHAR ucClkEnShift                                  = 0x00       (0)
    009e:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    009f:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    00a0:  UCHAR ucDataMaskShift                               = 0x08       (8)
    00a1:  UCHAR ucDataEnShift                                 = 0x08       (8)
    00a2:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    00a3:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    00a4:  UCHAR ucReserved1                                   = 0x00       (0)
    00a5:  UCHAR ucReserved2                                   = 0x00       (0)
  00a6:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [6] :
    00a6:  USHORT usClkMaskRegisterIndex                       = 0x1970     (6512)
    00a8:  USHORT usClkEnRegisterIndex                         = 0x1972     (6514)
    00aa:  USHORT usClkY_RegisterIndex                         = 0x1973     (6515)
    00ac:  USHORT usClkA_RegisterIndex                         = 0x1971     (6513)
    00ae:  USHORT usDataMaskRegisterIndex                      = 0x1970     (6512)
    00b0:  USHORT usDataEnRegisterIndex                        = 0x1972     (6514)
    00b2:  USHORT usDataY_RegisterIndex                        = 0x1973     (6515)
    00b4:  USHORT usDataA_RegisterIndex                        = 0x1971     (6513)
    00b6:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      00b6:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x06       (6)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      00b6:  (union) UCHAR ucAccess                              = 0x96       (150)
    00b7:  UCHAR ucClkMaskShift                                = 0x00       (0)
    00b8:  UCHAR ucClkEnShift                                  = 0x00       (0)
    00b9:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    00ba:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    00bb:  UCHAR ucDataMaskShift                               = 0x08       (8)
    00bc:  UCHAR ucDataEnShift                                 = 0x08       (8)
    00bd:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    00be:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    00bf:  UCHAR ucReserved1                                   = 0x00       (0)
    00c0:  UCHAR ucReserved2                                   = 0x00       (0)
  00c1:  ATOM_GPIO_I2C_ASSIGMENT asGPIO_Info             [7] :
    00c1:  USHORT usClkMaskRegisterIndex                       = 0x1970     (6512)
    00c3:  USHORT usClkEnRegisterIndex                         = 0x1972     (6514)
    00c5:  USHORT usClkY_RegisterIndex                         = 0x1973     (6515)
    00c7:  USHORT usClkA_RegisterIndex                         = 0x1971     (6513)
    00c9:  USHORT usDataMaskRegisterIndex                      = 0x1970     (6512)
    00cb:  USHORT usDataEnRegisterIndex                        = 0x1972     (6514)
    00cd:  USHORT usDataY_RegisterIndex                        = 0x1973     (6515)
    00cf:  USHORT usDataA_RegisterIndex                        = 0x1971     (6513)
    00d1:  ATOM_I2C_ID_CONFIG_ACCESS sucI2cId                  :
      00d1:  (union) ATOM_I2C_ID_CONFIG sbfAccess                :
               UCHAR bfI2C_LineMux:4                               = 0x07       (7)
               UCHAR bfHW_EngineID:3                               = 0x01       (1)
               UCHAR bfHW_Capable:1                                = 0x01       (1)
      00d1:  (union) UCHAR ucAccess                              = 0x97       (151)
    00d2:  UCHAR ucClkMaskShift                                = 0x00       (0)
    00d3:  UCHAR ucClkEnShift                                  = 0x00       (0)
    00d4:  UCHAR ucClkY_Shift                                  = 0x00       (0)
    00d5:  UCHAR ucClkA_Shift                                  = 0x00       (0)
    00d6:  UCHAR ucDataMaskShift                               = 0x08       (8)
    00d7:  UCHAR ucDataEnShift                                 = 0x08       (8)
    00d8:  UCHAR ucDataY_Shift                                 = 0x08       (8)
    00d9:  UCHAR ucDataA_Shift                                 = 0x08       (8)
    00da:  UCHAR ucReserved1                                   = 0x00       (0)
    00db:  UCHAR ucReserved2                                   = 0x00       (0)

  Total data structure size:  00dc


data_table  0000acdc  #0b  (VRAM_UsageByFirmware):


  00000000:            0000 0000  0000 2000                   ...... .    

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x000c     (12)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x05       (5)
  0004:  ATOM_FIRMWARE_VRAM_RESERVE_INFO_V1_5 asFirmwareVramReserveInfo [0] :
    0004:  ULONG ulStartAddrUsedByFirmware                     = 0x00000000 (0)
    0008:  USHORT usFirmwareUseInKb                            = 0x0000     (0)
    000a:  USHORT usFBUsedByDrvInKb                            = 0x0020     (32)

  Total data structure size:  000c


data_table  0000ace8  #0c  (GPIO_Pin_LUT):


  00000000:            6d19 0001  6d19 0802  6d19 1003        m...m...m...
  00000010: 6d19 1804  6d19 1a05  6d19 1c06               m...m...m...    

  NOTE: General revisionless dumper only.

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x001c     (28)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x01       (1)
  0004:  ATOM_GPIO_PIN_ASSIGNMENT asGPIO_Pin             [0] :
    0004:  USHORT usGpioPin_AIndex                             = 0x196d     (6509)
    0006:  UCHAR ucGpioPinBitShift                             = 0x00       (0)
    0007:  UCHAR ucGPIO_ID                                     = 0x01       (1)
  0008:  ATOM_GPIO_PIN_ASSIGNMENT asGPIO_Pin             [1] :
    0008:  USHORT usGpioPin_AIndex                             = 0x196d     (6509)
    000a:  UCHAR ucGpioPinBitShift                             = 0x08       (8)
    000b:  UCHAR ucGPIO_ID                                     = 0x02       (2)
  000c:  ATOM_GPIO_PIN_ASSIGNMENT asGPIO_Pin             [2] :
    000c:  USHORT usGpioPin_AIndex                             = 0x196d     (6509)
    000e:  UCHAR ucGpioPinBitShift                             = 0x10       (16)
    000f:  UCHAR ucGPIO_ID                                     = 0x03       (3)
  0010:  ATOM_GPIO_PIN_ASSIGNMENT asGPIO_Pin             [3] :
    0010:  USHORT usGpioPin_AIndex                             = 0x196d     (6509)
    0012:  UCHAR ucGpioPinBitShift                             = 0x18       (24)
    0013:  UCHAR ucGPIO_ID                                     = 0x04       (4)
  0014:  ATOM_GPIO_PIN_ASSIGNMENT asGPIO_Pin             [4] :
    0014:  USHORT usGpioPin_AIndex                             = 0x196d     (6509)
    0016:  UCHAR ucGpioPinBitShift                             = 0x1a       (26)
    0017:  UCHAR ucGPIO_ID                                     = 0x05       (5)
  0018:  ATOM_GPIO_PIN_ASSIGNMENT asGPIO_Pin             [5] :
    0018:  USHORT usGpioPin_AIndex                             = 0x196d     (6509)
    001a:  UCHAR ucGpioPinBitShift                             = 0x1c       (28)
    001b:  UCHAR ucGPIO_ID                                     = 0x06       (6)

  Total data structure size:  001c


data_table  0000ad04  #0d  (VESA_ToInternalModeLUT):


  00000000:            0001 02e6  0101 0212  0301 026a        ...........j
  00000010: 0501 0255  0701 02ea  1001 0612  1101 1612    ...U............
  00000020: 1301 066a  1401 166a  1601 0655  1701 1655    ...j...j...U...U
  00000030: 1901 06ea  1a01 16ea  6301 02e9  6501 16e9    ........c...e...
  00000040: 6601 0ae9  2101 0a12  2201 0a6a  2301 0a55    f...!..."..j#..U
  00000050: 2401 0aea  4301 02eb  4501 16eb  4601 0aeb    $...C...E...F...
  00000060: 7301 02ec  7501 16ec  7601 0aec  d101 0270    s...u...v......p
  00000070: d201 1670  d401 0a70  d701 0271  d801 1671    ...p...p...q...q
  00000080: d901 0a71  e101 0272  e201 1672  e401 0a72    ...q...r...r...r
  00000090: e701 0273  e801 1673  e901 0a73  f301 0274    ...s...s...s...t
  000000a0: f501 1674  f601 0a74                          ...t...t        

  NOTE: General revisionless dumper only.

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x00a8     (168)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x01       (1)
  0004:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [0] :
    0004:  USHORT usVESA_ModeNumber                            = 0x0100     (256)
    0006:  USHORT usExtendedModeNumber                         = 0xe602     (58882)
  0008:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [1] :
    0008:  USHORT usVESA_ModeNumber                            = 0x0101     (257)
    000a:  USHORT usExtendedModeNumber                         = 0x1202     (4610)
  000c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [2] :
    000c:  USHORT usVESA_ModeNumber                            = 0x0103     (259)
    000e:  USHORT usExtendedModeNumber                         = 0x6a02     (27138)
  0010:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [3] :
    0010:  USHORT usVESA_ModeNumber                            = 0x0105     (261)
    0012:  USHORT usExtendedModeNumber                         = 0x5502     (21762)
  0014:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [4] :
    0014:  USHORT usVESA_ModeNumber                            = 0x0107     (263)
    0016:  USHORT usExtendedModeNumber                         = 0xea02     (59906)
  0018:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [5] :
    0018:  USHORT usVESA_ModeNumber                            = 0x0110     (272)
    001a:  USHORT usExtendedModeNumber                         = 0x1206     (4614)
  001c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [6] :
    001c:  USHORT usVESA_ModeNumber                            = 0x0111     (273)
    001e:  USHORT usExtendedModeNumber                         = 0x1216     (4630)
  0020:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [7] :
    0020:  USHORT usVESA_ModeNumber                            = 0x0113     (275)
    0022:  USHORT usExtendedModeNumber                         = 0x6a06     (27142)
  0024:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [8] :
    0024:  USHORT usVESA_ModeNumber                            = 0x0114     (276)
    0026:  USHORT usExtendedModeNumber                         = 0x6a16     (27158)
  0028:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [9] :
    0028:  USHORT usVESA_ModeNumber                            = 0x0116     (278)
    002a:  USHORT usExtendedModeNumber                         = 0x5506     (21766)
  002c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [10] :
    002c:  USHORT usVESA_ModeNumber                            = 0x0117     (279)
    002e:  USHORT usExtendedModeNumber                         = 0x5516     (21782)
  0030:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [11] :
    0030:  USHORT usVESA_ModeNumber                            = 0x0119     (281)
    0032:  USHORT usExtendedModeNumber                         = 0xea06     (59910)
  0034:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [12] :
    0034:  USHORT usVESA_ModeNumber                            = 0x011a     (282)
    0036:  USHORT usExtendedModeNumber                         = 0xea16     (59926)
  0038:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [13] :
    0038:  USHORT usVESA_ModeNumber                            = 0x0163     (355)
    003a:  USHORT usExtendedModeNumber                         = 0xe902     (59650)
  003c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [14] :
    003c:  USHORT usVESA_ModeNumber                            = 0x0165     (357)
    003e:  USHORT usExtendedModeNumber                         = 0xe916     (59670)
  0040:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [15] :
    0040:  USHORT usVESA_ModeNumber                            = 0x0166     (358)
    0042:  USHORT usExtendedModeNumber                         = 0xe90a     (59658)
  0044:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [16] :
    0044:  USHORT usVESA_ModeNumber                            = 0x0121     (289)
    0046:  USHORT usExtendedModeNumber                         = 0x120a     (4618)
  0048:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [17] :
    0048:  USHORT usVESA_ModeNumber                            = 0x0122     (290)
    004a:  USHORT usExtendedModeNumber                         = 0x6a0a     (27146)
  004c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [18] :
    004c:  USHORT usVESA_ModeNumber                            = 0x0123     (291)
    004e:  USHORT usExtendedModeNumber                         = 0x550a     (21770)
  0050:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [19] :
    0050:  USHORT usVESA_ModeNumber                            = 0x0124     (292)
    0052:  USHORT usExtendedModeNumber                         = 0xea0a     (59914)
  0054:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [20] :
    0054:  USHORT usVESA_ModeNumber                            = 0x0143     (323)
    0056:  USHORT usExtendedModeNumber                         = 0xeb02     (60162)
  0058:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [21] :
    0058:  USHORT usVESA_ModeNumber                            = 0x0145     (325)
    005a:  USHORT usExtendedModeNumber                         = 0xeb16     (60182)
  005c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [22] :
    005c:  USHORT usVESA_ModeNumber                            = 0x0146     (326)
    005e:  USHORT usExtendedModeNumber                         = 0xeb0a     (60170)
  0060:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [23] :
    0060:  USHORT usVESA_ModeNumber                            = 0x0173     (371)
    0062:  USHORT usExtendedModeNumber                         = 0xec02     (60418)
  0064:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [24] :
    0064:  USHORT usVESA_ModeNumber                            = 0x0175     (373)
    0066:  USHORT usExtendedModeNumber                         = 0xec16     (60438)
  0068:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [25] :
    0068:  USHORT usVESA_ModeNumber                            = 0x0176     (374)
    006a:  USHORT usExtendedModeNumber                         = 0xec0a     (60426)
  006c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [26] :
    006c:  USHORT usVESA_ModeNumber                            = 0x01d1     (465)
    006e:  USHORT usExtendedModeNumber                         = 0x7002     (28674)
  0070:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [27] :
    0070:  USHORT usVESA_ModeNumber                            = 0x01d2     (466)
    0072:  USHORT usExtendedModeNumber                         = 0x7016     (28694)
  0074:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [28] :
    0074:  USHORT usVESA_ModeNumber                            = 0x01d4     (468)
    0076:  USHORT usExtendedModeNumber                         = 0x700a     (28682)
  0078:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [29] :
    0078:  USHORT usVESA_ModeNumber                            = 0x01d7     (471)
    007a:  USHORT usExtendedModeNumber                         = 0x7102     (28930)
  007c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [30] :
    007c:  USHORT usVESA_ModeNumber                            = 0x01d8     (472)
    007e:  USHORT usExtendedModeNumber                         = 0x7116     (28950)
  0080:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [31] :
    0080:  USHORT usVESA_ModeNumber                            = 0x01d9     (473)
    0082:  USHORT usExtendedModeNumber                         = 0x710a     (28938)
  0084:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [32] :
    0084:  USHORT usVESA_ModeNumber                            = 0x01e1     (481)
    0086:  USHORT usExtendedModeNumber                         = 0x7202     (29186)
  0088:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [33] :
    0088:  USHORT usVESA_ModeNumber                            = 0x01e2     (482)
    008a:  USHORT usExtendedModeNumber                         = 0x7216     (29206)
  008c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [34] :
    008c:  USHORT usVESA_ModeNumber                            = 0x01e4     (484)
    008e:  USHORT usExtendedModeNumber                         = 0x720a     (29194)
  0090:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [35] :
    0090:  USHORT usVESA_ModeNumber                            = 0x01e7     (487)
    0092:  USHORT usExtendedModeNumber                         = 0x7302     (29442)
  0094:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [36] :
    0094:  USHORT usVESA_ModeNumber                            = 0x01e8     (488)
    0096:  USHORT usExtendedModeNumber                         = 0x7316     (29462)
  0098:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [37] :
    0098:  USHORT usVESA_ModeNumber                            = 0x01e9     (489)
    009a:  USHORT usExtendedModeNumber                         = 0x730a     (29450)
  009c:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [38] :
    009c:  USHORT usVESA_ModeNumber                            = 0x01f3     (499)
    009e:  USHORT usExtendedModeNumber                         = 0x7402     (29698)
  00a0:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [39] :
    00a0:  USHORT usVESA_ModeNumber                            = 0x01f5     (501)
    00a2:  USHORT usExtendedModeNumber                         = 0x7416     (29718)
  00a4:  ATOM_VESA_TO_EXTENDED_MODE asVESA_ToExtendedModeInfo [40] :
    00a4:  USHORT usVESA_ModeNumber                            = 0x01f6     (502)
    00a6:  USHORT usExtendedModeNumber                         = 0x740a     (29706)

  Total data structure size:  00a8


data_table  00000000  #0e  (ComponentVideoInfo):


data_table  0000adac  #0f  (PowerPlayInfo):


  00000000:            0000 0000  0000 0000  0000 0000        ............
  00000010: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000020: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000030: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000040: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000050: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000060: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000070: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000080: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000090: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000a0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000b0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000c0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000d0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000e0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000f0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000100: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000110: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000120: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000130: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000140: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000150: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000160: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000170: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000180: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000190: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001a0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001b0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001c0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001d0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001e0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001f0: 0000 0000  0000 0000  0000 0000  0000 0000    ................


data_table  00000000  #10  (CompassionateData):


data_table  0000b3a2  #11  (SaveRestoreInfo_DispDevicePriorityInfo):


  00000000:            0200 0800  8000 0002  0004 0008        ............
  00000010: 4000 0100  1000 ffff                          @.......        


data_table  00000000  #12  (PPLL_SS_Info_SS_Info):


data_table  00000000  #13  (OemInfo):


data_table  00000000  #14  (XTMDS_Info):


data_table  00000000  #15  (MclkSS_Info):


data_table  0000afac  #16  (Object_Info_Object_Header):


  00000000:            0300 3800  0000 bd00  0000 1200        ..8.........
  00000010: 2c01 0301  0000 0200  0c00 1531  0011 1e21    ,..........1...!
  00000020: 2322 0100  0c00 1532  0011 1e22  2321 0100    #".....2..."#!..
  00000030: 0a00 1537  0011 1521  0300 0000  1531 5400    ...7...!.....1T.
  00000040: 5a00 0000  1532 7700  7d00 0000  1537 9a00    Z....2w.}....7..
  00000050: a000 0000  0123 2200  0000 0414  0000 0000    .....#".........
  00000060: 0000 0000  0000 0000  0000 0000  0000 0104    ................
  00000070: 0000 0204  0000 ff01  2321 0000  0004 1400    ........#!......
  00000080: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000090: 0001 0400  0002 0400  00ff 0115  2100 0000    ............!...
  000000a0: 0414 0000  0000 0000  0000 0000  0000 0000    ................
  000000b0: 0000 0000  0104 0000  0204 0000  ff05 0000    ................
  000000c0: 001e 21e9  00ef 0000  0023 22f4  00fa 0000    ..!......#".....
  000000d0: 001e 2203  0109 0100  0023 210e  0114 0100    .."......#!.....
  000000e0: 0015 211d  0100 0000  0001 0011  0123 2214    ..!..........#".
  000000f0: 0403 00ff  011e 2101  1531 0104  0000 0204    ......!..1......
  00000100: 0000 ff01  0011 0123  2114 0403  00ff 011e    .......#!.......
  00000110: 2201 1532  0104 0000  0204 0000  ff01 0011    "..2............
  00000120: 0115 3701  0400 0002  0400 00ff  0100 0000    ..7.............
  00000130: 0371 0000  3801 0000  100a 0102  ff00 0000    .q..8...........
  00000140: 0000 110a  9091 9700  0000 0000  ff           .............   

  NOTE: General revisionless dumper only.
  NOTE: Data part see radeonhd

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x014d     (333)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x03       (3)
  0004:  USHORT usDeviceSupport                              = 0x0003     (3)
  0006:  USHORT usConnectorObjectTableOffset                 = 0x0038     (56)
  0008:  USHORT usRouterObjectTableOffset                    = 0x0000     (0)
  000a:  USHORT usEncoderObjectTableOffset                   = 0x00bd     (189)
  000c:  USHORT usProtectionObjectTableOffset                = 0x0000     (0)
  000e:  USHORT usDisplayPathTableOffset                     = 0x0012     (18)

  Total data structure size:  0010


data_table  0000b0fa  #17  (IndirectIOAccess):


  00000000:            0103 0238  0006 1000  0003 3800        ...8......8.
  00000010: 0239 0009  1000 0183  0238 0006  1000 0003    .9.......8......
  00000020: 3800 0820  0000 0339  0009 2600  00           8.. ...9..&..   

  NOTE: General revisionless dumper only.
  NOTE: Binary data part skipped

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x002d     (45)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x01       (1)

  Total data structure size:  002d


data_table  00000000  #18  (MC_InitParameter_AdjustARB_SEQ):


data_table  00000000  #19  (ASIC_VDDC_Info):


data_table  0000b328  #1a  (ASIC_InternalSS_Info_ASIC_MVDDC_Info):


  00000000:            ffff ff00  0000 e40c  0401 0000        ............
  00000010: ffff ff00  0000 e40c  0501 0000  ffff ff00    ................
  00000020: 6400 a00f  0600 0000  ffff ff00  0000 450c    d.............E.
  00000030: 0712 0000  ffff ff00  0000 b80b  0b12 0000    ................

  NOTE: General revisionless dumper only.

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x0040     (64)
    0002:  UCHAR ucTableFormatRevision                         = 0x03       (3)
    0003:  UCHAR ucTableContentRevision                        = 0x01       (1)
  0004:  ATOM_ASIC_SS_ASSIGNMENT asSpreadSpectrum        [0] :
    0004:  ULONG ulTargetClockRange                            = 0x00ffffff (16777215)
    0008:  USHORT usSpreadSpectrumPercentage                   = 0x0000     (0)
    000a:  USHORT usSpreadRateInKhz                            = 0x0ce4     (3300)
    000c:  UCHAR ucClockIndication                             = 0x04       (4)
    000d:  UCHAR ucSpreadSpectrumMode                          = 0x01       (1)
    000e:  UCHAR ucReserved                                [0] = 0x00       (0)
    000f:  UCHAR ucReserved                                [1] = 0x00       (0)
  0010:  ATOM_ASIC_SS_ASSIGNMENT asSpreadSpectrum        [1] :
    0010:  ULONG ulTargetClockRange                            = 0x00ffffff (16777215)
    0014:  USHORT usSpreadSpectrumPercentage                   = 0x0000     (0)
    0016:  USHORT usSpreadRateInKhz                            = 0x0ce4     (3300)
    0018:  UCHAR ucClockIndication                             = 0x05       (5)
    0019:  UCHAR ucSpreadSpectrumMode                          = 0x01       (1)
    001a:  UCHAR ucReserved                                [0] = 0x00       (0)
    001b:  UCHAR ucReserved                                [1] = 0x00       (0)
  001c:  ATOM_ASIC_SS_ASSIGNMENT asSpreadSpectrum        [2] :
    001c:  ULONG ulTargetClockRange                            = 0x00ffffff (16777215)
    0020:  USHORT usSpreadSpectrumPercentage                   = 0x0064     (100)
    0022:  USHORT usSpreadRateInKhz                            = 0x0fa0     (4000)
    0024:  UCHAR ucClockIndication                             = 0x06       (6)
    0025:  UCHAR ucSpreadSpectrumMode                          = 0x00       (0)
    0026:  UCHAR ucReserved                                [0] = 0x00       (0)
    0027:  UCHAR ucReserved                                [1] = 0x00       (0)
  0028:  ATOM_ASIC_SS_ASSIGNMENT asSpreadSpectrum        [3] :
    0028:  ULONG ulTargetClockRange                            = 0x00ffffff (16777215)
    002c:  USHORT usSpreadSpectrumPercentage                   = 0x0000     (0)
    002e:  USHORT usSpreadRateInKhz                            = 0x0c45     (3141)
    0030:  UCHAR ucClockIndication                             = 0x07       (7)
    0031:  UCHAR ucSpreadSpectrumMode                          = 0x12       (18)
    0032:  UCHAR ucReserved                                [0] = 0x00       (0)
    0033:  UCHAR ucReserved                                [1] = 0x00       (0)

  Total data structure size:  0034


data_table  0000b368  #1b  (TV_VideoMode_DispOutInfo):


  00000000:            1400 0000  e436 0000  5302 0202        .....6..S...
  00000010: 0000 0000  1521 3400  1800 00ff  ff00 1e21    .....!4........!
  00000020: 3400 4c00  03ff ff00  1e22 3400  4c04 09ff    4.L......"4.L...
  00000030: ff00 ffff  0006 0106  ff                      .........       


data_table  00000000  #1c  (VRAM_Info):


data_table  00000000  #1d  (MemoryTrainingInfo_ASIC_MVDDQ_Info):


data_table  0000b128  #1e  (IntegratedSystemInfo):


  00000000:            204e 0000  407e 0500  204e 0000         N..@~.. N..
  00000010: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000020: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000030: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000040: 1405 0000  0000 0000  0000 0000  0000 0000    ................
  00000050: 0000 0000  0000 7401  0000 0002  0000 0000    ......t.........
  00000060: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000070: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000080: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000090: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000a0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000b0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000c0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000d0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000e0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000000f0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000100: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000110: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000120: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000130: 0000 0000  3421 0000  0000 0000  0000 0000    ....4!..........
  00000140: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000150: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000160: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  00000170: 0000 0000  8c00 0101  0000 0000  0000 0000    ................
  00000180: 0000 0000  0000 0000  0800 1002  0331 0000    .............1..
  00000190: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001a0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001b0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001c0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001d0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001e0: 0000 0000  0000 0000  0000 0000  0000 0000    ................
  000001f0: 0000 0000  0000 0000  0000 0000  0000 0000    ................

  NOTE: Dumper revision differs.   Used:   Format Rev. 01  Content Rev. 06

  0000:  ATOM_COMMON_TABLE_HEADER sHeader                    :
    0000:  USHORT usStructureSize                              = 0x0200     (512)
    0002:  UCHAR ucTableFormatRevision                         = 0x01       (1)
    0003:  UCHAR ucTableContentRevision                        = 0x08       (8)
  0004:  ULONG ulBootUpEngineClock                           = 0x00004e20 (20000)
  0008:  ULONG ulDentistVCOFreq                              = 0x00057e40 (360000)
  000c:  ULONG ulBootUpUMAClock                              = 0x00004e20 (20000)
  0010:  ATOM_CLK_VOLT_CAPABILITY sDISPCLK_Voltage       [0] :
    0010:  ULONG ulVoltageIndex                                = 0x00000000 (0)
    0014:  ULONG ulMaximumSupportedCLK                         = 0x00000000 (0)
  0018:  ATOM_CLK_VOLT_CAPABILITY sDISPCLK_Voltage       [1] :
    0018:  ULONG ulVoltageIndex                                = 0x00000000 (0)
    001c:  ULONG ulMaximumSupportedCLK                         = 0x00000000 (0)
  0020:  ATOM_CLK_VOLT_CAPABILITY sDISPCLK_Voltage       [2] :
    0020:  ULONG ulVoltageIndex                                = 0x00000000 (0)
    0024:  ULONG ulMaximumSupportedCLK                         = 0x00000000 (0)
  0028:  ATOM_CLK_VOLT_CAPABILITY sDISPCLK_Voltage       [3] :
    0028:  ULONG ulVoltageIndex                                = 0x00000000 (0)
    002c:  ULONG ulMaximumSupportedCLK                         = 0x00000000 (0)
  0030:  ULONG ulBootUpReqDisplayVector                      = 0x00000000 (0)
  0034:  ULONG ulOtherDisplayMisc                            = 0x00000000 (0)
  0038:  ULONG ulGPUCapInfo                                  = 0x00000000 (0)
  003c:  ULONG ulSB_MMIO_Base_Addr                           = 0x00000000 (0)
  0040:  USHORT usRequestedPWMFreqInHz                       = 0x0514     (1300)
  0042:  UCHAR ucHtcTmpLmt                                   = 0x00       (0)
  0043:  UCHAR ucHtcHystLmt                                  = 0x00       (0)
  0044:  ULONG ulMinEngineClock                              = 0x00000000 (0)
  0048:  ULONG ulSystemConfig                                = 0x00000000 (0)
  004c:  ULONG ulCPUCapInfo                                  = 0x00000000 (0)
  0050:  USHORT usNBP0Voltage                                = 0x0000     (0)
  0052:  USHORT usNBP1Voltage                                = 0x0000     (0)
  0054:  USHORT usBootUpNBVoltage                            = 0x0000     (0)
  0056:  USHORT usExtDispConnInfoOffset                      = 0x0174     (372)
  0058:  USHORT usPanelRefreshRateRange                      = 0x0000     (0)
  005a:  UCHAR ucMemoryType                                  = 0x00       (0)
  005b:  UCHAR ucUMAChannelNumber                            = 0x02       (2)
  005c:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [0] = 0x00000000 (0)
  0060:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [1] = 0x00000000 (0)
  0064:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [2] = 0x00000000 (0)
  0068:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [3] = 0x00000000 (0)
  006c:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [4] = 0x00000000 (0)
  0070:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [5] = 0x00000000 (0)
  0074:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [6] = 0x00000000 (0)
  0078:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [7] = 0x00000000 (0)
  007c:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [8] = 0x00000000 (0)
  0080:  ULONG ulCSR_M3_ARB_CNTL_DEFAULT                 [9] = 0x00000000 (0)
  0084:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [0] = 0x00000000 (0)
  0088:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [1] = 0x00000000 (0)
  008c:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [2] = 0x00000000 (0)
  0090:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [3] = 0x00000000 (0)
  0094:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [4] = 0x00000000 (0)
  0098:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [5] = 0x00000000 (0)
  009c:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [6] = 0x00000000 (0)
  00a0:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [7] = 0x00000000 (0)
  00a4:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [8] = 0x00000000 (0)
  00a8:  ULONG ulCSR_M3_ARB_CNTL_UVD                     [9] = 0x00000000 (0)
  00ac:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [0] = 0x00000000 (0)
  00b0:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [1] = 0x00000000 (0)
  00b4:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [2] = 0x00000000 (0)
  00b8:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [3] = 0x00000000 (0)
  00bc:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [4] = 0x00000000 (0)
  00c0:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [5] = 0x00000000 (0)
  00c4:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [6] = 0x00000000 (0)
  00c8:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [7] = 0x00000000 (0)
  00cc:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [8] = 0x00000000 (0)
  00d0:  ULONG ulCSR_M3_ARB_CNTL_FS3D                    [9] = 0x00000000 (0)
  00d4:  ATOM_AVAILABLE_SCLK_LIST sAvail_SCLK            [0] :
    00d4:  ULONG ulSupportedSCLK                               = 0x00000000 (0)
    00d8:  USHORT usVoltageIndex                               = 0x0000     (0)
    00da:  USHORT usVoltageID                                  = 0x0000     (0)
  00dc:  ATOM_AVAILABLE_SCLK_LIST sAvail_SCLK            [1] :
    00dc:  ULONG ulSupportedSCLK                               = 0x00000000 (0)
    00e0:  USHORT usVoltageIndex                               = 0x0000     (0)
    00e2:  USHORT usVoltageID                                  = 0x0000     (0)
  00e4:  ATOM_AVAILABLE_SCLK_LIST sAvail_SCLK            [2] :
    00e4:  ULONG ulSupportedSCLK                               = 0x00000000 (0)
    00e8:  USHORT usVoltageIndex                               = 0x0000     (0)
    00ea:  USHORT usVoltageID                                  = 0x0000     (0)
  00ec:  ATOM_AVAILABLE_SCLK_LIST sAvail_SCLK            [3] :
    00ec:  ULONG ulSupportedSCLK                               = 0x00000000 (0)
    00f0:  USHORT usVoltageIndex                               = 0x0000     (0)
    00f2:  USHORT usVoltageID                                  = 0x0000     (0)
  00f4:  ATOM_AVAILABLE_SCLK_LIST sAvail_SCLK            [4] :
    00f4:  ULONG ulSupportedSCLK                               = 0x00000000 (0)
    00f8:  USHORT usVoltageIndex                               = 0x0000     (0)
    00fa:  USHORT usVoltageID                                  = 0x0000     (0)
  00fc:  ULONG ulGMCRestoreResetTime                         = 0x00000000 (0)
  0100:  ULONG ulMinimumNClk                                 = 0x00000000 (0)
  0104:  ULONG ulIdleNClk                                    = 0x00000000 (0)
  0108:  ULONG ulDDR_DLL_PowerUpTime                         = 0x00000000 (0)
  010c:  ULONG ulDDR_PLL_PowerUpTime                         = 0x00000000 (0)
  0110:  USHORT usPCIEClkSSPercentage                        = 0x0000     (0)
  0112:  USHORT usPCIEClkSSType                              = 0x0000     (0)
  0114:  USHORT usLvdsSSPercentage                           = 0x0000     (0)
  0116:  USHORT usLvdsSSpreadRateIn10Hz                      = 0x0000     (0)
  0118:  USHORT usHDMISSPercentage                           = 0x0000     (0)
  011a:  USHORT usHDMISSpreadRateIn10Hz                      = 0x0000     (0)
  011c:  USHORT usDVISSPercentage                            = 0x0000     (0)
  011e:  USHORT usDVISSpreadRateIn10Hz                       = 0x0000     (0)
  0120:  ULONG ulReserved3                               [0] = 0x00000000 (0)
  0124:  ULONG ulReserved3                               [1] = 0x00000000 (0)
  0128:  ULONG ulReserved3                               [2] = 0x00000000 (0)
  012c:  ULONG ulReserved3                               [3] = 0x00000000 (0)
  0130:  ULONG ulReserved3                               [4] = 0x00000000 (0)
  0134:  ULONG ulReserved3                               [5] = 0x00002134 (8500)
  0138:  ULONG ulReserved3                               [6] = 0x00000000 (0)
  013c:  ULONG ulReserved3                               [7] = 0x00000000 (0)
  0140:  ULONG ulReserved3                               [8] = 0x00000000 (0)
  0144:  ULONG ulReserved3                               [9] = 0x00000000 (0)
  0148:  ULONG ulReserved3                              [10] = 0x00000000 (0)
  014c:  ULONG ulReserved3                              [11] = 0x00000000 (0)
  0150:  ULONG ulReserved3                              [12] = 0x00000000 (0)
  0154:  ULONG ulReserved3                              [13] = 0x00000000 (0)
  0158:  ULONG ulReserved3                              [14] = 0x00000000 (0)
  015c:  ULONG ulReserved3                              [15] = 0x00000000 (0)
  0160:  ULONG ulReserved3                              [16] = 0x00000000 (0)
  0164:  ULONG ulReserved3                              [17] = 0x00000000 (0)
  0168:  ULONG ulReserved3                              [18] = 0x00000000 (0)
  016c:  ULONG ulReserved3                              [19] = 0x00000000 (0)
  0170:  ULONG ulReserved3                              [20] = 0x00000000 (0)
  0174:  ATOM_EXTERNAL_DISPLAY_CONNECTION_INFO sExtDispConnInfo :
    0174:  ATOM_COMMON_TABLE_HEADER sHeader                    :
      0174:  USHORT usStructureSize                              = 0x008c     (140)
      0176:  UCHAR ucTableFormatRevision                         = 0x01       (1)
      0177:  UCHAR ucTableContentRevision                        = 0x01       (1)
    0178:  UCHAR ucGuid                                    [0] = 0x00       (0)
    0179:  UCHAR ucGuid                                    [1] = 0x00       (0)
    017a:  UCHAR ucGuid                                    [2] = 0x00       (0)
    017b:  UCHAR ucGuid                                    [3] = 0x00       (0)
    017c:  UCHAR ucGuid                                    [4] = 0x00       (0)
    017d:  UCHAR ucGuid                                    [5] = 0x00       (0)
    017e:  UCHAR ucGuid                                    [6] = 0x00       (0)
    017f:  UCHAR ucGuid                                    [7] = 0x00       (0)
    0180:  UCHAR ucGuid                                    [8] = 0x00       (0)
    0181:  UCHAR ucGuid                                    [9] = 0x00       (0)
    0182:  UCHAR ucGuid                                   [10] = 0x00       (0)
    0183:  UCHAR ucGuid                                   [11] = 0x00       (0)
    0184:  UCHAR ucGuid                                   [12] = 0x00       (0)
    0185:  UCHAR ucGuid                                   [13] = 0x00       (0)
    0186:  UCHAR ucGuid                                   [14] = 0x00       (0)
    0187:  UCHAR ucGuid                                   [15] = 0x00       (0)
    0188:  EXT_DISPLAY_PATH sPath                          [0] :
      0188:  USHORT usDeviceTag                                  = 0x0008     (8)
      018a:  USHORT usDeviceACPIEnum                             = 0x0210     (528)
      018c:  USHORT usDeviceConnector                            = 0x3103     (12547)
      018e:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      018f:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      0190:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    0198:  EXT_DISPLAY_PATH sPath                          [1] :
      0198:  USHORT usDeviceTag                                  = 0x0000     (0)
      019a:  USHORT usDeviceACPIEnum                             = 0x0000     (0)
      019c:  USHORT usDeviceConnector                            = 0x0000     (0)
      019e:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      019f:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      01a0:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    01a8:  EXT_DISPLAY_PATH sPath                          [2] :
      01a8:  USHORT usDeviceTag                                  = 0x0000     (0)
      01aa:  USHORT usDeviceACPIEnum                             = 0x0000     (0)
      01ac:  USHORT usDeviceConnector                            = 0x0000     (0)
      01ae:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      01af:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      01b0:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    01b8:  EXT_DISPLAY_PATH sPath                          [3] :
      01b8:  USHORT usDeviceTag                                  = 0x0000     (0)
      01ba:  USHORT usDeviceACPIEnum                             = 0x0000     (0)
      01bc:  USHORT usDeviceConnector                            = 0x0000     (0)
      01be:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      01bf:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      01c0:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    01c8:  EXT_DISPLAY_PATH sPath                          [4] :
      01c8:  USHORT usDeviceTag                                  = 0x0000     (0)
      01ca:  USHORT usDeviceACPIEnum                             = 0x0000     (0)
      01cc:  USHORT usDeviceConnector                            = 0x0000     (0)
      01ce:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      01cf:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      01d0:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    01d8:  EXT_DISPLAY_PATH sPath                          [5] :
      01d8:  USHORT usDeviceTag                                  = 0x0000     (0)
      01da:  USHORT usDeviceACPIEnum                             = 0x0000     (0)
      01dc:  USHORT usDeviceConnector                            = 0x0000     (0)
      01de:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      01df:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      01e0:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    01e8:  EXT_DISPLAY_PATH sPath                          [6] :
      01e8:  USHORT usDeviceTag                                  = 0x0000     (0)
      01ea:  USHORT usDeviceACPIEnum                             = 0x0000     (0)
      01ec:  USHORT usDeviceConnector                            = 0x0000     (0)
      01ee:  UCHAR ucExtAUXDDCLutIndex                           = 0x00       (0)
      01ef:  UCHAR ucExtHPDPINLutIndex                           = 0x00       (0)
      01f0:  USHORT usExtEncoderObjId                            = 0x0000     (0)
        <unparsable> line 2436:   union{
      skipping...
    01f8:  UCHAR ucChecksum                                    = 0x00       (0)
    01f9:  UCHAR uc3DStereoPinId                               = 0x00       (0)
    01fa:  UCHAR Reserved                                  [0] = 0x00       (0)
    01fb:  UCHAR Reserved                                  [1] = 0x00       (0)
    01fc:  UCHAR Reserved                                  [2] = 0x00       (0)
    01fd:  UCHAR Reserved                                  [3] = 0x00       (0)
    01fe:  UCHAR Reserved                                  [4] = 0x00       (0)
    01ff:  UCHAR Reserved                                  [5] = 0x00       (0)

  Total data structure size:  0200


data_table  00000000  #1f  (ASIC_ProfilingInfo_ASIC_VDDCI_Info):


data_table  00000000  #20  (VoltageObjectInfo_VRAM_GPIO_DetectionInfo):


data_table  00000000  #21  (PowerSourceInfo):


